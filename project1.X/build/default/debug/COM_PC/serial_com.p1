Version 3.2 HI-TECH Software Intermediate Code
"194 /opt/microchip/xc8/v1.41/include/stdio.h
[v _sprintf `(i ~T0 @X0 0 e1v`*uc`*Cuc ]
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;errno.h: 29: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
[; ;stdlib.h: 7: typedef unsigned short wchar_t;
[; ;stdlib.h: 15: typedef struct {
[; ;stdlib.h: 16: int rem;
[; ;stdlib.h: 17: int quot;
[; ;stdlib.h: 18: } div_t;
[; ;stdlib.h: 19: typedef struct {
[; ;stdlib.h: 20: unsigned rem;
[; ;stdlib.h: 21: unsigned quot;
[; ;stdlib.h: 22: } udiv_t;
[; ;stdlib.h: 23: typedef struct {
[; ;stdlib.h: 24: long quot;
[; ;stdlib.h: 25: long rem;
[; ;stdlib.h: 26: } ldiv_t;
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: unsigned long quot;
[; ;stdlib.h: 29: unsigned long rem;
[; ;stdlib.h: 30: } uldiv_t;
[; ;stdlib.h: 53: extern double atof(const char *);
[; ;stdlib.h: 54: extern double strtod(const char *, const char **);
[; ;stdlib.h: 55: extern int atoi(const char *);
[; ;stdlib.h: 56: extern unsigned xtoi(const char *);
[; ;stdlib.h: 57: extern long atol(const char *);
[; ;stdlib.h: 58: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 60: extern int rand(void);
[; ;stdlib.h: 61: extern void srand(unsigned int);
[; ;stdlib.h: 62: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 63: extern div_t div(int numer, int denom);
[; ;stdlib.h: 64: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 65: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 66: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 67: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 68: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 69: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 70: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 75: extern void * malloc(size_t);
[; ;stdlib.h: 76: extern void free(void *);
[; ;stdlib.h: 77: extern void * realloc(void *, size_t);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;stdlib.h: 86: extern int atexit(void (*)(void));
[; ;stdlib.h: 87: extern char * getenv(const char *);
[; ;stdlib.h: 88: extern char ** environ;
[; ;stdlib.h: 89: extern int system(char *);
[; ;stdlib.h: 90: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 91: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 92: extern int abs(int);
[; ;stdlib.h: 93: extern long labs(long);
[; ;stdlib.h: 95: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 96: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 101: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 102: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 104: extern char * ftoa(float f, int * status);
[; ;assert.h: 18: extern void _fassert(int, const char *, const char *);
[; ;assert.h: 25: extern void __builtin_software_breakpoint(void);
[; ;serial_com.h: 23: char* reply_message_serial_com(int oper, int* data);
"9 COM_PC/serial_com.c
[v _reply_message_serial_com `(*uc ~T0 @X0 1 ef2`i`*i ]
{
[; ;serial_com.c: 9: char* reply_message_serial_com(int oper, int data[]){
[e :U _reply_message_serial_com ]
[v _oper `i ~T0 @X0 1 r1 ]
[v _data `*i ~T0 @X0 1 r2 ]
[f ]
"11
[v _str `uc ~T0 @X0 -> 248 `i a ]
[; ;serial_com.c: 11: char str[248];
[; ;serial_com.c: 13: switch(oper){
"13
[e $U 8  ]
{
[; ;serial_com.c: 14: case(0xC0):
"14
[e :U 9 ]
[; ;serial_com.c: 15: sprintf(str,"%d %d %d %d %d %d",0xFD,0xC0,data[0],data[1],data[2],0xFE); break;
"15
[e ( _sprintf (1 , , , , , , (. , &U _str :s 1C -> 253 `i -> 192 `i *U + _data * -> -> 0 `i `x -> -> # *U _data `i `x *U + _data * -> -> 1 `i `x -> -> # *U _data `i `x *U + _data * -> -> 2 `i `x -> -> # *U _data `i `x -> 254 `i ]
[e $U 7  ]
[; ;serial_com.c: 16: case(0xC1):
"16
[e :U 10 ]
[; ;serial_com.c: 17: sprintf(str,"%d %d %d %d",0xFD,0xC1,0,0xFE); break;
"17
[e ( _sprintf (1 , , , , (. , &U _str :s 2C -> 253 `i -> 193 `i -> 0 `i -> 254 `i ]
[e $U 7  ]
[; ;serial_com.c: 18: case(0xC2):
"18
[e :U 11 ]
[; ;serial_com.c: 19: sprintf(str,"%d %d %d %d %d",0xFD,0xC2,data[0],data[1],0xFE); break;
"19
[e ( _sprintf (1 , , , , , (. , &U _str :s 3C -> 253 `i -> 194 `i *U + _data * -> -> 0 `i `x -> -> # *U _data `i `x *U + _data * -> -> 1 `i `x -> -> # *U _data `i `x -> 254 `i ]
[e $U 7  ]
[; ;serial_com.c: 20: case(0xC3):
"20
[e :U 12 ]
[; ;serial_com.c: 21: sprintf(str,"%d %d %d %d %d %d",0xFD,0xC3,data[0],data[1],data[2],0xFE); break;
"21
[e ( _sprintf (1 , , , , , , (. , &U _str :s 4C -> 253 `i -> 195 `i *U + _data * -> -> 0 `i `x -> -> # *U _data `i `x *U + _data * -> -> 1 `i `x -> -> # *U _data `i `x *U + _data * -> -> 2 `i `x -> -> # *U _data `i `x -> 254 `i ]
[e $U 7  ]
[; ;serial_com.c: 22: case(0xC4):
"22
[e :U 13 ]
[; ;serial_com.c: 23: sprintf(str,"%d %d %d %d",0xFD,0xC4,0,0xFE); break;
"23
[e ( _sprintf (1 , , , , (. , &U _str :s 5C -> 253 `i -> 196 `i -> 0 `i -> 254 `i ]
[e $U 7  ]
[; ;serial_com.c: 24: case(0xC5):
"24
[e :U 14 ]
[; ;serial_com.c: 25: sprintf(str,"%d %d %d %d",0xFD,0xC5,0,0xFE); break;
"25
[e ( _sprintf (1 , , , , (. , &U _str :s 6C -> 253 `i -> 197 `i -> 0 `i -> 254 `i ]
[e $U 7  ]
[; ;serial_com.c: 26: case(0xC6):
"26
[e :U 15 ]
[; ;serial_com.c: 27: sprintf(str,"%d %d %d %d %d %d",0xFD,0xC6,data[0],data[1],data[2],0xFE); break;
"27
[e ( _sprintf (1 , , , , , , (. , &U _str :s 7C -> 253 `i -> 198 `i *U + _data * -> -> 0 `i `x -> -> # *U _data `i `x *U + _data * -> -> 1 `i `x -> -> # *U _data `i `x *U + _data * -> -> 2 `i `x -> -> # *U _data `i `x -> 254 `i ]
[e $U 7  ]
[; ;serial_com.c: 28: case(0xC7):
"28
[e :U 16 ]
[; ;serial_com.c: 29: sprintf(str,"%d %d %d %d",0xFD,0xC7,0,0xFE); break;
"29
[e ( _sprintf (1 , , , , (. , &U _str :s 8C -> 253 `i -> 199 `i -> 0 `i -> 254 `i ]
[e $U 7  ]
[; ;serial_com.c: 30: case(0xC8):
"30
[e :U 17 ]
[; ;serial_com.c: 31: sprintf(str,"%d %d %d %d",0xFD,0xC8,0,0xFE); break;
"31
[e ( _sprintf (1 , , , , (. , &U _str :s 9C -> 253 `i -> 200 `i -> 0 `i -> 254 `i ]
[e $U 7  ]
[; ;serial_com.c: 32: case(0xC9):
"32
[e :U 18 ]
[; ;serial_com.c: 33: sprintf(str,"%d %d %d %d %d %d %d %d",0xFD,0xC9,data[0],data[1],data[2],data[3],data[4],0xFE); break;
"33
[e ( _sprintf (1 , , , , , , , , (. , &U _str :s 10C -> 253 `i -> 201 `i *U + _data * -> -> 0 `i `x -> -> # *U _data `i `x *U + _data * -> -> 1 `i `x -> -> # *U _data `i `x *U + _data * -> -> 2 `i `x -> -> # *U _data `i `x *U + _data * -> -> 3 `i `x -> -> # *U _data `i `x *U + _data * -> -> 4 `i `x -> -> # *U _data `i `x -> 254 `i ]
[e $U 7  ]
[; ;serial_com.c: 34: case(0xCA):
"34
[e :U 19 ]
[; ;serial_com.c: 35: sprintf(str,"%d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d",0xFD,0xCA,data[0],data[1],data[2],data[3],data[4],data[5],data[6],data[7],data[8],data[9],data[10],data[11],data[12],data[13],data[14],data[15],data[16],data[17],data[
"35
[e ( _sprintf (1 , , , , , , , , , , , , , , , , , , , , , , , (. , &U _str :s 11C -> 253 `i -> 202 `i *U + _data * -> -> 0 `i `x -> -> # *U _data `i `x *U + _data * -> -> 1 `i `x -> -> # *U _data `i `x *U + _data * -> -> 2 `i `x -> -> # *U _data `i `x *U + _data * -> -> 3 `i `x -> -> # *U _data `i `x *U + _data * -> -> 4 `i `x -> -> # *U _data `i `x *U + _data * -> -> 5 `i `x -> -> # *U _data `i `x *U + _data * -> -> 6 `i `x -> -> # *U _data `i `x *U + _data * -> -> 7 `i `x -> -> # *U _data `i `x *U + _data * -> -> 8 `i `x -> -> # *U _data `i `x *U + _data * -> -> 9 `i `x -> -> # *U _data `i `x *U + _data * -> -> 10 `i `x -> -> # *U _data `i `x *U + _data * -> -> 11 `i `x -> -> # *U _data `i `x *U + _data * -> -> 12 `i `x -> -> # *U _data `i `x *U + _data * -> -> 13 `i `x -> -> # *U _data `i `x *U + _data * -> -> 14 `i `x -> -> # *U _data `i `x *U + _data * -> -> 15 `i `x -> -> # *U _data `i `x *U + _data * -> -> 16 `i `x -> -> # *U _data `i `x *U + _data * -> -> 17 `i `x -> -> # *U _data `i `x *U + _data * -> -> 18 `i `x -> -> # *U _data `i `x *U + _data * -> -> 19 `i `x -> -> # *U _data `i `x -> 254 `i ]
[e $U 7  ]
[; ;serial_com.c: 36: case(0xCB):
"36
[e :U 20 ]
[; ;serial_com.c: 37: sprintf(str,"%d %d %d %d %d %d %d %d",0xFD,0xCB,data[0],data[1],data[2],data[3],data[4],0xFE); break;
"37
[e ( _sprintf (1 , , , , , , , , (. , &U _str :s 12C -> 253 `i -> 203 `i *U + _data * -> -> 0 `i `x -> -> # *U _data `i `x *U + _data * -> -> 1 `i `x -> -> # *U _data `i `x *U + _data * -> -> 2 `i `x -> -> # *U _data `i `x *U + _data * -> -> 3 `i `x -> -> # *U _data `i `x *U + _data * -> -> 4 `i `x -> -> # *U _data `i `x -> 254 `i ]
[e $U 7  ]
[; ;serial_com.c: 38: default:
"38
[e :U 21 ]
[; ;serial_com.c: 39: break;
"39
[e $U 7  ]
"40
}
[; ;serial_com.c: 40: }
[e $U 7  ]
"13
[e :U 8 ]
[e [\ _oper , $ -> 192 `i 9
 , $ -> 193 `i 10
 , $ -> 194 `i 11
 , $ -> 195 `i 12
 , $ -> 196 `i 13
 , $ -> 197 `i 14
 , $ -> 198 `i 15
 , $ -> 199 `i 16
 , $ -> 200 `i 17
 , $ -> 201 `i 18
 , $ -> 202 `i 19
 , $ -> 203 `i 20
 21 ]
"40
[e :U 7 ]
[; ;serial_com.c: 41: return str;
"41
[e ) &U _str ]
[e $UE 6  ]
[; ;serial_com.c: 42: }
"42
[e :UE 6 ]
}
[p f _sprintf 8388736 ]
[a 11C 37 100 32 37 100 32 37 100 32 37 100 32 37 100 32 37 100 32 37 100 32 37 100 32 37 100 32 37 100 32 37 100 32 37 100 32 37 100 32 37 100 32 37 100 32 37 100 32 37 100 32 37 100 32 37 100 32 37 100 32 37 100 32 37 100 32 37 100 0 ]
[a 10C 37 100 32 37 100 32 37 100 32 37 100 32 37 100 32 37 100 32 37 100 32 37 100 0 ]
[a 12C 37 100 32 37 100 32 37 100 32 37 100 32 37 100 32 37 100 32 37 100 32 37 100 0 ]
[a 1C 37 100 32 37 100 32 37 100 32 37 100 32 37 100 32 37 100 0 ]
[a 4C 37 100 32 37 100 32 37 100 32 37 100 32 37 100 32 37 100 0 ]
[a 7C 37 100 32 37 100 32 37 100 32 37 100 32 37 100 32 37 100 0 ]
[a 3C 37 100 32 37 100 32 37 100 32 37 100 32 37 100 0 ]
[a 2C 37 100 32 37 100 32 37 100 32 37 100 0 ]
[a 5C 37 100 32 37 100 32 37 100 32 37 100 0 ]
[a 6C 37 100 32 37 100 32 37 100 32 37 100 0 ]
[a 8C 37 100 32 37 100 32 37 100 32 37 100 0 ]
[a 9C 37 100 32 37 100 32 37 100 32 37 100 0 ]
