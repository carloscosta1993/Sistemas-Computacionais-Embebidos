

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu May 25 10:01:05 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   111                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   112  0000                     
   113                           ; Version 1.41
   114                           ; Generated 25/01/2017 GMT
   115                           ; 
   116                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   117                           ; All rights reserved.
   118                           ; 
   119                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   120                           ; 
   121                           ; Redistribution and use in source and binary forms, with or without modification, are
   122                           ; permitted provided that the following conditions are met:
   123                           ; 
   124                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   125                           ;        conditions and the following disclaimer.
   126                           ; 
   127                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   128                           ;        of conditions and the following disclaimer in the documentation and/or other
   129                           ;        materials provided with the distribution.
   130                           ; 
   131                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   132                           ;        software without specific prior written permission.
   133                           ; 
   134                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   135                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   136                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   137                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   138                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   139                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   140                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   141                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   142                           ; 
   143                           ; 
   144                           ; Code-generator required, PIC18F4520 Definitions
   145                           ; 
   146                           ; SFR Addresses
   147  0000                     
   148                           	psect	idataCOMRAM
   149  004388                     __pidataCOMRAM:
   150                           	opt stack 0
   151                           
   152                           ;initializer for _TSOM
   153  004388  0002               	dw	2
   154                           
   155                           	psect	idataBANK0
   156  00425E                     __pidataBANK0:
   157                           	opt stack 0
   158                           
   159                           ;initializer for syn_serial_commun_isr@F3557
   160  00425E  FFFF               	dw	65535
   161  004260  FFFF               	dw	65535
   162  004262  FFFF               	dw	65535
   163  004264  FFFF               	dw	65535
   164  004266  FFFF               	dw	65535
   165                           
   166                           ;initializer for assync_serial_commun@F3539
   167  004268  FFFF               	dw	65535
   168  00426A  FFFF               	dw	65535
   169  00426C  FFFF               	dw	65535
   170  00426E  FFFF               	dw	65535
   171  004270  FFFF               	dw	65535
   172                           
   173                           ;initializer for _countAlarmLuminosity
   174  004272  FFFF               	dw	65535
   175                           
   176                           ;initializer for _countMonitor
   177  004274  0002               	dw	2
   178                           
   179                           	psect	idataBANK1
   180  004358                     __pidataBANK1:
   181                           	opt stack 0
   182                           
   183                           ;initializer for _countAlarmTemperature
   184  004358  FFFF               	dw	65535
   185                           
   186                           ;initializer for _countClock
   187  00435A  0028               	dw	40
   188                           
   189                           ;initializer for _TINA
   190  00435C  000A               	dw	10
   191                           
   192                           ;initializer for _PMON
   193  00435E  0003               	dw	3
   194                           
   195                           	psect	idataBANK2
   196  003E9C                     __pidataBANK2:
   197                           	opt stack 0
   198                           
   199                           ;initializer for syn_serial_commun_isr@F3559
   200  003E9C  FFFF               	dw	65535
   201  003E9E  00                 	db	0
   202  003E9F  00                 	db	0
   203  003EA0  00                 	db	0
   204  003EA1  00                 	db	0
   205  003EA2  00                 	db	0
   206  003EA3  00                 	db	0
   207  003EA4  00                 	db	0
   208  003EA5  00                 	db	0
   209  003EA6  00                 	db	0
   210  003EA7  00                 	db	0
   211  003EA8  00                 	db	0
   212  003EA9  00                 	db	0
   213  003EAA  00                 	db	0
   214  003EAB  00                 	db	0
   215  003EAC  00                 	db	0
   216  003EAD  00                 	db	0
   217  003EAE  00                 	db	0
   218  003EAF  00                 	db	0
   219  003EB0  00                 	db	0
   220  003EB1  00                 	db	0
   221  003EB2  00                 	db	0
   222  003EB3  00                 	db	0
   223  003EB4  00                 	db	0
   224  003EB5  00                 	db	0
   225  003EB6  00                 	db	0
   226  003EB7  00                 	db	0
   227  003EB8  00                 	db	0
   228  003EB9  00                 	db	0
   229  003EBA  00                 	db	0
   230  003EBB  00                 	db	0
   231  003EBC  00                 	db	0
   232  003EBD  00                 	db	0
   233  003EBE  00                 	db	0
   234  003EBF  00                 	db	0
   235  003EC0  00                 	db	0
   236  003EC1  00                 	db	0
   237  003EC2  00                 	db	0
   238  003EC3  00                 	db	0
   239                           
   240                           ;initializer for _status
   241  003EC4  FFFF               	dw	65535
   242                           
   243                           ;initializer for _minLuminosity
   244  003EC6  000A               	dw	10
   245                           
   246                           ;initializer for _minTemperature
   247  003EC8  0064               	dw	100
   248                           
   249                           ;initializer for _maxLuminosity
   250  003ECA  FFFF               	dw	65535
   251                           
   252                           ;initializer for _maxTemperature
   253  003ECC  FFFF               	dw	65535
   254                           
   255                           ;initializer for _seconds
   256  003ECE  0028               	dw	40
   257                           
   258                           ;initializer for _minutes
   259  003ED0  001E               	dw	30
   260                           
   261                           ;initializer for _hours
   262  003ED2  0002               	dw	2
   263                           
   264                           ;initializer for _ALAL
   265  003ED4  0004               	dw	4
   266                           
   267                           ;initializer for _ALAT
   268  003ED6  001E               	dw	30
   269                           
   270                           	psect	smallconst
   271  000600                     __psmallconst:
   272                           	opt stack 0
   273  000600  00                 	db	0
   274  000601                     _dpowers:
   275                           	opt stack 0
   276  000601  0001               	dw	1
   277  000603  000A               	dw	10
   278  000605  0064               	dw	100
   279  000607  03E8               	dw	1000
   280  000609  2710               	dw	10000
   281  00060B                     __end_of_dpowers:
   282                           	opt stack 0
   283  0000                     _TRISAbits	set	3986
   284  0000                     _TRISBbits	set	3987
   285  0000                     _TRISDbits	set	3989
   286  0000                     _TRISD	set	3989
   287  0000                     _PORTD	set	3971
   288  0000                     _LATDbits	set	3980
   289  0000                     _TRISCbits	set	3988
   290  0000                     _SSPADD	set	4040
   291  0000                     _T1CONbits	set	4045
   292  0000                     _T1CON	set	4045
   293  0000                     _CCPR1L	set	4030
   294  0000                     _PR2	set	4043
   295  0000                     _T2CON	set	4042
   296  0000                     _RCONbits	set	4048
   297  0000                     _TMR1L	set	4046
   298  0000                     _TMR1H	set	4047
   299  0000                     _EECON2	set	4007
   300  0000                     _EECON1bits	set	4006
   301  0000                     _EEDATA	set	4008
   302  0000                     _EEADR	set	4009
   303  0000                     _CCP1CON	set	4029
   304  0000                     _TXREG	set	4013
   305  0000                     _RCREG	set	4014
   306  0000                     _SPBRGH	set	4016
   307  0000                     _SPBRG	set	4015
   308  0000                     _RCSTAbits	set	4011
   309  0000                     _TXSTAbits	set	4012
   310  0000                     _RCSTA	set	4011
   311  0000                     _TXSTA	set	4012
   312  0000                     _SSPCON1bits	set	4038
   313  0000                     _SSPBUF	set	4041
   314  0000                     _SSPSTATbits	set	4039
   315  0000                     _SSPCON2bits	set	4037
   316  0000                     _SSPCON2	set	4037
   317  0000                     _SSPCON1	set	4038
   318  0000                     _SSPSTAT	set	4039
   319  0000                     _ADRESL	set	4035
   320  0000                     _ADRESH	set	4036
   321  0000                     _ADCON0bits	set	4034
   322  0000                     _PIE1bits	set	3997
   323  0000                     _PIR1bits	set	3998
   324  0000                     _ADCON1	set	4033
   325  0000                     _ADCON2	set	4032
   326  0000                     _ADCON0	set	4034
   327  0000                     _TMR0	set	4054
   328  0000                     _T0CONbits	set	4053
   329  0000                     _INTCON2bits	set	4081
   330  0000                     _INTCONbits	set	4082
   331  00060B                     STR_11:
   332  00060B  25                 	db	37
   333  00060C  64                 	db	100	;'d'
   334  00060D  20                 	db	32
   335  00060E  25                 	db	37
   336  00060F  64                 	db	100	;'d'
   337  000610  20                 	db	32
   338  000611  25                 	db	37
   339  000612  64                 	db	100	;'d'
   340  000613  20                 	db	32
   341  000614  25                 	db	37
   342  000615  64                 	db	100	;'d'
   343  000616  20                 	db	32
   344  000617  25                 	db	37
   345  000618  64                 	db	100	;'d'
   346  000619  20                 	db	32
   347  00061A  25                 	db	37
   348  00061B  64                 	db	100	;'d'
   349  00061C  20                 	db	32
   350  00061D  25                 	db	37
   351  00061E  64                 	db	100	;'d'
   352  00061F  20                 	db	32
   353  000620  25                 	db	37
   354  000621  64                 	db	100	;'d'
   355  000622  20                 	db	32
   356  000623  25                 	db	37
   357  000624  64                 	db	100	;'d'
   358  000625  20                 	db	32
   359  000626  25                 	db	37
   360  000627  64                 	db	100	;'d'
   361  000628  20                 	db	32
   362  000629  25                 	db	37
   363  00062A  64                 	db	100	;'d'
   364  00062B  20                 	db	32
   365  00062C  25                 	db	37
   366  00062D  64                 	db	100	;'d'
   367  00062E  20                 	db	32
   368  00062F  25                 	db	37
   369  000630  64                 	db	100	;'d'
   370  000631  20                 	db	32
   371  000632  25                 	db	37
   372  000633  64                 	db	100	;'d'
   373  000634  20                 	db	32
   374  000635  25                 	db	37
   375  000636  64                 	db	100	;'d'
   376  000637  20                 	db	32
   377  000638  25                 	db	37
   378  000639  64                 	db	100	;'d'
   379  00063A  20                 	db	32
   380  00063B  25                 	db	37
   381  00063C  64                 	db	100	;'d'
   382  00063D  20                 	db	32
   383  00063E  25                 	db	37
   384  00063F  64                 	db	100	;'d'
   385  000640  20                 	db	32
   386  000641  25                 	db	37
   387  000642  64                 	db	100	;'d'
   388  000643  20                 	db	32
   389  000644  25                 	db	37
   390  000645  64                 	db	100	;'d'
   391  000646  20                 	db	32
   392  000647  25                 	db	37
   393  000648  64                 	db	100	;'d'
   394  000649  20                 	db	32
   395  00064A  25                 	db	37
   396  00064B  64                 	db	100	;'d'
   397  00064C  20                 	db	32
   398  00064D  25                 	db	37
   399  00064E  64                 	db	100	;'d'
   400  00064F  00                 	db	0
   401  000650                     STR_57:
   402  000650  41                 	db	65	;'A'
   403  000651  73                 	db	115	;'s'
   404  000652  73                 	db	115	;'s'
   405  000653  65                 	db	101	;'e'
   406  000654  72                 	db	114	;'r'
   407  000655  74                 	db	116	;'t'
   408  000656  69                 	db	105	;'i'
   409  000657  6F                 	db	111	;'o'
   410  000658  6E                 	db	110	;'n'
   411  000659  20                 	db	32
   412  00065A  66                 	db	102	;'f'
   413  00065B  61                 	db	97	;'a'
   414  00065C  69                 	db	105	;'i'
   415  00065D  6C                 	db	108	;'l'
   416  00065E  65                 	db	101	;'e'
   417  00065F  64                 	db	100	;'d'
   418  000660  3A                 	db	58	;':'
   419  000661  20                 	db	32
   420  000662  25                 	db	37
   421  000663  73                 	db	115	;'s'
   422  000664  20                 	db	32
   423  000665  6C                 	db	108	;'l'
   424  000666  69                 	db	105	;'i'
   425  000667  6E                 	db	110	;'n'
   426  000668  65                 	db	101	;'e'
   427  000669  20                 	db	32
   428  00066A  25                 	db	37
   429  00066B  64                 	db	100	;'d'
   430  00066C  3A                 	db	58	;':'
   431  00066D  20                 	db	32
   432  00066E  22                 	db	34
   433  00066F  25                 	db	37
   434  000670  73                 	db	115	;'s'
   435  000671  22                 	db	34
   436  000672  0A                 	db	10
   437  000673  00                 	db	0
   438  000674                     STR_47:
   439  000674  6F                 	db	111	;'o'
   440  000675  70                 	db	112	;'p'
   441  000676  65                 	db	101	;'e'
   442  000677  72                 	db	114	;'r'
   443  000678  3D                 	db	61	;'='
   444  000679  3D                 	db	61	;'='
   445  00067A  30                 	db	48	;'0'
   446  00067B  78                 	db	120	;'x'
   447  00067C  46                 	db	70	;'F'
   448  00067D  44                 	db	68	;'D'
   449  00067E  00                 	db	0
   450  00067F                     STR_49:
   451  00067F  6F                 	db	111	;'o'
   452  000680  70                 	db	112	;'p'
   453  000681  65                 	db	101	;'e'
   454  000682  72                 	db	114	;'r'
   455  000683  21                 	db	33
   456  000684  3D                 	db	61	;'='
   457  000685  30                 	db	48	;'0'
   458  000686  78                 	db	120	;'x'
   459  000687  46                 	db	70	;'F'
   460  000688  45                 	db	69	;'E'
   461  000689  00                 	db	0
   462  00068A                     STR_53:
   463  00068A  6F                 	db	111	;'o'
   464  00068B  70                 	db	112	;'p'
   465  00068C  65                 	db	101	;'e'
   466  00068D  72                 	db	114	;'r'
   467  00068E  3D                 	db	61	;'='
   468  00068F  3D                 	db	61	;'='
   469  000690  30                 	db	48	;'0'
   470  000691  78                 	db	120	;'x'
   471  000692  46                 	db	70	;'F'
   472  000693  45                 	db	69	;'E'
   473  000694  00                 	db	0
   474  000695                     STR_56:
   475  000695  28                 	db	40
   476  000696  6E                 	db	110	;'n'
   477  000697  75                 	db	117	;'u'
   478  000698  6C                 	db	108	;'l'
   479  000699  6C                 	db	108	;'l'
   480  00069A  29                 	db	41
   481  00069B  00                 	db	0
   482  00069C                     STR_46:
   483  00069C  6D                 	db	109	;'m'
   484  00069D  61                 	db	97	;'a'
   485  00069E  69                 	db	105	;'i'
   486  00069F  6E                 	db	110	;'n'
   487  0006A0  2E                 	db	46
   488  0006A1  63                 	db	99	;'c'
   489  0006A2  00                 	db	0
   490  0006A3                     STR_51:
   491  0006A3  31                 	db	49	;'1'
   492  0006A4  3D                 	db	61	;'='
   493  0006A5  3D                 	db	61	;'='
   494  0006A6  30                 	db	48	;'0'
   495  0006A7  00                 	db	0
   496  0006A8                     STR_14:
   497  0006A8  30                 	db	48	;'0'
   498  0006A9  25                 	db	37
   499  0006AA  64                 	db	100	;'d'
   500  0006AB  00                 	db	0
   501  0006AC                     STR_25:
   502  0006AC  20                 	db	32
   503  0006AD  20                 	db	32
   504  0006AE  00                 	db	0
   505  0006AF                     STR_24:
   506  0006AF  6D                 	db	109	;'m'
   507  0006B0  4D                 	db	77	;'M'
   508  0006B1  00                 	db	0
   509  0006B2                     STR_13:
   510  0006B2  00                 	db	0
   511  0006B3  00                 	db	0
   512  0006B4                     STR_16:
   513  0006B4  3A                 	db	58	;':'
   514  0006B5  00                 	db	0
   515  0006B6                     STR_30:
   516  0006B6  41                 	db	65	;'A'
   517  0006B7  00                 	db	0
   518  0006B8                     STR_39:
   519  0006B8  43                 	db	67	;'C'
   520  0006B9  00                 	db	0
   521  0006BA                     STR_28:
   522  0006BA  4C                 	db	76	;'L'
   523  0006BB  00                 	db	0
   524  0006BC                     STR_26:
   525  0006BC  54                 	db	84	;'T'
   526  0006BD  00                 	db	0
   527  0006BE                     STR_31:
   528  0006BE  61                 	db	97	;'a'
   529  0006BF  00                 	db	0
   530  0000                     
   531                           ; #config settings
   532  0006C0  00                 	db	0	; dummy byte at the end
   533  0000                     
   534                           	psect	cinit
   535  003502                     __pcinit:
   536                           	opt stack 0
   537  003502                     start_initialization:
   538                           	opt stack 0
   539  003502                     __initialization:
   540                           	opt stack 0
   541                           
   542                           ; Initialize objects allocated to BANK2 (60 bytes)
   543                           ; load TBLPTR registers with __pidataBANK2
   544  003502  0E9C               	movlw	low __pidataBANK2
   545  003504  6EF6               	movwf	tblptrl,c
   546  003506  0E3E               	movlw	high __pidataBANK2
   547  003508  6EF7               	movwf	tblptrh,c
   548  00350A  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   549  00350C  6EF8               	movwf	tblptru,c
   550  00350E  EE02  F000         	lfsr	0,__pdataBANK2
   551  003512  EE10 F03C          	lfsr	1,60
   552  003516                     copy_data0:
   553  003516  0009               	tblrd		*+
   554  003518  CFF5 FFEE          	movff	tablat,postinc0
   555  00351C  50E5               	movf	postdec1,w,c
   556  00351E  50E1               	movf	fsr1l,w,c
   557  003520  E1FA               	bnz	copy_data0
   558                           
   559                           ; Initialize objects allocated to BANK1 (8 bytes)
   560                           ; load TBLPTR registers with __pidataBANK1
   561  003522  0E58               	movlw	low __pidataBANK1
   562  003524  6EF6               	movwf	tblptrl,c
   563  003526  0E43               	movlw	high __pidataBANK1
   564  003528  6EF7               	movwf	tblptrh,c
   565  00352A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   566  00352C  6EF8               	movwf	tblptru,c
   567  00352E  EE01  F0F8         	lfsr	0,__pdataBANK1
   568  003532  EE10 F008          	lfsr	1,8
   569  003536                     copy_data1:
   570  003536  0009               	tblrd		*+
   571  003538  CFF5 FFEE          	movff	tablat,postinc0
   572  00353C  50E5               	movf	postdec1,w,c
   573  00353E  50E1               	movf	fsr1l,w,c
   574  003540  E1FA               	bnz	copy_data1
   575                           
   576                           ; Initialize objects allocated to BANK0 (24 bytes)
   577                           ; load TBLPTR registers with __pidataBANK0
   578  003542  0E5E               	movlw	low __pidataBANK0
   579  003544  6EF6               	movwf	tblptrl,c
   580  003546  0E42               	movlw	high __pidataBANK0
   581  003548  6EF7               	movwf	tblptrh,c
   582  00354A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   583  00354C  6EF8               	movwf	tblptru,c
   584  00354E  EE00  F0D5         	lfsr	0,__pdataBANK0
   585  003552  EE10 F018          	lfsr	1,24
   586  003556                     copy_data2:
   587  003556  0009               	tblrd		*+
   588  003558  CFF5 FFEE          	movff	tablat,postinc0
   589  00355C  50E5               	movf	postdec1,w,c
   590  00355E  50E1               	movf	fsr1l,w,c
   591  003560  E1FA               	bnz	copy_data2
   592                           
   593                           ; Initialize objects allocated to COMRAM (2 bytes)
   594                           ; load TBLPTR registers with __pidataCOMRAM
   595  003562  0E88               	movlw	low __pidataCOMRAM
   596  003564  6EF6               	movwf	tblptrl,c
   597  003566  0E43               	movlw	high __pidataCOMRAM
   598  003568  6EF7               	movwf	tblptrh,c
   599  00356A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   600  00356C  6EF8               	movwf	tblptru,c
   601  00356E  0009               	tblrd		*+	;fetch initializer
   602  003570  CFF5 F07D          	movff	tablat,__pdataCOMRAM
   603  003574  0009               	tblrd		*+	;fetch initializer
   604  003576  CFF5 F07E          	movff	tablat,__pdataCOMRAM+1
   605                           
   606                           ; Clear objects allocated to BANK2 (56 bytes)
   607  00357A  EE02  F075         	lfsr	0,__pbssBANK2
   608  00357E  0E38               	movlw	56
   609  003580                     clear_0:
   610  003580  6AEE               	clrf	postinc0,c
   611  003582  06E8               	decf	wreg,f,c
   612  003584  E1FD               	bnz	clear_0
   613                           
   614                           ; Clear objects allocated to BANK0 (13 bytes)
   615  003586  EE00  F0ED         	lfsr	0,__pbssBANK0
   616  00358A  0E0D               	movlw	13
   617  00358C                     clear_1:
   618  00358C  6AEE               	clrf	postinc0,c
   619  00358E  06E8               	decf	wreg,f,c
   620  003590  E1FD               	bnz	clear_1
   621                           
   622                           ; Clear objects allocated to COMRAM (2 bytes)
   623  003592  6A7C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   624  003594  6A7B               	clrf	__pbssCOMRAM& (0+255),c
   625  003596                     end_of_initialization:
   626                           	opt stack 0
   627  003596                     __end_of__initialization:
   628                           	opt stack 0
   629  003596  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   630  003598  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   631  00359A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   632  00359C  6EF8               	movwf	tblptru,c
   633  00359E  0100               	movlb	0
   634  0035A0  EF28  F013         	goto	_main	;jump to C main() function
   635                           tblptru	equ	0xFF8
   636                           tblptrh	equ	0xFF7
   637                           tblptrl	equ	0xFF6
   638                           tablat	equ	0xFF5
   639                           postinc0	equ	0xFEE
   640                           wreg	equ	0xFE8
   641                           postdec1	equ	0xFE5
   642                           fsr1l	equ	0xFE1
   643                           
   644                           	psect	bssCOMRAM
   645  00007B                     __pbssCOMRAM:
   646                           	opt stack 0
   647  00007B                     _mode:
   648                           	opt stack 0
   649  00007B                     	ds	2
   650                           tblptru	equ	0xFF8
   651                           tblptrh	equ	0xFF7
   652                           tblptrl	equ	0xFF6
   653                           tablat	equ	0xFF5
   654                           postinc0	equ	0xFEE
   655                           wreg	equ	0xFE8
   656                           postdec1	equ	0xFE5
   657                           fsr1l	equ	0xFE1
   658                           
   659                           	psect	dataCOMRAM
   660  00007D                     __pdataCOMRAM:
   661                           	opt stack 0
   662  00007D                     _TSOM:
   663                           	opt stack 0
   664  00007D                     	ds	2
   665                           tblptru	equ	0xFF8
   666                           tblptrh	equ	0xFF7
   667                           tblptrl	equ	0xFF6
   668                           tablat	equ	0xFF5
   669                           postinc0	equ	0xFEE
   670                           wreg	equ	0xFE8
   671                           postdec1	equ	0xFE5
   672                           fsr1l	equ	0xFE1
   673                           
   674                           	psect	bssBANK0
   675  0000ED                     __pbssBANK0:
   676                           	opt stack 0
   677  0000ED                     _errno:
   678                           	opt stack 0
   679  0000ED                     	ds	2
   680  0000EF                     _iALLON:
   681                           	opt stack 0
   682  0000EF                     	ds	2
   683  0000F1                     _iALTON:
   684                           	opt stack 0
   685  0000F1                     	ds	2
   686  0000F3                     _countSaveTime:
   687                           	opt stack 0
   688  0000F3                     	ds	2
   689  0000F5                     _countTINA:
   690                           	opt stack 0
   691  0000F5                     	ds	2
   692  0000F7                     _Addrlo:
   693                           	opt stack 0
   694  0000F7                     	ds	1
   695  0000F8                     _Addrhi:
   696                           	opt stack 0
   697  0000F8                     	ds	1
   698  0000F9                     _USART_Status:
   699                           	opt stack 0
   700  0000F9                     	ds	1
   701                           tblptru	equ	0xFF8
   702                           tblptrh	equ	0xFF7
   703                           tblptrl	equ	0xFF6
   704                           tablat	equ	0xFF5
   705                           postinc0	equ	0xFEE
   706                           wreg	equ	0xFE8
   707                           postdec1	equ	0xFE5
   708                           fsr1l	equ	0xFE1
   709                           
   710                           	psect	dataBANK0
   711  0000D5                     __pdataBANK0:
   712                           	opt stack 0
   713  0000D5                     syn_serial_commun_isr@F3557:
   714                           	opt stack 0
   715  0000D5                     	ds	10
   716  0000DF                     assync_serial_commun@F3539:
   717                           	opt stack 0
   718  0000DF                     	ds	10
   719  0000E9                     _countAlarmLuminosity:
   720                           	opt stack 0
   721  0000E9                     	ds	2
   722  0000EB                     _countMonitor:
   723                           	opt stack 0
   724  0000EB                     	ds	2
   725                           tblptru	equ	0xFF8
   726                           tblptrh	equ	0xFF7
   727                           tblptrl	equ	0xFF6
   728                           tablat	equ	0xFF5
   729                           postinc0	equ	0xFEE
   730                           wreg	equ	0xFE8
   731                           postdec1	equ	0xFE5
   732                           fsr1l	equ	0xFE1
   733                           
   734                           	psect	dataBANK1
   735  0001F8                     __pdataBANK1:
   736                           	opt stack 0
   737  0001F8                     _countAlarmTemperature:
   738                           	opt stack 0
   739  0001F8                     	ds	2
   740  0001FA                     _countClock:
   741                           	opt stack 0
   742  0001FA                     	ds	2
   743  0001FC                     _TINA:
   744                           	opt stack 0
   745  0001FC                     	ds	2
   746  0001FE                     _PMON:
   747                           	opt stack 0
   748  0001FE                     	ds	2
   749                           tblptru	equ	0xFF8
   750                           tblptrh	equ	0xFF7
   751                           tblptrl	equ	0xFF6
   752                           tablat	equ	0xFF5
   753                           postinc0	equ	0xFEE
   754                           wreg	equ	0xFE8
   755                           postdec1	equ	0xFE5
   756                           fsr1l	equ	0xFE1
   757                           
   758                           	psect	bssBANK2
   759  000275                     __pbssBANK2:
   760                           	opt stack 0
   761  000275                     _dataInEEEPROM:
   762                           	opt stack 0
   763  000275                     	ds	20
   764  000289                     _updateExternalEEPROM:
   765                           	opt stack 0
   766  000289                     	ds	8
   767  000291                     _pressedMode:
   768                           	opt stack 0
   769  000291                     	ds	2
   770  000293                     _goToSleep:
   771                           	opt stack 0
   772  000293                     	ds	2
   773  000295                     _updateIEEPROM:
   774                           	opt stack 0
   775  000295                     	ds	2
   776  000297                     _updateDisplay:
   777                           	opt stack 0
   778  000297                     	ds	2
   779  000299                     _wALLON:
   780                           	opt stack 0
   781  000299                     	ds	2
   782  00029B                     _wALTON:
   783                           	opt stack 0
   784  00029B                     	ds	2
   785  00029D                     _displayLuminosity:
   786                           	opt stack 0
   787  00029D                     	ds	2
   788  00029F                     _displayTemperature:
   789                           	opt stack 0
   790  00029F                     	ds	2
   791  0002A1                     _luminosity:
   792                           	opt stack 0
   793  0002A1                     	ds	2
   794  0002A3                     _temperature:
   795                           	opt stack 0
   796  0002A3                     	ds	2
   797  0002A5                     _displaySeconds:
   798                           	opt stack 0
   799  0002A5                     	ds	2
   800  0002A7                     _displayMinutes:
   801                           	opt stack 0
   802  0002A7                     	ds	2
   803  0002A9                     _displayHours:
   804                           	opt stack 0
   805  0002A9                     	ds	2
   806  0002AB                     _ALAF:
   807                           	opt stack 0
   808  0002AB                     	ds	2
   809                           tblptru	equ	0xFF8
   810                           tblptrh	equ	0xFF7
   811                           tblptrl	equ	0xFF6
   812                           tablat	equ	0xFF5
   813                           postinc0	equ	0xFEE
   814                           wreg	equ	0xFE8
   815                           postdec1	equ	0xFE5
   816                           fsr1l	equ	0xFE1
   817                           
   818                           	psect	dataBANK2
   819  000200                     __pdataBANK2:
   820                           	opt stack 0
   821  000200                     syn_serial_commun_isr@F3559:
   822                           	opt stack 0
   823  000200                     	ds	40
   824  000228                     _status:
   825                           	opt stack 0
   826  000228                     	ds	2
   827  00022A                     _minLuminosity:
   828                           	opt stack 0
   829  00022A                     	ds	2
   830  00022C                     _minTemperature:
   831                           	opt stack 0
   832  00022C                     	ds	2
   833  00022E                     _maxLuminosity:
   834                           	opt stack 0
   835  00022E                     	ds	2
   836  000230                     _maxTemperature:
   837                           	opt stack 0
   838  000230                     	ds	2
   839  000232                     _seconds:
   840                           	opt stack 0
   841  000232                     	ds	2
   842  000234                     _minutes:
   843                           	opt stack 0
   844  000234                     	ds	2
   845  000236                     _hours:
   846                           	opt stack 0
   847  000236                     	ds	2
   848  000238                     _ALAL:
   849                           	opt stack 0
   850  000238                     	ds	2
   851  00023A                     _ALAT:
   852                           	opt stack 0
   853  00023A                     	ds	2
   854                           tblptru	equ	0xFF8
   855                           tblptrh	equ	0xFF7
   856                           tblptrl	equ	0xFF6
   857                           tablat	equ	0xFF5
   858                           postinc0	equ	0xFEE
   859                           wreg	equ	0xFE8
   860                           postdec1	equ	0xFE5
   861                           fsr1l	equ	0xFE1
   862                           
   863                           	psect	cstackBANK2
   864  00023C                     __pcstackBANK2:
   865                           	opt stack 0
   866  00023C                     ??_SetDDRamAddr:
   867  00023C                     ??_WriteI2C:
   868  00023C                     ?___wmul:
   869                           	opt stack 0
   870  00023C                     ?___lwdiv:
   871                           	opt stack 0
   872  00023C                     ?___lmul:
   873                           	opt stack 0
   874  00023C                     OpenI2C@slew:
   875                           	opt stack 0
   876  00023C                     WriteCmdXLCD@cmd:
   877                           	opt stack 0
   878  00023C                     WriteDataXLCD@data:
   879                           	opt stack 0
   880  00023C                     writeIEEPROM@Data:
   881                           	opt stack 0
   882  00023C                     OpenUSART@spbrg:
   883                           	opt stack 0
   884  00023C                     DelayExternalEEPROM@i:
   885                           	opt stack 0
   886  00023C                     ___wmul@multiplier:
   887                           	opt stack 0
   888  00023C                     ___lwdiv@dividend:
   889                           	opt stack 0
   890  00023C                     ___lmul@multiplier:
   891                           	opt stack 0
   892                           
   893                           ; 4 bytes @ 0x0
   894  00023C                     	ds	1
   895  00023D                     OpenI2C@sync_mode:
   896                           	opt stack 0
   897  00023D                     WriteI2C@data_out:
   898                           	opt stack 0
   899  00023D                     writeIEEPROM@Addr:
   900                           	opt stack 0
   901  00023D                     putrsXLCD@buffer:
   902                           	opt stack 0
   903  00023D                     putsXLCD@buffer:
   904                           	opt stack 0
   905                           
   906                           ; 2 bytes @ 0x1
   907  00023D                     	ds	1
   908  00023E                     OpenUSART@config:
   909                           	opt stack 0
   910  00023E                     readEEEPROM@Addrlo:
   911                           	opt stack 0
   912  00023E                     writeIEEPROM@saveGIE:
   913                           	opt stack 0
   914  00023E                     ___wmul@multiplicand:
   915                           	opt stack 0
   916  00023E                     ___lwdiv@divisor:
   917                           	opt stack 0
   918                           
   919                           ; 2 bytes @ 0x2
   920  00023E                     	ds	1
   921  00023F                     ??_readEEEPROM:
   922  00023F                     SetDDRamAddr@DDaddr:
   923                           	opt stack 0
   924                           
   925                           ; 1 bytes @ 0x3
   926  00023F                     	ds	1
   927  000240                     readEEEPROM@Addrhi:
   928                           	opt stack 0
   929  000240                     ___wmul@product:
   930                           	opt stack 0
   931  000240                     ___lwdiv@quotient:
   932                           	opt stack 0
   933  000240                     ___lmul@multiplicand:
   934                           	opt stack 0
   935                           
   936                           ; 4 bytes @ 0x4
   937  000240                     	ds	1
   938  000241                     readEEEPROM@value:
   939                           	opt stack 0
   940                           
   941                           ; 1 bytes @ 0x5
   942  000241                     	ds	1
   943  000242                     writeEEEPROM@Addrlo:
   944                           	opt stack 0
   945  000242                     meteo_init_EEEPROM@Addrhi:
   946                           	opt stack 0
   947  000242                     ___lwdiv@counter:
   948                           	opt stack 0
   949                           
   950                           ; 1 bytes @ 0x6
   951  000242                     	ds	1
   952  000243                     ?___lwmod:
   953                           	opt stack 0
   954  000243                     writeEEEPROM@Data:
   955                           	opt stack 0
   956  000243                     meteo_init_EEEPROM@Addrlo:
   957                           	opt stack 0
   958  000243                     ___lwmod@dividend:
   959                           	opt stack 0
   960                           
   961                           ; 2 bytes @ 0x7
   962  000243                     	ds	1
   963  000244                     ??_writeEEEPROM:
   964  000244                     meteo_init_EEEPROM@dataOut:
   965                           	opt stack 0
   966  000244                     ___lmul@product:
   967                           	opt stack 0
   968                           
   969                           ; 4 bytes @ 0x8
   970  000244                     	ds	1
   971  000245                     writeEEEPROM@Addrhi:
   972                           	opt stack 0
   973  000245                     meteo_init_EEEPROM@i:
   974                           	opt stack 0
   975  000245                     ___lwmod@divisor:
   976                           	opt stack 0
   977                           
   978                           ; 2 bytes @ 0x9
   979  000245                     	ds	2
   980  000247                     ___lwmod@counter:
   981                           	opt stack 0
   982  000247                     meteo_init_EEEPROM@j:
   983                           	opt stack 0
   984                           
   985                           ; 2 bytes @ 0xB
   986  000247                     	ds	1
   987  000248                     ?__doprnt:
   988                           	opt stack 0
   989  000248                     __doprnt@pb:
   990                           	opt stack 0
   991  000248                     Delay1KTCYx@n:
   992                           	opt stack 0
   993                           
   994                           ; 4 bytes @ 0xC
   995  000248                     	ds	2
   996  00024A                     __doprnt@f:
   997                           	opt stack 0
   998                           
   999                           ; 2 bytes @ 0xE
  1000  00024A                     	ds	2
  1001  00024C                     ??_Delay1KTCYx:
  1002  00024C                     __doprnt@ap:
  1003                           	opt stack 0
  1004                           
  1005                           ; 2 bytes @ 0x10
  1006  00024C                     	ds	2
  1007  00024E                     ??__doprnt:
  1008                           
  1009                           ; 1 bytes @ 0x12
  1010  00024E                     	ds	2
  1011  000250                     OpenXLCD@lcdtype:
  1012                           	opt stack 0
  1013  000250                     __doprnt@flag:
  1014                           	opt stack 0
  1015                           
  1016                           ; 1 bytes @ 0x14
  1017  000250                     	ds	1
  1018  000251                     __doprnt@prec:
  1019                           	opt stack 0
  1020                           
  1021                           ; 1 bytes @ 0x15
  1022  000251                     	ds	1
  1023  000252                     __doprnt@val:
  1024                           	opt stack 0
  1025                           
  1026                           ; 2 bytes @ 0x16
  1027  000252                     	ds	2
  1028  000254                     __doprnt@cp:
  1029                           	opt stack 0
  1030                           
  1031                           ; 2 bytes @ 0x18
  1032  000254                     	ds	2
  1033  000256                     __doprnt@c:
  1034                           	opt stack 0
  1035                           
  1036                           ; 1 bytes @ 0x1A
  1037  000256                     	ds	1
  1038  000257                     ?_sprintf:
  1039                           	opt stack 0
  1040  000257                     sprintf@wh:
  1041                           	opt stack 0
  1042                           
  1043                           ; 2 bytes @ 0x1B
  1044  000257                     	ds	2
  1045  000259                     sprintf@f:
  1046                           	opt stack 0
  1047                           
  1048                           ; 2 bytes @ 0x1D
  1049  000259                     	ds	4
  1050  00025D                     sprintf@ap:
  1051                           	opt stack 0
  1052                           
  1053                           ; 2 bytes @ 0x21
  1054  00025D                     	ds	2
  1055  00025F                     sprintf@pb:
  1056                           	opt stack 0
  1057                           
  1058                           ; 4 bytes @ 0x23
  1059  00025F                     	ds	4
  1060  000263                     displayInterface@mode:
  1061                           	opt stack 0
  1062                           
  1063                           ; 2 bytes @ 0x27
  1064  000263                     	ds	2
  1065  000265                     displayInterface@status:
  1066                           	opt stack 0
  1067                           
  1068                           ; 2 bytes @ 0x29
  1069  000265                     	ds	2
  1070  000267                     ??_displayInterface:
  1071                           
  1072                           ; 1 bytes @ 0x2B
  1073  000267                     	ds	2
  1074  000269                     displayInterface@tmp:
  1075                           	opt stack 0
  1076                           
  1077                           ; 3 bytes @ 0x2D
  1078  000269                     	ds	3
  1079  00026C                     ??_main:
  1080                           
  1081                           ; 1 bytes @ 0x30
  1082  00026C                     	ds	2
  1083  00026E                     main@dataIn:
  1084                           	opt stack 0
  1085                           
  1086                           ; 1 bytes @ 0x32
  1087  00026E                     	ds	1
  1088  00026F                     main@dataOut2:
  1089                           	opt stack 0
  1090                           
  1091                           ; 1 bytes @ 0x33
  1092  00026F                     	ds	1
  1093  000270                     main@dataOut1:
  1094                           	opt stack 0
  1095                           
  1096                           ; 1 bytes @ 0x34
  1097  000270                     	ds	1
  1098  000271                     main@j:
  1099                           	opt stack 0
  1100                           
  1101                           ; 2 bytes @ 0x35
  1102  000271                     	ds	2
  1103  000273                     main@i:
  1104                           	opt stack 0
  1105                           
  1106                           ; 2 bytes @ 0x37
  1107  000273                     	ds	2
  1108                           tblptru	equ	0xFF8
  1109                           tblptrh	equ	0xFF7
  1110                           tblptrl	equ	0xFF6
  1111                           tablat	equ	0xFF5
  1112                           postinc0	equ	0xFEE
  1113                           wreg	equ	0xFE8
  1114                           postdec1	equ	0xFE5
  1115                           fsr1l	equ	0xFE1
  1116                           
  1117                           	psect	cstackBANK1
  1118  000100                     __pcstackBANK1:
  1119                           	opt stack 0
  1120  000100                     reply_message_serial_com@str:
  1121                           	opt stack 0
  1122                           
  1123                           ; 248 bytes @ 0x0
  1124  000100                     	ds	248
  1125                           tblptru	equ	0xFF8
  1126                           tblptrh	equ	0xFF7
  1127                           tblptrl	equ	0xFF6
  1128                           tablat	equ	0xFF5
  1129                           postinc0	equ	0xFEE
  1130                           wreg	equ	0xFE8
  1131                           postdec1	equ	0xFE5
  1132                           fsr1l	equ	0xFE1
  1133                           
  1134                           	psect	cstackBANK0
  1135  000080                     __pcstackBANK0:
  1136                           	opt stack 0
  1137  000080                     syn_serial_commun_isr@request_message:
  1138                           	opt stack 0
  1139                           
  1140                           ; 16 bytes @ 0x0
  1141  000080                     	ds	16
  1142  000090                     syn_serial_commun_isr@count:
  1143                           	opt stack 0
  1144                           
  1145                           ; 2 bytes @ 0x10
  1146  000090                     	ds	2
  1147  000092                     syn_serial_commun_isr@reply_data:
  1148                           	opt stack 0
  1149                           
  1150                           ; 40 bytes @ 0x12
  1151  000092                     	ds	40
  1152  0000BA                     syn_serial_commun_isr@request_data:
  1153                           	opt stack 0
  1154                           
  1155                           ; 10 bytes @ 0x3A
  1156  0000BA                     	ds	10
  1157  0000C4                     syn_serial_commun_isr@reply_message:
  1158                           	opt stack 0
  1159                           
  1160                           ; 2 bytes @ 0x44
  1161  0000C4                     	ds	2
  1162  0000C6                     syn_serial_commun_isr@start:
  1163                           	opt stack 0
  1164                           
  1165                           ; 2 bytes @ 0x46
  1166  0000C6                     	ds	2
  1167  0000C8                     syn_serial_commun_isr@end:
  1168                           	opt stack 0
  1169                           
  1170                           ; 2 bytes @ 0x48
  1171  0000C8                     	ds	2
  1172  0000CA                     syn_serial_commun_isr@c:
  1173                           	opt stack 0
  1174                           
  1175                           ; 1 bytes @ 0x4A
  1176  0000CA                     	ds	1
  1177  0000CB                     syn_serial_commun_isr@start_msg:
  1178                           	opt stack 0
  1179                           
  1180                           ; 2 bytes @ 0x4B
  1181  0000CB                     	ds	2
  1182  0000CD                     syn_serial_commun_isr@msg:
  1183                           	opt stack 0
  1184                           
  1185                           ; 2 bytes @ 0x4D
  1186  0000CD                     	ds	2
  1187  0000CF                     syn_serial_commun_isr@j:
  1188                           	opt stack 0
  1189                           
  1190                           ; 2 bytes @ 0x4F
  1191  0000CF                     	ds	2
  1192  0000D1                     syn_serial_commun_isr@oper:
  1193                           	opt stack 0
  1194                           
  1195                           ; 2 bytes @ 0x51
  1196  0000D1                     	ds	2
  1197  0000D3                     syn_serial_commun_isr@i:
  1198                           	opt stack 0
  1199                           
  1200                           ; 2 bytes @ 0x53
  1201  0000D3                     	ds	2
  1202                           tblptru	equ	0xFF8
  1203                           tblptrh	equ	0xFF7
  1204                           tblptrl	equ	0xFF6
  1205                           tablat	equ	0xFF5
  1206                           postinc0	equ	0xFEE
  1207                           wreg	equ	0xFE8
  1208                           postdec1	equ	0xFE5
  1209                           fsr1l	equ	0xFE1
  1210                           
  1211                           	psect	cstackCOMRAM
  1212  000001                     __pcstackCOMRAM:
  1213                           	opt stack 0
  1214  000001                     ??_isdigit:
  1215  000001                     ??i2_WriteI2C:
  1216  000001                     ?_strlen:
  1217                           	opt stack 0
  1218  000001                     ?_ReadADC:
  1219                           	opt stack 0
  1220  000001                     ?___awdiv:
  1221                           	opt stack 0
  1222  000001                     ?___awmod:
  1223                           	opt stack 0
  1224  000001                     ?i2___wmul:
  1225                           	opt stack 0
  1226  000001                     ?i2___lwdiv:
  1227                           	opt stack 0
  1228  000001                     ?___ftpack:
  1229                           	opt stack 0
  1230  000001                     ?___fttol:
  1231                           	opt stack 0
  1232  000001                     OpenADC@config2:
  1233                           	opt stack 0
  1234  000001                     ReadUSART@data:
  1235                           	opt stack 0
  1236  000001                     WriteUSART@data:
  1237                           	opt stack 0
  1238  000001                     ___awdiv@dividend:
  1239                           	opt stack 0
  1240  000001                     ___awmod@dividend:
  1241                           	opt stack 0
  1242  000001                     memset@p1:
  1243                           	opt stack 0
  1244  000001                     strlen@s:
  1245                           	opt stack 0
  1246  000001                     i2DelayExternalEEPROM@i:
  1247                           	opt stack 0
  1248  000001                     i2___wmul@multiplier:
  1249                           	opt stack 0
  1250  000001                     i2___lwdiv@dividend:
  1251                           	opt stack 0
  1252  000001                     ___ftpack@arg:
  1253                           	opt stack 0
  1254  000001                     frexp@value:
  1255                           	opt stack 0
  1256  000001                     ___ftge@ff1:
  1257                           	opt stack 0
  1258  000001                     ___fttol@f1:
  1259                           	opt stack 0
  1260  000001                     Delay10TCYx@n:
  1261                           	opt stack 0
  1262                           
  1263                           ; 4 bytes @ 0x0
  1264  000001                     	ds	1
  1265  000002                     OpenADC@portconfig:
  1266                           	opt stack 0
  1267  000002                     _isdigit$2308:
  1268                           	opt stack 0
  1269  000002                     i2WriteI2C@data_out:
  1270                           	opt stack 0
  1271                           
  1272                           ; 1 bytes @ 0x1
  1273  000002                     	ds	1
  1274  000003                     ??_strlen:
  1275  000003                     ??_OpenADC:
  1276  000003                     ??_ReadADC:
  1277  000003                     ??_getTemperature:
  1278  000003                     isdigit@c:
  1279                           	opt stack 0
  1280  000003                     i2readEEEPROM@Addrlo:
  1281                           	opt stack 0
  1282  000003                     ___awdiv@divisor:
  1283                           	opt stack 0
  1284  000003                     ___awmod@divisor:
  1285                           	opt stack 0
  1286  000003                     memset@c:
  1287                           	opt stack 0
  1288  000003                     i2___wmul@multiplicand:
  1289                           	opt stack 0
  1290  000003                     i2___lwdiv@divisor:
  1291                           	opt stack 0
  1292                           
  1293                           ; 2 bytes @ 0x2
  1294  000003                     	ds	1
  1295  000004                     ??i2_readEEEPROM:
  1296  000004                     getTemperature@value:
  1297                           	opt stack 0
  1298  000004                     ___ftpack@exp:
  1299                           	opt stack 0
  1300  000004                     frexp@eptr:
  1301                           	opt stack 0
  1302  000004                     ___ftge@ff2:
  1303                           	opt stack 0
  1304                           
  1305                           ; 3 bytes @ 0x3
  1306  000004                     	ds	1
  1307  000005                     ??___fttol:
  1308  000005                     OpenADC@config:
  1309                           	opt stack 0
  1310  000005                     ___awdiv@counter:
  1311                           	opt stack 0
  1312  000005                     ___awmod@counter:
  1313                           	opt stack 0
  1314  000005                     ___ftpack@sign:
  1315                           	opt stack 0
  1316  000005                     i2readEEEPROM@Addrhi:
  1317                           	opt stack 0
  1318  000005                     memset@n:
  1319                           	opt stack 0
  1320  000005                     strlen@cp:
  1321                           	opt stack 0
  1322  000005                     i2___wmul@product:
  1323                           	opt stack 0
  1324  000005                     i2___lwdiv@quotient:
  1325                           	opt stack 0
  1326                           
  1327                           ; 2 bytes @ 0x4
  1328  000005                     	ds	1
  1329  000006                     ??___ftpack:
  1330  000006                     ??_frexp:
  1331  000006                     ___awdiv@sign:
  1332                           	opt stack 0
  1333  000006                     ___awmod@sign:
  1334                           	opt stack 0
  1335  000006                     i2readEEEPROM@value:
  1336                           	opt stack 0
  1337                           
  1338                           ; 1 bytes @ 0x5
  1339  000006                     	ds	1
  1340  000007                     ??_ra4_isr:
  1341  000007                     ??___ftge:
  1342  000007                     ?_atoi:
  1343                           	opt stack 0
  1344  000007                     i2___lwdiv@counter:
  1345                           	opt stack 0
  1346  000007                     atoi@s:
  1347                           	opt stack 0
  1348  000007                     ___awdiv@quotient:
  1349                           	opt stack 0
  1350  000007                     memset@p:
  1351                           	opt stack 0
  1352                           
  1353                           ; 2 bytes @ 0x6
  1354  000007                     	ds	1
  1355  000008                     ?i2___lwmod:
  1356                           	opt stack 0
  1357  000008                     i2___lwmod@dividend:
  1358                           	opt stack 0
  1359                           
  1360                           ; 2 bytes @ 0x7
  1361  000008                     	ds	1
  1362  000009                     ??_atoi:
  1363  000009                     ?___ftadd:
  1364                           	opt stack 0
  1365  000009                     ?___awtoft:
  1366                           	opt stack 0
  1367  000009                     ___awtoft@c:
  1368                           	opt stack 0
  1369  000009                     ___ftadd@f1:
  1370                           	opt stack 0
  1371                           
  1372                           ; 3 bytes @ 0x8
  1373  000009                     	ds	1
  1374  00000A                     ___fttol@sign1:
  1375                           	opt stack 0
  1376  00000A                     i2___lwmod@divisor:
  1377                           	opt stack 0
  1378                           
  1379                           ; 2 bytes @ 0x9
  1380  00000A                     	ds	1
  1381  00000B                     atoi@sign:
  1382                           	opt stack 0
  1383  00000B                     ___fttol@lval:
  1384                           	opt stack 0
  1385                           
  1386                           ; 4 bytes @ 0xA
  1387  00000B                     	ds	1
  1388  00000C                     ___awtoft@sign:
  1389                           	opt stack 0
  1390  00000C                     i2___lwmod@counter:
  1391                           	opt stack 0
  1392  00000C                     atoi@a:
  1393                           	opt stack 0
  1394  00000C                     ___ftadd@f2:
  1395                           	opt stack 0
  1396                           
  1397                           ; 3 bytes @ 0xB
  1398  00000C                     	ds	1
  1399  00000D                     ?i2__doprnt:
  1400                           	opt stack 0
  1401  00000D                     i2__doprnt@pb:
  1402                           	opt stack 0
  1403                           
  1404                           ; 2 bytes @ 0xC
  1405  00000D                     	ds	2
  1406  00000F                     ??___ftadd:
  1407  00000F                     ___fttol@exp1:
  1408                           	opt stack 0
  1409  00000F                     i2__doprnt@f:
  1410                           	opt stack 0
  1411                           
  1412                           ; 2 bytes @ 0xE
  1413  00000F                     	ds	1
  1414  000010                     ?___altoft:
  1415                           	opt stack 0
  1416  000010                     ___altoft@c:
  1417                           	opt stack 0
  1418                           
  1419                           ; 4 bytes @ 0xF
  1420  000010                     	ds	1
  1421  000011                     i2__doprnt@ap:
  1422                           	opt stack 0
  1423                           
  1424                           ; 2 bytes @ 0x10
  1425  000011                     	ds	1
  1426  000012                     ___ftadd@sign:
  1427                           	opt stack 0
  1428                           
  1429                           ; 1 bytes @ 0x11
  1430  000012                     	ds	1
  1431  000013                     ??i2__doprnt:
  1432  000013                     ___ftadd@exp2:
  1433                           	opt stack 0
  1434                           
  1435                           ; 1 bytes @ 0x12
  1436  000013                     	ds	1
  1437  000014                     ??___altoft:
  1438  000014                     ___ftadd@exp1:
  1439                           	opt stack 0
  1440                           
  1441                           ; 1 bytes @ 0x13
  1442  000014                     	ds	1
  1443  000015                     i2__doprnt@flag:
  1444                           	opt stack 0
  1445                           
  1446                           ; 1 bytes @ 0x14
  1447  000015                     	ds	1
  1448  000016                     i2__doprnt@prec:
  1449                           	opt stack 0
  1450                           
  1451                           ; 1 bytes @ 0x15
  1452  000016                     	ds	1
  1453  000017                     i2__doprnt@val:
  1454                           	opt stack 0
  1455                           
  1456                           ; 2 bytes @ 0x16
  1457  000017                     	ds	1
  1458  000018                     ___altoft@exp:
  1459                           	opt stack 0
  1460                           
  1461                           ; 1 bytes @ 0x17
  1462  000018                     	ds	1
  1463  000019                     ___altoft@sign:
  1464                           	opt stack 0
  1465  000019                     i2__doprnt@cp:
  1466                           	opt stack 0
  1467                           
  1468                           ; 2 bytes @ 0x18
  1469  000019                     	ds	1
  1470  00001A                     ?_floor:
  1471                           	opt stack 0
  1472  00001A                     floor@x:
  1473                           	opt stack 0
  1474                           
  1475                           ; 3 bytes @ 0x19
  1476  00001A                     	ds	1
  1477  00001B                     i2__doprnt@c:
  1478                           	opt stack 0
  1479                           
  1480                           ; 1 bytes @ 0x1A
  1481  00001B                     	ds	1
  1482  00001C                     ?_printf:
  1483                           	opt stack 0
  1484  00001C                     ?i2_sprintf:
  1485                           	opt stack 0
  1486  00001C                     printf@f:
  1487                           	opt stack 0
  1488  00001C                     i2sprintf@wh:
  1489                           	opt stack 0
  1490                           
  1491                           ; 2 bytes @ 0x1B
  1492  00001C                     	ds	1
  1493  00001D                     floor@i:
  1494                           	opt stack 0
  1495                           
  1496                           ; 3 bytes @ 0x1C
  1497  00001D                     	ds	1
  1498  00001E                     i2sprintf@f:
  1499                           	opt stack 0
  1500                           
  1501                           ; 2 bytes @ 0x1D
  1502  00001E                     	ds	2
  1503  000020                     floor@expon:
  1504                           	opt stack 0
  1505                           
  1506                           ; 2 bytes @ 0x1F
  1507  000020                     	ds	2
  1508  000022                     ?_getLuminosity:
  1509                           	opt stack 0
  1510                           
  1511                           ; 2 bytes @ 0x21
  1512  000022                     	ds	2
  1513  000024                     printf@ap:
  1514                           	opt stack 0
  1515  000024                     getLuminosity@result:
  1516                           	opt stack 0
  1517                           
  1518                           ; 3 bytes @ 0x23
  1519  000024                     	ds	2
  1520  000026                     printf@pb:
  1521                           	opt stack 0
  1522                           
  1523                           ; 4 bytes @ 0x25
  1524  000026                     	ds	1
  1525  000027                     _getLuminosity$2787:
  1526                           	opt stack 0
  1527                           
  1528                           ; 3 bytes @ 0x26
  1529  000027                     	ds	3
  1530  00002A                     getLuminosity@level:
  1531                           	opt stack 0
  1532  00002A                     __fassert@line:
  1533                           	opt stack 0
  1534                           
  1535                           ; 2 bytes @ 0x29
  1536  00002A                     	ds	2
  1537  00002C                     getLuminosity@read:
  1538                           	opt stack 0
  1539  00002C                     __fassert@file:
  1540                           	opt stack 0
  1541                           
  1542                           ; 2 bytes @ 0x2B
  1543  00002C                     	ds	2
  1544  00002E                     __fassert@exp:
  1545                           	opt stack 0
  1546                           
  1547                           ; 2 bytes @ 0x2D
  1548  00002E                     	ds	2
  1549  000030                     
  1550                           ; 1 bytes @ 0x2F
  1551  000030                     	ds	30
  1552  00004E                     i2sprintf@ap:
  1553                           	opt stack 0
  1554                           
  1555                           ; 2 bytes @ 0x4D
  1556  00004E                     	ds	2
  1557  000050                     i2sprintf@pb:
  1558                           	opt stack 0
  1559                           
  1560                           ; 4 bytes @ 0x4F
  1561  000050                     	ds	4
  1562  000054                     ?_reply_message_serial_com:
  1563                           	opt stack 0
  1564  000054                     reply_message_serial_com@oper:
  1565                           	opt stack 0
  1566                           
  1567                           ; 2 bytes @ 0x53
  1568  000054                     	ds	2
  1569  000056                     reply_message_serial_com@data:
  1570                           	opt stack 0
  1571                           
  1572                           ; 2 bytes @ 0x55
  1573  000056                     	ds	2
  1574  000058                     ??_reply_message_serial_com:
  1575                           
  1576                           ; 1 bytes @ 0x57
  1577  000058                     	ds	2
  1578  00005A                     ??_syn_serial_commun_isr:
  1579  00005A                     assync_serial_commun@c:
  1580                           	opt stack 0
  1581                           
  1582                           ; 1 bytes @ 0x59
  1583  00005A                     	ds	1
  1584  00005B                     assync_serial_commun@reply_message:
  1585                           	opt stack 0
  1586                           
  1587                           ; 2 bytes @ 0x5A
  1588  00005B                     	ds	2
  1589  00005D                     assync_serial_commun@i:
  1590                           	opt stack 0
  1591                           
  1592                           ; 2 bytes @ 0x5C
  1593  00005D                     	ds	2
  1594  00005F                     assync_serial_commun@reply_data:
  1595                           	opt stack 0
  1596                           
  1597                           ; 10 bytes @ 0x5E
  1598  00005F                     	ds	10
  1599  000069                     ??_timer1_isr:
  1600                           
  1601                           ; 1 bytes @ 0x68
  1602  000069                     	ds	2
  1603  00006B                     timer1_isr@k:
  1604                           	opt stack 0
  1605                           
  1606                           ; 2 bytes @ 0x6A
  1607  00006B                     	ds	2
  1608  00006D                     ??_ISR:
  1609                           
  1610                           ; 1 bytes @ 0x6C
  1611  00006D                     	ds	14
  1612                           tblptru	equ	0xFF8
  1613                           tblptrh	equ	0xFF7
  1614                           tblptrl	equ	0xFF6
  1615                           tablat	equ	0xFF5
  1616                           postinc0	equ	0xFEE
  1617                           wreg	equ	0xFE8
  1618                           postdec1	equ	0xFE5
  1619                           fsr1l	equ	0xFE1
  1620                           
  1621 ;;
  1622 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1623 ;;
  1624 ;; *************** function _main *****************
  1625 ;; Defined at:
  1626 ;;		line 1055 in file "main.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;		None
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;  i               2   55[BANK2 ] int 
  1631 ;;  j               2   53[BANK2 ] int 
  1632 ;;  dataOut1        1   52[BANK2 ] unsigned char 
  1633 ;;  dataOut2        1   51[BANK2 ] unsigned char 
  1634 ;;  dataIn          1   50[BANK2 ] unsigned char 
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  1    wreg      void 
  1637 ;; Registers used:
  1638 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1644 ;;      Params:         0       0       0       0       0       0       0
  1645 ;;      Locals:         0       0       0       7       0       0       0
  1646 ;;      Temps:          0       0       0       2       0       0       0
  1647 ;;      Totals:         0       0       0       9       0       0       0
  1648 ;;Total ram usage:        9 bytes
  1649 ;; Hardware stack levels required when called:   12
  1650 ;; This function calls:
  1651 ;;		_BusyXLCD
  1652 ;;		_DelayExternalEEPROM
  1653 ;;		_LCD_init
  1654 ;;		_RA4_init
  1655 ;;		_RBO_init
  1656 ;;		_TC74_init
  1657 ;;		_USART_init
  1658 ;;		_WriteCmdXLCD
  1659 ;;		___wmul
  1660 ;;		_buzzer_init
  1661 ;;		_displayInterface
  1662 ;;		_global_init
  1663 ;;		_meteo_init_EEEPROM
  1664 ;;		_readEEEPROM
  1665 ;;		_timer1_init
  1666 ;;		_writeEEEPROM
  1667 ;;		_writeIEEPROM
  1668 ;; This function is called by:
  1669 ;;		Startup code after reset
  1670 ;; This function uses a non-reentrant model
  1671 ;;
  1672                           
  1673                           	psect	text0
  1674  002650                     __ptext0:
  1675                           	opt stack 0
  1676  002650                     _main:
  1677                           	opt stack 19
  1678                           
  1679                           ;main.c: 1058: int i, j;
  1680                           ;main.c: 1059: unsigned char dataIn=5, dataOut1 = 9, dataOut2 = 0;
  1681                           
  1682                           ;incstack = 0
  1683  002650  0E05               	movlw	5
  1684  002652  0102               	movlb	2	; () banked
  1685  002654  6F6E               	movwf	main@dataIn& (0+255),b
  1686  002656  0E09               	movlw	9
  1687  002658  0102               	movlb	2	; () banked
  1688  00265A  6F70               	movwf	main@dataOut1& (0+255),b
  1689  00265C  0E00               	movlw	0
  1690  00265E  0102               	movlb	2	; () banked
  1691  002660  6F6F               	movwf	main@dataOut2& (0+255),b
  1692                           
  1693                           ; BSR set to: 2
  1694                           ;main.c: 1062: global_init();
  1695  002662  ECB0  F021         	call	_global_init	;wreg free
  1696                           
  1697                           ;main.c: 1063: RA4_init();
  1698  002666  ECC0  F021         	call	_RA4_init	;wreg free
  1699                           
  1700                           ;main.c: 1064: LCD_init();
  1701  00266A  EC8C  F021         	call	_LCD_init	;wreg free
  1702                           
  1703                           ;main.c: 1065: timer1_init();
  1704  00266E  EC5E  F021         	call	_timer1_init	;wreg free
  1705                           
  1706                           ;main.c: 1066: buzzer_init();
  1707  002672  EC84  F021         	call	_buzzer_init	;wreg free
  1708                           
  1709                           ;main.c: 1067: RBO_init();
  1710  002676  EC9B  F021         	call	_RBO_init	;wreg free
  1711                           
  1712                           ;main.c: 1068: TC74_init();
  1713  00267A  EC7B  F021         	call	_TC74_init	;wreg free
  1714                           
  1715                           ;main.c: 1069: USART_init();
  1716  00267E  EC72  F021         	call	_USART_init	;wreg free
  1717                           
  1718                           ;main.c: 1073: meteo_init_EEEPROM();
  1719  002682  EC43  F016         	call	_meteo_init_EEEPROM	;wreg free
  1720                           
  1721                           ;main.c: 1076: displayInterface(mode, status);
  1722  002686  C07B  F263         	movff	_mode,displayInterface@mode	;volatile
  1723  00268A  C07C  F264         	movff	_mode+1,displayInterface@mode+1	;volatile
  1724  00268E  C228  F265         	movff	_status,displayInterface@status	;volatile
  1725  002692  C229  F266         	movff	_status+1,displayInterface@status+1	;volatile
  1726  002696  EC61  F003         	call	_displayInterface	;wreg free
  1727  00269A                     l10706:
  1728                           
  1729                           ;main.c: 1079: if(goToSleep){
  1730  00269A  0102               	movlb	2	; () banked
  1731  00269C  5193               	movf	_goToSleep& (0+255),w,b	;volatile
  1732  00269E  0102               	movlb	2	; () banked
  1733  0026A0  1194               	iorwf	(_goToSleep+1)& (0+255),w,b	;volatile
  1734  0026A2  B4D8               	btfsc	status,2,c
  1735  0026A4  D009               	goto	l10712
  1736                           
  1737                           ; BSR set to: 2
  1738                           ;main.c: 1081: WriteCmdXLCD(0b00001011);
  1739  0026A6  0E0B               	movlw	11
  1740  0026A8  ECEA  F01E         	call	_WriteCmdXLCD
  1741  0026AC                     l10710:
  1742  0026AC  EC8A  F01F         	call	_BusyXLCD	;wreg free
  1743  0026B0  0900               	iorlw	0
  1744  0026B2  B4D8               	btfsc	status,2,c
  1745  0026B4  D016               	goto	l10718
  1746  0026B6  D7FA               	goto	l10710
  1747  0026B8                     l10712:
  1748                           
  1749                           ;main.c: 1085: else{
  1750                           ;main.c: 1087: if(updateDisplay){displayInterface(mode,status);updateDisplay=0;}
  1751  0026B8  0102               	movlb	2	; () banked
  1752  0026BA  5197               	movf	_updateDisplay& (0+255),w,b	;volatile
  1753  0026BC  0102               	movlb	2	; () banked
  1754  0026BE  1198               	iorwf	(_updateDisplay+1)& (0+255),w,b	;volatile
  1755  0026C0  B4D8               	btfsc	status,2,c
  1756  0026C2  D00F               	goto	l10718
  1757                           
  1758                           ; BSR set to: 2
  1759  0026C4  C07B  F263         	movff	_mode,displayInterface@mode	;volatile
  1760  0026C8  C07C  F264         	movff	_mode+1,displayInterface@mode+1	;volatile
  1761  0026CC  C228  F265         	movff	_status,displayInterface@status	;volatile
  1762  0026D0  C229  F266         	movff	_status+1,displayInterface@status+1	;volatile
  1763  0026D4  EC61  F003         	call	_displayInterface	;wreg free
  1764  0026D8  0E00               	movlw	0
  1765  0026DA  0102               	movlb	2	; () banked
  1766  0026DC  6F98               	movwf	(_updateDisplay+1)& (0+255),b	;volatile
  1767  0026DE  0E00               	movlw	0
  1768  0026E0  6F97               	movwf	_updateDisplay& (0+255),b	;volatile
  1769  0026E2                     l10718:
  1770                           
  1771                           ;main.c: 1088: }
  1772                           ;main.c: 1091: for(i=0;i<4;i++){
  1773  0026E2  0E00               	movlw	0
  1774  0026E4  0102               	movlb	2	; () banked
  1775  0026E6  6F74               	movwf	(main@i+1)& (0+255),b
  1776  0026E8  0E00               	movlw	0
  1777  0026EA  6F73               	movwf	main@i& (0+255),b
  1778  0026EC                     l10720:
  1779                           
  1780                           ; BSR set to: 2
  1781  0026EC  0102               	movlb	2	; () banked
  1782  0026EE  BF74               	btfsc	(main@i+1)& (0+255),7,b
  1783  0026F0  D008               	goto	l10724
  1784  0026F2  0102               	movlb	2	; () banked
  1785  0026F4  5174               	movf	(main@i+1)& (0+255),w,b
  1786  0026F6  E16A               	bnz	l10748
  1787  0026F8  0E04               	movlw	4
  1788  0026FA  0102               	movlb	2	; () banked
  1789  0026FC  5D73               	subwf	main@i& (0+255),w,b
  1790  0026FE  B0D8               	btfsc	status,0,c
  1791  002700  D065               	goto	l10748
  1792  002702                     l10724:
  1793                           
  1794                           ; BSR set to: 2
  1795                           ;main.c: 1092: if(updateExternalEEPROM[i]){
  1796  002702  90D8               	bcf	status,0,c
  1797  002704  0102               	movlb	2	; () banked
  1798  002706  3573               	rlcf	main@i& (0+255),w,b
  1799  002708  6ED9               	movwf	fsr2l,c
  1800  00270A  0102               	movlb	2	; () banked
  1801  00270C  3574               	rlcf	(main@i+1)& (0+255),w,b
  1802  00270E  6EDA               	movwf	fsr2h,c
  1803  002710  0E89               	movlw	low _updateExternalEEPROM
  1804  002712  26D9               	addwf	fsr2l,f,c
  1805  002714  0E02               	movlw	high _updateExternalEEPROM
  1806  002716  22DA               	addwfc	fsr2h,f,c
  1807  002718  50DE               	movf	postinc2,w,c
  1808  00271A  10DE               	iorwf	postinc2,w,c
  1809  00271C  B4D8               	btfsc	status,2,c
  1810  00271E  D052               	goto	l10744
  1811                           
  1812                           ; BSR set to: 2
  1813                           ;main.c: 1093: for(j=0;j<5;j++){
  1814  002720  0E00               	movlw	0
  1815  002722  0102               	movlb	2	; () banked
  1816  002724  6F72               	movwf	(main@j+1)& (0+255),b
  1817  002726  0E00               	movlw	0
  1818  002728  6F71               	movwf	main@j& (0+255),b
  1819  00272A                     l10728:
  1820                           
  1821                           ; BSR set to: 2
  1822  00272A  0102               	movlb	2	; () banked
  1823  00272C  BF72               	btfsc	(main@j+1)& (0+255),7,b
  1824  00272E  D008               	goto	l10732
  1825  002730  0102               	movlb	2	; () banked
  1826  002732  5172               	movf	(main@j+1)& (0+255),w,b
  1827  002734  E147               	bnz	l10744
  1828  002736  0E05               	movlw	5
  1829  002738  0102               	movlb	2	; () banked
  1830  00273A  5D71               	subwf	main@j& (0+255),w,b
  1831  00273C  B0D8               	btfsc	status,0,c
  1832  00273E  D042               	goto	l10744
  1833  002740                     l10732:
  1834                           
  1835                           ; BSR set to: 2
  1836                           ;main.c: 1094: Addrlo = (unsigned char) 5*i+j;
  1837  002740  0102               	movlb	2	; () banked
  1838  002742  5173               	movf	main@i& (0+255),w,b
  1839  002744  0D05               	mullw	5
  1840  002746  50F3               	movf	prodl,w,c
  1841  002748  0102               	movlb	2	; () banked
  1842  00274A  2571               	addwf	main@j& (0+255),w,b
  1843  00274C  0100               	movlb	0	; () banked
  1844  00274E  6FF7               	movwf	_Addrlo& (0+255),b	;volatile
  1845                           
  1846                           ; BSR set to: 0
  1847                           ;main.c: 1095: writeEEEPROM(Addrhi,Addrlo,dataInEEEPROM[i][j]);
  1848  002750  C0F7  F242         	movff	_Addrlo,writeEEEPROM@Addrlo	;volatile
  1849  002754  C273  F23C         	movff	main@i,___wmul@multiplier
  1850  002758  C274  F23D         	movff	main@i+1,___wmul@multiplier+1
  1851  00275C  0E00               	movlw	0
  1852  00275E  0102               	movlb	2	; () banked
  1853  002760  6F3F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1854  002762  0E05               	movlw	5
  1855  002764  6F3E               	movwf	___wmul@multiplicand& (0+255),b
  1856  002766  ECFB  F01F         	call	___wmul	;wreg free
  1857  00276A  0E75               	movlw	low _dataInEEEPROM
  1858  00276C  0102               	movlb	2	; () banked
  1859  00276E  6F6C               	movwf	??_main& (0+255),b
  1860  002770  0E02               	movlw	high _dataInEEEPROM
  1861  002772  0102               	movlb	2	; () banked
  1862  002774  6F6D               	movwf	(??_main+1)& (0+255),b
  1863  002776  0102               	movlb	2	; () banked
  1864  002778  513C               	movf	?___wmul& (0+255),w,b
  1865  00277A  0102               	movlb	2	; () banked
  1866  00277C  276C               	addwf	??_main& (0+255),f,b
  1867  00277E  0102               	movlb	2	; () banked
  1868  002780  513D               	movf	(?___wmul+1)& (0+255),w,b
  1869  002782  0102               	movlb	2	; () banked
  1870  002784  236D               	addwfc	(??_main+1)& (0+255),f,b
  1871  002786  0102               	movlb	2	; () banked
  1872  002788  5171               	movf	main@j& (0+255),w,b
  1873  00278A  0102               	movlb	2	; () banked
  1874  00278C  256C               	addwf	??_main& (0+255),w,b
  1875  00278E  6ED9               	movwf	fsr2l,c
  1876  002790  0102               	movlb	2	; () banked
  1877  002792  5172               	movf	(main@j+1)& (0+255),w,b
  1878  002794  0102               	movlb	2	; () banked
  1879  002796  216D               	addwfc	(??_main+1)& (0+255),w,b
  1880  002798  6EDA               	movwf	fsr2h,c
  1881  00279A  50DF               	movf	indf2,w,c
  1882  00279C  0102               	movlb	2	; () banked
  1883  00279E  6F43               	movwf	writeEEEPROM@Data& (0+255),b
  1884  0027A0  0100               	movlb	0	; () banked
  1885  0027A2  51F8               	movf	_Addrhi& (0+255),w,b	;volatile
  1886  0027A4  ECC9  F017         	call	_writeEEEPROM
  1887                           
  1888                           ;main.c: 1096: DelayExternalEEPROM();
  1889  0027A8  EC60  F020         	call	_DelayExternalEEPROM	;wreg free
  1890                           
  1891                           ;main.c: 1097: dataOut1=readEEEPROM(Addrhi,Addrlo);
  1892  0027AC  C0F7  F23E         	movff	_Addrlo,readEEEPROM@Addrlo	;volatile
  1893  0027B0  0100               	movlb	0	; () banked
  1894  0027B2  51F8               	movf	_Addrhi& (0+255),w,b	;volatile
  1895  0027B4  ECAB  F015         	call	_readEEEPROM
  1896  0027B8  0102               	movlb	2	; () banked
  1897  0027BA  6F70               	movwf	main@dataOut1& (0+255),b
  1898                           
  1899                           ; BSR set to: 2
  1900  0027BC  0102               	movlb	2	; () banked
  1901  0027BE  4B71               	infsnz	main@j& (0+255),f,b
  1902  0027C0  2B72               	incf	(main@j+1)& (0+255),f,b
  1903  0027C2  D7B3               	goto	l10728
  1904  0027C4                     l10744:
  1905                           
  1906                           ; BSR set to: 2
  1907  0027C4  0102               	movlb	2	; () banked
  1908  0027C6  4B73               	infsnz	main@i& (0+255),f,b
  1909  0027C8  2B74               	incf	(main@i+1)& (0+255),f,b
  1910  0027CA  D790               	goto	l10720
  1911  0027CC                     l10748:
  1912                           
  1913                           ; BSR set to: 2
  1914                           ;main.c: 1098: }
  1915                           ;main.c: 1099: }
  1916                           ;main.c: 1100: }
  1917                           ;main.c: 1102: if(updateIEEPROM){
  1918  0027CC  0102               	movlb	2	; () banked
  1919  0027CE  5195               	movf	_updateIEEPROM& (0+255),w,b	;volatile
  1920  0027D0  0102               	movlb	2	; () banked
  1921  0027D2  1196               	iorwf	(_updateIEEPROM+1)& (0+255),w,b	;volatile
  1922  0027D4  B4D8               	btfsc	status,2,c
  1923  0027D6  D761               	goto	l10706
  1924                           
  1925                           ; BSR set to: 2
  1926                           ;main.c: 1103: writeIEEPROM(0,hours);
  1927  0027D8  C236  F23C         	movff	_hours,writeIEEPROM@Data	;volatile
  1928  0027DC  0E00               	movlw	0
  1929  0027DE  EC6C  F01F         	call	_writeIEEPROM
  1930                           
  1931                           ;main.c: 1104: writeIEEPROM(1,minutes);
  1932  0027E2  C234  F23C         	movff	_minutes,writeIEEPROM@Data	;volatile
  1933  0027E6  0E01               	movlw	1
  1934  0027E8  EC6C  F01F         	call	_writeIEEPROM
  1935                           
  1936                           ;main.c: 1105: writeIEEPROM(2,PMON);
  1937  0027EC  C1FE  F23C         	movff	_PMON,writeIEEPROM@Data	;volatile
  1938  0027F0  0E02               	movlw	2
  1939  0027F2  EC6C  F01F         	call	_writeIEEPROM
  1940                           
  1941                           ;main.c: 1106: writeIEEPROM(3,TSOM);
  1942  0027F6  C07D  F23C         	movff	_TSOM,writeIEEPROM@Data	;volatile
  1943  0027FA  0E03               	movlw	3
  1944  0027FC  EC6C  F01F         	call	_writeIEEPROM
  1945                           
  1946                           ;main.c: 1107: writeIEEPROM(4,TINA);
  1947  002800  C1FC  F23C         	movff	_TINA,writeIEEPROM@Data	;volatile
  1948  002804  0E04               	movlw	4
  1949  002806  EC6C  F01F         	call	_writeIEEPROM
  1950                           
  1951                           ;main.c: 1108: writeIEEPROM(5,ALAT);
  1952  00280A  C23A  F23C         	movff	_ALAT,writeIEEPROM@Data	;volatile
  1953  00280E  0E05               	movlw	5
  1954  002810  EC6C  F01F         	call	_writeIEEPROM
  1955                           
  1956                           ;main.c: 1109: writeIEEPROM(6,ALAL);
  1957  002814  C238  F23C         	movff	_ALAL,writeIEEPROM@Data	;volatile
  1958  002818  0E06               	movlw	6
  1959  00281A  EC6C  F01F         	call	_writeIEEPROM
  1960                           
  1961                           ;main.c: 1110: writeIEEPROM(7,ALAF);
  1962  00281E  C2AB  F23C         	movff	_ALAF,writeIEEPROM@Data	;volatile
  1963  002822  0E07               	movlw	7
  1964  002824  EC6C  F01F         	call	_writeIEEPROM
  1965                           
  1966                           ;main.c: 1111: updateIEEPROM=0;
  1967  002828  0E00               	movlw	0
  1968  00282A  0102               	movlb	2	; () banked
  1969  00282C  6F96               	movwf	(_updateIEEPROM+1)& (0+255),b	;volatile
  1970  00282E  0E00               	movlw	0
  1971  002830  6F95               	movwf	_updateIEEPROM& (0+255),b	;volatile
  1972                           
  1973                           ; BSR set to: 2
  1974                           
  1975                           ; BSR set to: 2
  1976  002832  D733               	goto	l10706
  1977  002834                     __end_of_main:
  1978                           	opt stack 0
  1979                           tblptru	equ	0xFF8
  1980                           tblptrh	equ	0xFF7
  1981                           tblptrl	equ	0xFF6
  1982                           tablat	equ	0xFF5
  1983                           prodl	equ	0xFF3
  1984                           postinc0	equ	0xFEE
  1985                           wreg	equ	0xFE8
  1986                           postdec1	equ	0xFE5
  1987                           fsr1l	equ	0xFE1
  1988                           indf2	equ	0xFDF
  1989                           postinc2	equ	0xFDE
  1990                           fsr2h	equ	0xFDA
  1991                           fsr2l	equ	0xFD9
  1992                           status	equ	0xFD8
  1993                           
  1994 ;; *************** function _writeIEEPROM *****************
  1995 ;; Defined at:
  1996 ;;		line 443 in file "main.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;  Addr            1    wreg     unsigned char 
  1999 ;;  Data            1    0[BANK2 ] unsigned char 
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;  Addr            1    1[BANK2 ] unsigned char 
  2002 ;;  saveGIE         1    2[BANK2 ] unsigned char 
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  1    wreg      void 
  2005 ;; Registers used:
  2006 ;;		wreg, status,2
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2012 ;;      Params:         0       0       0       1       0       0       0
  2013 ;;      Locals:         0       0       0       2       0       0       0
  2014 ;;      Temps:          0       0       0       0       0       0       0
  2015 ;;      Totals:         0       0       0       3       0       0       0
  2016 ;;Total ram usage:        3 bytes
  2017 ;; Hardware stack levels used:    1
  2018 ;; Hardware stack levels required when called:    7
  2019 ;; This function calls:
  2020 ;;		Nothing
  2021 ;; This function is called by:
  2022 ;;		_main
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           	psect	text1
  2027  003ED8                     __ptext1:
  2028                           	opt stack 0
  2029  003ED8                     _writeIEEPROM:
  2030                           	opt stack 23
  2031                           
  2032                           ; BSR set to: 2
  2033                           ;incstack = 0
  2034                           ;writeIEEPROM@Addr stored from wreg
  2035  003ED8  0102               	movlb	2	; () banked
  2036  003EDA  6F3D               	movwf	writeIEEPROM@Addr& (0+255),b
  2037                           
  2038                           ;main.c: 445: unsigned char saveGIE;
  2039                           ;main.c: 447: EEADR = Addr;
  2040  003EDC  C23D  FFA9         	movff	writeIEEPROM@Addr,4009	;volatile
  2041                           
  2042                           ;main.c: 448: EEDATA = Data;
  2043  003EE0  C23C  FFA8         	movff	writeIEEPROM@Data,4008	;volatile
  2044                           
  2045                           ;main.c: 450: EECON1bits.EEPGD = 0;
  2046  003EE4  9EA6               	bcf	4006,7,c	;volatile
  2047                           
  2048                           ;main.c: 451: EECON1bits.CFGS = 0;
  2049  003EE6  9CA6               	bcf	4006,6,c	;volatile
  2050                           
  2051                           ;main.c: 452: EECON1bits.WREN = 1;
  2052  003EE8  84A6               	bsf	4006,2,c	;volatile
  2053                           
  2054                           ;main.c: 453: saveGIE = INTCONbits.GIE;
  2055  003EEA  0E00               	movlw	0
  2056  003EEC  BEF2               	btfsc	intcon,7,c	;volatile
  2057  003EEE  0E01               	movlw	1
  2058  003EF0  0102               	movlb	2	; () banked
  2059  003EF2  6F3E               	movwf	writeIEEPROM@saveGIE& (0+255),b
  2060                           
  2061                           ; BSR set to: 2
  2062                           ;main.c: 454: INTCONbits.GIE = 0;
  2063  003EF4  9EF2               	bcf	intcon,7,c	;volatile
  2064                           
  2065                           ; BSR set to: 2
  2066                           ;main.c: 455: EECON2 = 0x55;
  2067  003EF6  0E55               	movlw	85
  2068  003EF8  6EA7               	movwf	4007,c	;volatile
  2069                           
  2070                           ; BSR set to: 2
  2071                           ;main.c: 456: EECON2 = 0xAA;
  2072  003EFA  0EAA               	movlw	170
  2073  003EFC  6EA7               	movwf	4007,c	;volatile
  2074                           
  2075                           ; BSR set to: 2
  2076                           ;main.c: 457: EECON1bits.WR = 1;
  2077  003EFE  82A6               	bsf	4006,1,c	;volatile
  2078  003F00                     l807:
  2079  003F00  B2A6               	btfsc	4006,1,c	;volatile
  2080  003F02  D7FE               	goto	l807
  2081                           
  2082                           ;main.c: 459: INTCONbits.GIE = saveGIE;
  2083  003F04  0102               	movlb	2	; () banked
  2084  003F06  B13E               	btfsc	writeIEEPROM@saveGIE& (0+255),0,b
  2085  003F08  D002               	bra	u7375
  2086  003F0A  9EF2               	bcf	intcon,7,c	;volatile
  2087  003F0C  D001               	bra	u7376
  2088  003F0E                     u7375:
  2089  003F0E  8EF2               	bsf	intcon,7,c	;volatile
  2090  003F10                     u7376:
  2091                           
  2092                           ;main.c: 461: EECON1bits.WREN = 0;
  2093  003F10  94A6               	bcf	4006,2,c	;volatile
  2094  003F12  0012               	return		;funcret
  2095  003F14                     __end_of_writeIEEPROM:
  2096                           	opt stack 0
  2097                           tblptru	equ	0xFF8
  2098                           tblptrh	equ	0xFF7
  2099                           tblptrl	equ	0xFF6
  2100                           tablat	equ	0xFF5
  2101                           prodl	equ	0xFF3
  2102                           intcon	equ	0xFF2
  2103                           postinc0	equ	0xFEE
  2104                           wreg	equ	0xFE8
  2105                           postdec1	equ	0xFE5
  2106                           fsr1l	equ	0xFE1
  2107                           indf2	equ	0xFDF
  2108                           postinc2	equ	0xFDE
  2109                           fsr2h	equ	0xFDA
  2110                           fsr2l	equ	0xFD9
  2111                           status	equ	0xFD8
  2112                           
  2113 ;; *************** function _writeEEEPROM *****************
  2114 ;; Defined at:
  2115 ;;		line 414 in file "main.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;  Addrhi          1    wreg     unsigned char 
  2118 ;;  Addrlo          1    6[BANK2 ] unsigned char 
  2119 ;;  Data            1    7[BANK2 ] unsigned char 
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  Addrhi          1    9[BANK2 ] unsigned char 
  2122 ;; Return value:  Size  Location     Type
  2123 ;;                  1    wreg      void 
  2124 ;; Registers used:
  2125 ;;		wreg, status,2, status,0, cstack
  2126 ;; Tracked objects:
  2127 ;;		On entry : 0/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2131 ;;      Params:         0       0       0       2       0       0       0
  2132 ;;      Locals:         0       0       0       1       0       0       0
  2133 ;;      Temps:          0       0       0       1       0       0       0
  2134 ;;      Totals:         0       0       0       4       0       0       0
  2135 ;;Total ram usage:        4 bytes
  2136 ;; Hardware stack levels used:    1
  2137 ;; Hardware stack levels required when called:    8
  2138 ;; This function calls:
  2139 ;;		_WriteI2C
  2140 ;; This function is called by:
  2141 ;;		_main
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           	psect	text2
  2146  002F92                     __ptext2:
  2147                           	opt stack 0
  2148  002F92                     _writeEEEPROM:
  2149                           	opt stack 22
  2150                           
  2151                           ;incstack = 0
  2152                           ;writeEEEPROM@Addrhi stored from wreg
  2153  002F92  0102               	movlb	2	; () banked
  2154  002F94  6F45               	movwf	writeEEEPROM@Addrhi& (0+255),b
  2155  002F96                     l5820:
  2156  002F96  A4C7               	btfss	4039,2,c	;volatile
  2157  002F98  D004               	goto	u7220
  2158  002F9A  0102               	movlb	2	; () banked
  2159  002F9C  6B44               	clrf	??_writeEEEPROM& (0+255),b
  2160  002F9E  2B44               	incf	??_writeEEEPROM& (0+255),f,b
  2161  002FA0  D002               	goto	u7228
  2162  002FA2                     u7220:
  2163  002FA2  0102               	movlb	2	; () banked
  2164  002FA4  6B44               	clrf	??_writeEEEPROM& (0+255),b
  2165  002FA6                     u7228:
  2166  002FA6  50C5               	movf	4037,w,c	;volatile
  2167  002FA8  0B1F               	andlw	31
  2168  002FAA  0102               	movlb	2	; () banked
  2169  002FAC  1144               	iorwf	??_writeEEEPROM& (0+255),w,b
  2170  002FAE  0900               	iorlw	0
  2171  002FB0  A4D8               	btfss	status,2,c
  2172  002FB2  D7F1               	goto	l5820
  2173                           
  2174                           ; BSR set to: 2
  2175                           ;main.c: 417: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN); while ((SSPCON2 & 0x1F) | (SSPST
      +                          ATbits.R_W));
  2176  002FB4  80C5               	bsf	4037,0,c	;volatile
  2177  002FB6                     l747:
  2178  002FB6  B0C5               	btfsc	4037,0,c	;volatile
  2179  002FB8  D7FE               	goto	l747
  2180  002FBA                     l5822:
  2181  002FBA  A4C7               	btfss	4039,2,c	;volatile
  2182  002FBC  D004               	goto	u7250
  2183  002FBE  0102               	movlb	2	; () banked
  2184  002FC0  6B44               	clrf	??_writeEEEPROM& (0+255),b
  2185  002FC2  2B44               	incf	??_writeEEEPROM& (0+255),f,b
  2186  002FC4  D002               	goto	u7258
  2187  002FC6                     u7250:
  2188  002FC6  0102               	movlb	2	; () banked
  2189  002FC8  6B44               	clrf	??_writeEEEPROM& (0+255),b
  2190  002FCA                     u7258:
  2191  002FCA  50C5               	movf	4037,w,c	;volatile
  2192  002FCC  0B1F               	andlw	31
  2193  002FCE  0102               	movlb	2	; () banked
  2194  002FD0  1144               	iorwf	??_writeEEEPROM& (0+255),w,b
  2195  002FD2  0900               	iorlw	0
  2196  002FD4  A4D8               	btfss	status,2,c
  2197  002FD6  D7F1               	goto	l5822
  2198                           
  2199                           ; BSR set to: 2
  2200                           ;main.c: 418: WriteI2C(0xA0); while ((SSPCON2 & 0x1F) | (SSPSTATbits.R_W));
  2201                           
  2202                           ; BSR set to: 2
  2203  002FD8  0EA0               	movlw	160
  2204  002FDA  EC54  F01D         	call	_WriteI2C
  2205  002FDE                     l5826:
  2206  002FDE  A4C7               	btfss	4039,2,c	;volatile
  2207  002FE0  D004               	goto	u7270
  2208  002FE2  0102               	movlb	2	; () banked
  2209  002FE4  6B44               	clrf	??_writeEEEPROM& (0+255),b
  2210  002FE6  2B44               	incf	??_writeEEEPROM& (0+255),f,b
  2211  002FE8  D002               	goto	u7278
  2212  002FEA                     u7270:
  2213  002FEA  0102               	movlb	2	; () banked
  2214  002FEC  6B44               	clrf	??_writeEEEPROM& (0+255),b
  2215  002FEE                     u7278:
  2216  002FEE  50C5               	movf	4037,w,c	;volatile
  2217  002FF0  0B1F               	andlw	31
  2218  002FF2  0102               	movlb	2	; () banked
  2219  002FF4  1144               	iorwf	??_writeEEEPROM& (0+255),w,b
  2220  002FF6  0900               	iorlw	0
  2221  002FF8  A4D8               	btfss	status,2,c
  2222  002FFA  D7F1               	goto	l5826
  2223                           
  2224                           ; BSR set to: 2
  2225                           ;main.c: 419: WriteI2C(Addrhi); while ((SSPCON2 & 0x1F) | (SSPSTATbits.R_W));
  2226                           
  2227                           ; BSR set to: 2
  2228  002FFC  0102               	movlb	2	; () banked
  2229  002FFE  5145               	movf	writeEEEPROM@Addrhi& (0+255),w,b
  2230  003000  EC54  F01D         	call	_WriteI2C
  2231  003004                     l5830:
  2232  003004  A4C7               	btfss	4039,2,c	;volatile
  2233  003006  D004               	goto	u7290
  2234  003008  0102               	movlb	2	; () banked
  2235  00300A  6B44               	clrf	??_writeEEEPROM& (0+255),b
  2236  00300C  2B44               	incf	??_writeEEEPROM& (0+255),f,b
  2237  00300E  D002               	goto	u7298
  2238  003010                     u7290:
  2239  003010  0102               	movlb	2	; () banked
  2240  003012  6B44               	clrf	??_writeEEEPROM& (0+255),b
  2241  003014                     u7298:
  2242  003014  50C5               	movf	4037,w,c	;volatile
  2243  003016  0B1F               	andlw	31
  2244  003018  0102               	movlb	2	; () banked
  2245  00301A  1144               	iorwf	??_writeEEEPROM& (0+255),w,b
  2246  00301C  0900               	iorlw	0
  2247  00301E  A4D8               	btfss	status,2,c
  2248  003020  D7F1               	goto	l5830
  2249                           
  2250                           ; BSR set to: 2
  2251                           ;main.c: 420: WriteI2C(Addrlo); while ((SSPCON2 & 0x1F) | (SSPSTATbits.R_W));
  2252                           
  2253                           ; BSR set to: 2
  2254  003022  0102               	movlb	2	; () banked
  2255  003024  5142               	movf	writeEEEPROM@Addrlo& (0+255),w,b
  2256  003026  EC54  F01D         	call	_WriteI2C
  2257  00302A                     l5834:
  2258  00302A  A4C7               	btfss	4039,2,c	;volatile
  2259  00302C  D004               	goto	u7310
  2260  00302E  0102               	movlb	2	; () banked
  2261  003030  6B44               	clrf	??_writeEEEPROM& (0+255),b
  2262  003032  2B44               	incf	??_writeEEEPROM& (0+255),f,b
  2263  003034  D002               	goto	u7318
  2264  003036                     u7310:
  2265  003036  0102               	movlb	2	; () banked
  2266  003038  6B44               	clrf	??_writeEEEPROM& (0+255),b
  2267  00303A                     u7318:
  2268  00303A  50C5               	movf	4037,w,c	;volatile
  2269  00303C  0B1F               	andlw	31
  2270  00303E  0102               	movlb	2	; () banked
  2271  003040  1144               	iorwf	??_writeEEEPROM& (0+255),w,b
  2272  003042  0900               	iorlw	0
  2273  003044  A4D8               	btfss	status,2,c
  2274  003046  D7F1               	goto	l5834
  2275                           
  2276                           ; BSR set to: 2
  2277                           ;main.c: 421: WriteI2C(Data); while ((SSPCON2 & 0x1F) | (SSPSTATbits.R_W));
  2278                           
  2279                           ; BSR set to: 2
  2280  003048  0102               	movlb	2	; () banked
  2281  00304A  5143               	movf	writeEEEPROM@Data& (0+255),w,b
  2282  00304C  EC54  F01D         	call	_WriteI2C
  2283  003050                     l5838:
  2284  003050  A4C7               	btfss	4039,2,c	;volatile
  2285  003052  D004               	goto	u7330
  2286  003054  0102               	movlb	2	; () banked
  2287  003056  6B44               	clrf	??_writeEEEPROM& (0+255),b
  2288  003058  2B44               	incf	??_writeEEEPROM& (0+255),f,b
  2289  00305A  D002               	goto	u7338
  2290  00305C                     u7330:
  2291  00305C  0102               	movlb	2	; () banked
  2292  00305E  6B44               	clrf	??_writeEEEPROM& (0+255),b
  2293  003060                     u7338:
  2294  003060  50C5               	movf	4037,w,c	;volatile
  2295  003062  0B1F               	andlw	31
  2296  003064  0102               	movlb	2	; () banked
  2297  003066  1144               	iorwf	??_writeEEEPROM& (0+255),w,b
  2298  003068  0900               	iorlw	0
  2299  00306A  A4D8               	btfss	status,2,c
  2300  00306C  D7F1               	goto	l5838
  2301                           
  2302                           ; BSR set to: 2
  2303                           ;main.c: 422: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  2304  00306E  84C5               	bsf	4037,2,c	;volatile
  2305  003070                     l765:
  2306  003070  A4C5               	btfss	4037,2,c	;volatile
  2307  003072  0012               	return	
  2308  003074  D7FD               	goto	l765
  2309  003076                     __end_of_writeEEEPROM:
  2310                           	opt stack 0
  2311                           tblptru	equ	0xFF8
  2312                           tblptrh	equ	0xFF7
  2313                           tblptrl	equ	0xFF6
  2314                           tablat	equ	0xFF5
  2315                           prodl	equ	0xFF3
  2316                           intcon	equ	0xFF2
  2317                           postinc0	equ	0xFEE
  2318                           wreg	equ	0xFE8
  2319                           postdec1	equ	0xFE5
  2320                           fsr1l	equ	0xFE1
  2321                           indf2	equ	0xFDF
  2322                           postinc2	equ	0xFDE
  2323                           fsr2h	equ	0xFDA
  2324                           fsr2l	equ	0xFD9
  2325                           status	equ	0xFD8
  2326                           
  2327 ;; *************** function _timer1_init *****************
  2328 ;; Defined at:
  2329 ;;		line 943 in file "main.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;		None
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;		None
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  1    wreg      void 
  2336 ;; Registers used:
  2337 ;;		wreg, status,2
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2343 ;;      Params:         0       0       0       0       0       0       0
  2344 ;;      Locals:         0       0       0       0       0       0       0
  2345 ;;      Temps:          0       0       0       0       0       0       0
  2346 ;;      Totals:         0       0       0       0       0       0       0
  2347 ;;Total ram usage:        0 bytes
  2348 ;; Hardware stack levels used:    1
  2349 ;; Hardware stack levels required when called:    7
  2350 ;; This function calls:
  2351 ;;		Nothing
  2352 ;; This function is called by:
  2353 ;;		_main
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text3
  2358  0042BC                     __ptext3:
  2359                           	opt stack 0
  2360  0042BC                     _timer1_init:
  2361                           	opt stack 23
  2362                           
  2363                           ;main.c: 945: T1CON = 0x0E;
  2364                           
  2365                           ;incstack = 0
  2366  0042BC  0E0E               	movlw	14
  2367  0042BE  6ECD               	movwf	4045,c	;volatile
  2368                           
  2369                           ;main.c: 948: TMR1H=0x80;
  2370  0042C0  0E80               	movlw	128
  2371  0042C2  6ECF               	movwf	4047,c	;volatile
  2372                           
  2373                           ;main.c: 949: TMR1L=0;
  2374  0042C4  0E00               	movlw	0
  2375  0042C6  6ECE               	movwf	4046,c	;volatile
  2376                           
  2377                           ;main.c: 952: PIR1bits.TMR1IF=0;
  2378  0042C8  909E               	bcf	3998,0,c	;volatile
  2379                           
  2380                           ;main.c: 953: PIE1bits.TMR1IE=1;
  2381  0042CA  809D               	bsf	3997,0,c	;volatile
  2382                           
  2383                           ;main.c: 956: T1CONbits.TMR1ON = 1;
  2384  0042CC  80CD               	bsf	4045,0,c	;volatile
  2385  0042CE  0012               	return		;funcret
  2386  0042D0                     __end_of_timer1_init:
  2387                           	opt stack 0
  2388                           tblptru	equ	0xFF8
  2389                           tblptrh	equ	0xFF7
  2390                           tblptrl	equ	0xFF6
  2391                           tablat	equ	0xFF5
  2392                           prodl	equ	0xFF3
  2393                           intcon	equ	0xFF2
  2394                           postinc0	equ	0xFEE
  2395                           wreg	equ	0xFE8
  2396                           postdec1	equ	0xFE5
  2397                           fsr1l	equ	0xFE1
  2398                           indf2	equ	0xFDF
  2399                           postinc2	equ	0xFDE
  2400                           fsr2h	equ	0xFDA
  2401                           fsr2l	equ	0xFD9
  2402                           status	equ	0xFD8
  2403                           
  2404 ;; *************** function _meteo_init_EEEPROM *****************
  2405 ;; Defined at:
  2406 ;;		line 1017 in file "main.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;		None
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;  j               2   11[BANK2 ] int 
  2411 ;;  i               2    9[BANK2 ] int 
  2412 ;;  dataOut         1    8[BANK2 ] unsigned char 
  2413 ;;  Addrlo          1    7[BANK2 ] unsigned char 
  2414 ;;  Addrhi          1    6[BANK2 ] unsigned char 
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      void 
  2417 ;; Registers used:
  2418 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2424 ;;      Params:         0       0       0       0       0       0       0
  2425 ;;      Locals:         0       0       0       7       0       0       0
  2426 ;;      Temps:          0       0       0       0       0       0       0
  2427 ;;      Totals:         0       0       0       7       0       0       0
  2428 ;;Total ram usage:        7 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; Hardware stack levels required when called:    9
  2431 ;; This function calls:
  2432 ;;		_readEEEPROM
  2433 ;; This function is called by:
  2434 ;;		_main
  2435 ;; This function uses a non-reentrant model
  2436 ;;
  2437                           
  2438                           	psect	text4
  2439  002C86                     __ptext4:
  2440                           	opt stack 0
  2441  002C86                     _meteo_init_EEEPROM:
  2442                           	opt stack 21
  2443                           
  2444                           ;main.c: 1019: int i, j;
  2445                           ;main.c: 1020: unsigned char Addrhi=0,Addrlo;
  2446                           
  2447                           ;incstack = 0
  2448  002C86  0E00               	movlw	0
  2449  002C88  0102               	movlb	2	; () banked
  2450  002C8A  6F42               	movwf	meteo_init_EEEPROM@Addrhi& (0+255),b
  2451                           
  2452                           ;main.c: 1021: unsigned char dataOut;
  2453                           ;main.c: 1023: for(i=0;i<4;i++){
  2454  002C8C  0E00               	movlw	0
  2455  002C8E  0102               	movlb	2	; () banked
  2456  002C90  6F46               	movwf	(meteo_init_EEEPROM@i+1)& (0+255),b
  2457  002C92  0E00               	movlw	0
  2458  002C94  6F45               	movwf	meteo_init_EEEPROM@i& (0+255),b
  2459                           
  2460                           ; BSR set to: 2
  2461  002C96  0102               	movlb	2	; () banked
  2462  002C98  BF46               	btfsc	(meteo_init_EEEPROM@i+1)& (0+255),7,b
  2463  002C9A  D00A               	goto	l6286
  2464  002C9C  0102               	movlb	2	; () banked
  2465  002C9E  5146               	movf	(meteo_init_EEEPROM@i+1)& (0+255),w,b
  2466  002CA0  E106               	bnz	u7930
  2467  002CA2  0E04               	movlw	4
  2468  002CA4  0102               	movlb	2	; () banked
  2469  002CA6  5D45               	subwf	meteo_init_EEEPROM@i& (0+255),w,b
  2470  002CA8  B0D8               	btfsc	status,0,c
  2471  002CAA  0012               	return	
  2472  002CAC  D001               	goto	l6286
  2473  002CAE                     u7930:
  2474                           
  2475                           ; BSR set to: 2
  2476  002CAE  0012               	return	
  2477  002CB0                     l6286:
  2478                           
  2479                           ; BSR set to: 2
  2480                           ;main.c: 1024: for(j=0;j<5;j++){
  2481  002CB0  0E00               	movlw	0
  2482  002CB2  0102               	movlb	2	; () banked
  2483  002CB4  6F48               	movwf	(meteo_init_EEEPROM@j+1)& (0+255),b
  2484  002CB6  0E00               	movlw	0
  2485  002CB8  6F47               	movwf	meteo_init_EEEPROM@j& (0+255),b
  2486  002CBA                     l6288:
  2487                           
  2488                           ; BSR set to: 2
  2489  002CBA  0102               	movlb	2	; () banked
  2490  002CBC  BF48               	btfsc	(meteo_init_EEEPROM@j+1)& (0+255),7,b
  2491  002CBE  D008               	goto	l6292
  2492  002CC0  0102               	movlb	2	; () banked
  2493  002CC2  5148               	movf	(meteo_init_EEEPROM@j+1)& (0+255),w,b
  2494  002CC4  E166               	bnz	l6326
  2495  002CC6  0E05               	movlw	5
  2496  002CC8  0102               	movlb	2	; () banked
  2497  002CCA  5D47               	subwf	meteo_init_EEEPROM@j& (0+255),w,b
  2498  002CCC  B0D8               	btfsc	status,0,c
  2499  002CCE  D061               	goto	l6326
  2500  002CD0                     l6292:
  2501                           
  2502                           ; BSR set to: 2
  2503                           ;main.c: 1025: Addrlo = (unsigned char) 5*i+j;
  2504  002CD0  0102               	movlb	2	; () banked
  2505  002CD2  5145               	movf	meteo_init_EEEPROM@i& (0+255),w,b
  2506  002CD4  0D05               	mullw	5
  2507  002CD6  50F3               	movf	prodl,w,c
  2508  002CD8  0102               	movlb	2	; () banked
  2509  002CDA  2547               	addwf	meteo_init_EEEPROM@j& (0+255),w,b
  2510  002CDC  0102               	movlb	2	; () banked
  2511  002CDE  6F43               	movwf	meteo_init_EEEPROM@Addrlo& (0+255),b
  2512                           
  2513                           ; BSR set to: 2
  2514                           ;main.c: 1026: dataOut = readEEEPROM(Addrhi,Addrlo);
  2515  002CE0  C243  F23E         	movff	meteo_init_EEEPROM@Addrlo,readEEEPROM@Addrlo
  2516  002CE4  0102               	movlb	2	; () banked
  2517  002CE6  5142               	movf	meteo_init_EEEPROM@Addrhi& (0+255),w,b
  2518  002CE8  ECAB  F015         	call	_readEEEPROM
  2519  002CEC  0102               	movlb	2	; () banked
  2520  002CEE  6F44               	movwf	meteo_init_EEEPROM@dataOut& (0+255),b
  2521                           
  2522                           ; BSR set to: 2
  2523                           ;main.c: 1027: if(dataOut!=0xff){
  2524  002CF0  0102               	movlb	2	; () banked
  2525  002CF2  2944               	incf	meteo_init_EEEPROM@dataOut& (0+255),w,b
  2526  002CF4  B4D8               	btfsc	status,2,c
  2527  002CF6  D049               	goto	l6322
  2528                           
  2529                           ; BSR set to: 2
  2530                           ;main.c: 1028: if(i==0 && j==3)
  2531  002CF8  0102               	movlb	2	; () banked
  2532  002CFA  5145               	movf	meteo_init_EEEPROM@i& (0+255),w,b
  2533  002CFC  0102               	movlb	2	; () banked
  2534  002CFE  1146               	iorwf	(meteo_init_EEEPROM@i+1)& (0+255),w,b
  2535  002D00  A4D8               	btfss	status,2,c
  2536  002D02  D00C               	goto	l6304
  2537                           
  2538                           ; BSR set to: 2
  2539  002D04  0E03               	movlw	3
  2540  002D06  0102               	movlb	2	; () banked
  2541  002D08  1947               	xorwf	meteo_init_EEEPROM@j& (0+255),w,b
  2542  002D0A  0102               	movlb	2	; () banked
  2543  002D0C  1148               	iorwf	(meteo_init_EEEPROM@j+1)& (0+255),w,b
  2544  002D0E  A4D8               	btfss	status,2,c
  2545  002D10  D005               	goto	l6304
  2546                           
  2547                           ; BSR set to: 2
  2548                           ;main.c: 1029: maxTemperature = (int) dataOut;
  2549  002D12  C244  F230         	movff	meteo_init_EEEPROM@dataOut,_maxTemperature	;volatile
  2550  002D16  0102               	movlb	2	; () banked
  2551  002D18  6B31               	clrf	(_maxTemperature+1)& (0+255),b	;volatile
  2552  002D1A  D037               	goto	l6322
  2553  002D1C                     l6304:
  2554                           
  2555                           ; BSR set to: 2
  2556                           ;main.c: 1030: else if(i==1 && j==3){
  2557  002D1C  0102               	movlb	2	; () banked
  2558  002D1E  0545               	decf	meteo_init_EEEPROM@i& (0+255),w,b
  2559  002D20  0102               	movlb	2	; () banked
  2560  002D22  1146               	iorwf	(meteo_init_EEEPROM@i+1)& (0+255),w,b
  2561  002D24  A4D8               	btfss	status,2,c
  2562  002D26  D00C               	goto	l6310
  2563                           
  2564                           ; BSR set to: 2
  2565  002D28  0E03               	movlw	3
  2566  002D2A  0102               	movlb	2	; () banked
  2567  002D2C  1947               	xorwf	meteo_init_EEEPROM@j& (0+255),w,b
  2568  002D2E  0102               	movlb	2	; () banked
  2569  002D30  1148               	iorwf	(meteo_init_EEEPROM@j+1)& (0+255),w,b
  2570  002D32  A4D8               	btfss	status,2,c
  2571  002D34  D005               	goto	l6310
  2572                           
  2573                           ; BSR set to: 2
  2574                           ;main.c: 1031: minTemperature = (int) dataOut;
  2575  002D36  C244  F22C         	movff	meteo_init_EEEPROM@dataOut,_minTemperature	;volatile
  2576  002D3A  0102               	movlb	2	; () banked
  2577  002D3C  6B2D               	clrf	(_minTemperature+1)& (0+255),b	;volatile
  2578                           
  2579                           ;main.c: 1032: }
  2580  002D3E  D025               	goto	l6322
  2581  002D40                     l6310:
  2582                           
  2583                           ; BSR set to: 2
  2584                           ;main.c: 1033: else if(i==2 && j==4){
  2585  002D40  0E02               	movlw	2
  2586  002D42  0102               	movlb	2	; () banked
  2587  002D44  1945               	xorwf	meteo_init_EEEPROM@i& (0+255),w,b
  2588  002D46  0102               	movlb	2	; () banked
  2589  002D48  1146               	iorwf	(meteo_init_EEEPROM@i+1)& (0+255),w,b
  2590  002D4A  A4D8               	btfss	status,2,c
  2591  002D4C  D00C               	goto	l6316
  2592                           
  2593                           ; BSR set to: 2
  2594  002D4E  0E04               	movlw	4
  2595  002D50  0102               	movlb	2	; () banked
  2596  002D52  1947               	xorwf	meteo_init_EEEPROM@j& (0+255),w,b
  2597  002D54  0102               	movlb	2	; () banked
  2598  002D56  1148               	iorwf	(meteo_init_EEEPROM@j+1)& (0+255),w,b
  2599  002D58  A4D8               	btfss	status,2,c
  2600  002D5A  D005               	goto	l6316
  2601                           
  2602                           ; BSR set to: 2
  2603                           ;main.c: 1034: maxLuminosity = (int) dataOut;
  2604  002D5C  C244  F22E         	movff	meteo_init_EEEPROM@dataOut,_maxLuminosity	;volatile
  2605  002D60  0102               	movlb	2	; () banked
  2606  002D62  6B2F               	clrf	(_maxLuminosity+1)& (0+255),b	;volatile
  2607                           
  2608                           ;main.c: 1035: }
  2609  002D64  D012               	goto	l6322
  2610  002D66                     l6316:
  2611                           
  2612                           ; BSR set to: 2
  2613                           ;main.c: 1036: else if(i==3 && j==4){
  2614  002D66  0E03               	movlw	3
  2615  002D68  0102               	movlb	2	; () banked
  2616  002D6A  1945               	xorwf	meteo_init_EEEPROM@i& (0+255),w,b
  2617  002D6C  0102               	movlb	2	; () banked
  2618  002D6E  1146               	iorwf	(meteo_init_EEEPROM@i+1)& (0+255),w,b
  2619  002D70  A4D8               	btfss	status,2,c
  2620  002D72  D00B               	goto	l6322
  2621                           
  2622                           ; BSR set to: 2
  2623  002D74  0E04               	movlw	4
  2624  002D76  0102               	movlb	2	; () banked
  2625  002D78  1947               	xorwf	meteo_init_EEEPROM@j& (0+255),w,b
  2626  002D7A  0102               	movlb	2	; () banked
  2627  002D7C  1148               	iorwf	(meteo_init_EEEPROM@j+1)& (0+255),w,b
  2628  002D7E  A4D8               	btfss	status,2,c
  2629  002D80  D004               	goto	l6322
  2630                           
  2631                           ; BSR set to: 2
  2632                           ;main.c: 1037: minLuminosity = (int) dataOut;
  2633  002D82  C244  F22A         	movff	meteo_init_EEEPROM@dataOut,_minLuminosity	;volatile
  2634  002D86  0102               	movlb	2	; () banked
  2635  002D88  6B2B               	clrf	(_minLuminosity+1)& (0+255),b	;volatile
  2636  002D8A                     l6322:
  2637                           
  2638                           ; BSR set to: 2
  2639  002D8A  0102               	movlb	2	; () banked
  2640  002D8C  4B47               	infsnz	meteo_init_EEEPROM@j& (0+255),f,b
  2641  002D8E  2B48               	incf	(meteo_init_EEEPROM@j+1)& (0+255),f,b
  2642  002D90  D794               	goto	l6288
  2643  002D92                     l6326:
  2644                           
  2645                           ; BSR set to: 2
  2646  002D92  0102               	movlb	2	; () banked
  2647  002D94  4B45               	infsnz	meteo_init_EEEPROM@i& (0+255),f,b
  2648  002D96  2B46               	incf	(meteo_init_EEEPROM@i+1)& (0+255),f,b
  2649                           
  2650                           ; BSR set to: 2
  2651  002D98  0102               	movlb	2	; () banked
  2652  002D9A  BF46               	btfsc	(meteo_init_EEEPROM@i+1)& (0+255),7,b
  2653  002D9C  D789               	goto	l6286
  2654  002D9E  0102               	movlb	2	; () banked
  2655  002DA0  5146               	movf	(meteo_init_EEEPROM@i+1)& (0+255),w,b
  2656  002DA2  E101               	bnz	l1027
  2657  002DA4  D77E               	goto	L3
  2658  002DA6                     l1027:
  2659                           
  2660                           ; BSR set to: 2
  2661  002DA6  0012               	return		;funcret
  2662  002DA8                     __end_of_meteo_init_EEEPROM:
  2663                           	opt stack 0
  2664                           tblptru	equ	0xFF8
  2665                           tblptrh	equ	0xFF7
  2666                           tblptrl	equ	0xFF6
  2667                           tablat	equ	0xFF5
  2668                           prodl	equ	0xFF3
  2669                           intcon	equ	0xFF2
  2670                           postinc0	equ	0xFEE
  2671                           wreg	equ	0xFE8
  2672                           postdec1	equ	0xFE5
  2673                           fsr1l	equ	0xFE1
  2674                           indf2	equ	0xFDF
  2675                           postinc2	equ	0xFDE
  2676                           fsr2h	equ	0xFDA
  2677                           fsr2l	equ	0xFD9
  2678                           status	equ	0xFD8
  2679                           
  2680 ;; *************** function _readEEEPROM *****************
  2681 ;; Defined at:
  2682 ;;		line 425 in file "main.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;  Addrhi          1    wreg     unsigned char 
  2685 ;;  Addrlo          1    2[BANK2 ] unsigned char 
  2686 ;; Auto vars:     Size  Location     Type
  2687 ;;  Addrhi          1    4[BANK2 ] unsigned char 
  2688 ;;  value           1    5[BANK2 ] unsigned char 
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  1    wreg      unsigned char 
  2691 ;; Registers used:
  2692 ;;		wreg, status,2, status,0, cstack
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2698 ;;      Params:         0       0       0       1       0       0       0
  2699 ;;      Locals:         0       0       0       2       0       0       0
  2700 ;;      Temps:          0       0       0       1       0       0       0
  2701 ;;      Totals:         0       0       0       4       0       0       0
  2702 ;;Total ram usage:        4 bytes
  2703 ;; Hardware stack levels used:    1
  2704 ;; Hardware stack levels required when called:    8
  2705 ;; This function calls:
  2706 ;;		_ReadI2C
  2707 ;;		_WriteI2C
  2708 ;; This function is called by:
  2709 ;;		_meteo_init_EEEPROM
  2710 ;;		_main
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           	psect	text5
  2715  002B56                     __ptext5:
  2716                           	opt stack 0
  2717  002B56                     _readEEEPROM:
  2718                           	opt stack 22
  2719                           
  2720                           ; BSR set to: 2
  2721                           ;incstack = 0
  2722                           ;readEEEPROM@Addrhi stored from wreg
  2723  002B56  0102               	movlb	2	; () banked
  2724  002B58  6F40               	movwf	readEEEPROM@Addrhi& (0+255),b
  2725  002B5A                     l5384:
  2726  002B5A  A4C7               	btfss	4039,2,c	;volatile
  2727  002B5C  D004               	goto	u6290
  2728  002B5E  0102               	movlb	2	; () banked
  2729  002B60  6B3F               	clrf	??_readEEEPROM& (0+255),b
  2730  002B62  2B3F               	incf	??_readEEEPROM& (0+255),f,b
  2731  002B64  D002               	goto	u6298
  2732  002B66                     u6290:
  2733  002B66  0102               	movlb	2	; () banked
  2734  002B68  6B3F               	clrf	??_readEEEPROM& (0+255),b
  2735  002B6A                     u6298:
  2736  002B6A  50C5               	movf	4037,w,c	;volatile
  2737  002B6C  0B1F               	andlw	31
  2738  002B6E  0102               	movlb	2	; () banked
  2739  002B70  113F               	iorwf	??_readEEEPROM& (0+255),w,b
  2740  002B72  0900               	iorlw	0
  2741  002B74  A4D8               	btfss	status,2,c
  2742  002B76  D7F1               	goto	l5384
  2743                           
  2744                           ; BSR set to: 2
  2745                           ;main.c: 430: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN); while ((SSPCON2 & 0x1F) | (SSPST
      +                          ATbits.R_W));
  2746  002B78  80C5               	bsf	4037,0,c	;volatile
  2747  002B7A                     l774:
  2748  002B7A  B0C5               	btfsc	4037,0,c	;volatile
  2749  002B7C  D7FE               	goto	l774
  2750  002B7E                     l5386:
  2751  002B7E  A4C7               	btfss	4039,2,c	;volatile
  2752  002B80  D004               	goto	u6320
  2753  002B82  0102               	movlb	2	; () banked
  2754  002B84  6B3F               	clrf	??_readEEEPROM& (0+255),b
  2755  002B86  2B3F               	incf	??_readEEEPROM& (0+255),f,b
  2756  002B88  D002               	goto	u6328
  2757  002B8A                     u6320:
  2758  002B8A  0102               	movlb	2	; () banked
  2759  002B8C  6B3F               	clrf	??_readEEEPROM& (0+255),b
  2760  002B8E                     u6328:
  2761  002B8E  50C5               	movf	4037,w,c	;volatile
  2762  002B90  0B1F               	andlw	31
  2763  002B92  0102               	movlb	2	; () banked
  2764  002B94  113F               	iorwf	??_readEEEPROM& (0+255),w,b
  2765  002B96  0900               	iorlw	0
  2766  002B98  A4D8               	btfss	status,2,c
  2767  002B9A  D7F1               	goto	l5386
  2768                           
  2769                           ; BSR set to: 2
  2770                           ;main.c: 431: WriteI2C(0xA0); while ((SSPCON2 & 0x1F) | (SSPSTATbits.R_W));
  2771                           
  2772                           ; BSR set to: 2
  2773  002B9C  0EA0               	movlw	160
  2774  002B9E  EC54  F01D         	call	_WriteI2C
  2775  002BA2                     l5390:
  2776  002BA2  A4C7               	btfss	4039,2,c	;volatile
  2777  002BA4  D004               	goto	u6340
  2778  002BA6  0102               	movlb	2	; () banked
  2779  002BA8  6B3F               	clrf	??_readEEEPROM& (0+255),b
  2780  002BAA  2B3F               	incf	??_readEEEPROM& (0+255),f,b
  2781  002BAC  D002               	goto	u6348
  2782  002BAE                     u6340:
  2783  002BAE  0102               	movlb	2	; () banked
  2784  002BB0  6B3F               	clrf	??_readEEEPROM& (0+255),b
  2785  002BB2                     u6348:
  2786  002BB2  50C5               	movf	4037,w,c	;volatile
  2787  002BB4  0B1F               	andlw	31
  2788  002BB6  0102               	movlb	2	; () banked
  2789  002BB8  113F               	iorwf	??_readEEEPROM& (0+255),w,b
  2790  002BBA  0900               	iorlw	0
  2791  002BBC  A4D8               	btfss	status,2,c
  2792  002BBE  D7F1               	goto	l5390
  2793                           
  2794                           ; BSR set to: 2
  2795                           ;main.c: 432: WriteI2C(Addrhi); while ((SSPCON2 & 0x1F) | (SSPSTATbits.R_W));
  2796                           
  2797                           ; BSR set to: 2
  2798  002BC0  0102               	movlb	2	; () banked
  2799  002BC2  5140               	movf	readEEEPROM@Addrhi& (0+255),w,b
  2800  002BC4  EC54  F01D         	call	_WriteI2C
  2801  002BC8                     l5394:
  2802  002BC8  A4C7               	btfss	4039,2,c	;volatile
  2803  002BCA  D004               	goto	u6360
  2804  002BCC  0102               	movlb	2	; () banked
  2805  002BCE  6B3F               	clrf	??_readEEEPROM& (0+255),b
  2806  002BD0  2B3F               	incf	??_readEEEPROM& (0+255),f,b
  2807  002BD2  D002               	goto	u6368
  2808  002BD4                     u6360:
  2809  002BD4  0102               	movlb	2	; () banked
  2810  002BD6  6B3F               	clrf	??_readEEEPROM& (0+255),b
  2811  002BD8                     u6368:
  2812  002BD8  50C5               	movf	4037,w,c	;volatile
  2813  002BDA  0B1F               	andlw	31
  2814  002BDC  0102               	movlb	2	; () banked
  2815  002BDE  113F               	iorwf	??_readEEEPROM& (0+255),w,b
  2816  002BE0  0900               	iorlw	0
  2817  002BE2  A4D8               	btfss	status,2,c
  2818  002BE4  D7F1               	goto	l5394
  2819                           
  2820                           ; BSR set to: 2
  2821                           ;main.c: 433: WriteI2C(Addrlo); while ((SSPCON2 & 0x1F) | (SSPSTATbits.R_W));
  2822                           
  2823                           ; BSR set to: 2
  2824  002BE6  0102               	movlb	2	; () banked
  2825  002BE8  513E               	movf	readEEEPROM@Addrlo& (0+255),w,b
  2826  002BEA  EC54  F01D         	call	_WriteI2C
  2827  002BEE                     l5398:
  2828  002BEE  A4C7               	btfss	4039,2,c	;volatile
  2829  002BF0  D004               	goto	u6380
  2830  002BF2  0102               	movlb	2	; () banked
  2831  002BF4  6B3F               	clrf	??_readEEEPROM& (0+255),b
  2832  002BF6  2B3F               	incf	??_readEEEPROM& (0+255),f,b
  2833  002BF8  D002               	goto	u6388
  2834  002BFA                     u6380:
  2835  002BFA  0102               	movlb	2	; () banked
  2836  002BFC  6B3F               	clrf	??_readEEEPROM& (0+255),b
  2837  002BFE                     u6388:
  2838  002BFE  50C5               	movf	4037,w,c	;volatile
  2839  002C00  0B1F               	andlw	31
  2840  002C02  0102               	movlb	2	; () banked
  2841  002C04  113F               	iorwf	??_readEEEPROM& (0+255),w,b
  2842  002C06  0900               	iorlw	0
  2843  002C08  A4D8               	btfss	status,2,c
  2844  002C0A  D7F1               	goto	l5398
  2845                           
  2846                           ; BSR set to: 2
  2847                           ;main.c: 434: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN); while ((SSPCON2 & 0x1F) | (SSP
      +                          STATbits.R_W));
  2848  002C0C  82C5               	bsf	4037,1,c	;volatile
  2849  002C0E                     l789:
  2850  002C0E  B2C5               	btfsc	4037,1,c	;volatile
  2851  002C10  D7FE               	goto	l789
  2852  002C12                     l5400:
  2853  002C12  A4C7               	btfss	4039,2,c	;volatile
  2854  002C14  D004               	goto	u6410
  2855  002C16  0102               	movlb	2	; () banked
  2856  002C18  6B3F               	clrf	??_readEEEPROM& (0+255),b
  2857  002C1A  2B3F               	incf	??_readEEEPROM& (0+255),f,b
  2858  002C1C  D002               	goto	u6418
  2859  002C1E                     u6410:
  2860  002C1E  0102               	movlb	2	; () banked
  2861  002C20  6B3F               	clrf	??_readEEEPROM& (0+255),b
  2862  002C22                     u6418:
  2863  002C22  50C5               	movf	4037,w,c	;volatile
  2864  002C24  0B1F               	andlw	31
  2865  002C26  0102               	movlb	2	; () banked
  2866  002C28  113F               	iorwf	??_readEEEPROM& (0+255),w,b
  2867  002C2A  0900               	iorlw	0
  2868  002C2C  A4D8               	btfss	status,2,c
  2869  002C2E  D7F1               	goto	l5400
  2870                           
  2871                           ; BSR set to: 2
  2872                           ;main.c: 435: WriteI2C(0xA1); while ((SSPCON2 & 0x1F) | (SSPSTATbits.R_W));
  2873                           
  2874                           ; BSR set to: 2
  2875  002C30  0EA1               	movlw	161
  2876  002C32  EC54  F01D         	call	_WriteI2C
  2877  002C36                     l5404:
  2878  002C36  A4C7               	btfss	4039,2,c	;volatile
  2879  002C38  D004               	goto	u6430
  2880  002C3A  0102               	movlb	2	; () banked
  2881  002C3C  6B3F               	clrf	??_readEEEPROM& (0+255),b
  2882  002C3E  2B3F               	incf	??_readEEEPROM& (0+255),f,b
  2883  002C40  D002               	goto	u6438
  2884  002C42                     u6430:
  2885  002C42  0102               	movlb	2	; () banked
  2886  002C44  6B3F               	clrf	??_readEEEPROM& (0+255),b
  2887  002C46                     u6438:
  2888  002C46  50C5               	movf	4037,w,c	;volatile
  2889  002C48  0B1F               	andlw	31
  2890  002C4A  0102               	movlb	2	; () banked
  2891  002C4C  113F               	iorwf	??_readEEEPROM& (0+255),w,b
  2892  002C4E  0900               	iorlw	0
  2893  002C50  A4D8               	btfss	status,2,c
  2894  002C52  D7F1               	goto	l5404
  2895                           
  2896                           ; BSR set to: 2
  2897                           ;main.c: 436: value = ReadI2C(); while ((SSPCON2 & 0x1F) | (SSPSTATbits.R_W));
  2898                           
  2899                           ; BSR set to: 2
  2900  002C54  ECF9  F020         	call	_ReadI2C	;wreg free
  2901  002C58  0102               	movlb	2	; () banked
  2902  002C5A  6F41               	movwf	readEEEPROM@value& (0+255),b
  2903  002C5C                     l5408:
  2904                           
  2905                           ; BSR set to: 2
  2906  002C5C  A4C7               	btfss	4039,2,c	;volatile
  2907  002C5E  D004               	goto	u6450
  2908  002C60  0102               	movlb	2	; () banked
  2909  002C62  6B3F               	clrf	??_readEEEPROM& (0+255),b
  2910  002C64  2B3F               	incf	??_readEEEPROM& (0+255),f,b
  2911  002C66  D002               	goto	u6458
  2912  002C68                     u6450:
  2913  002C68  0102               	movlb	2	; () banked
  2914  002C6A  6B3F               	clrf	??_readEEEPROM& (0+255),b
  2915  002C6C                     u6458:
  2916  002C6C  50C5               	movf	4037,w,c	;volatile
  2917  002C6E  0B1F               	andlw	31
  2918  002C70  0102               	movlb	2	; () banked
  2919  002C72  113F               	iorwf	??_readEEEPROM& (0+255),w,b
  2920  002C74  0900               	iorlw	0
  2921  002C76  A4D8               	btfss	status,2,c
  2922  002C78  D7F1               	goto	l5408
  2923                           
  2924                           ; BSR set to: 2
  2925                           ;main.c: 437: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  2926  002C7A  84C5               	bsf	4037,2,c	;volatile
  2927  002C7C                     l801:
  2928  002C7C  B4C5               	btfsc	4037,2,c	;volatile
  2929  002C7E  D7FE               	goto	l801
  2930                           
  2931                           ;main.c: 439: return value;
  2932  002C80  0102               	movlb	2	; () banked
  2933  002C82  5141               	movf	readEEEPROM@value& (0+255),w,b
  2934  002C84  0012               	return	
  2935  002C86                     __end_of_readEEEPROM:
  2936                           	opt stack 0
  2937                           tblptru	equ	0xFF8
  2938                           tblptrh	equ	0xFF7
  2939                           tblptrl	equ	0xFF6
  2940                           tablat	equ	0xFF5
  2941                           prodl	equ	0xFF3
  2942                           intcon	equ	0xFF2
  2943                           postinc0	equ	0xFEE
  2944                           wreg	equ	0xFE8
  2945                           postdec1	equ	0xFE5
  2946                           fsr1l	equ	0xFE1
  2947                           indf2	equ	0xFDF
  2948                           postinc2	equ	0xFDE
  2949                           fsr2h	equ	0xFDA
  2950                           fsr2l	equ	0xFD9
  2951                           status	equ	0xFD8
  2952                           
  2953 ;; *************** function _WriteI2C *****************
  2954 ;; Defined at:
  2955 ;;		line 47 in file "I2C/i2c.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;  data_out        1    wreg     unsigned char 
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;  data_out        1    1[BANK2 ] unsigned char 
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      char 
  2962 ;; Registers used:
  2963 ;;		wreg, status,2, status,0
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2969 ;;      Params:         0       0       0       0       0       0       0
  2970 ;;      Locals:         0       0       0       1       0       0       0
  2971 ;;      Temps:          0       0       0       1       0       0       0
  2972 ;;      Totals:         0       0       0       2       0       0       0
  2973 ;;Total ram usage:        2 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; Hardware stack levels required when called:    7
  2976 ;; This function calls:
  2977 ;;		Nothing
  2978 ;; This function is called by:
  2979 ;;		_writeEEEPROM
  2980 ;;		_readEEEPROM
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           	psect	text6
  2985  003AA8                     __ptext6:
  2986                           	opt stack 0
  2987  003AA8                     _WriteI2C:
  2988                           	opt stack 22
  2989                           
  2990                           ; BSR set to: 2
  2991                           ;incstack = 0
  2992                           ;WriteI2C@data_out stored from wreg
  2993  003AA8  0102               	movlb	2	; () banked
  2994  003AAA  6F3D               	movwf	WriteI2C@data_out& (0+255),b
  2995                           
  2996                           ;i2c.c: 49: SSPBUF = data_out;
  2997  003AAC  C23D  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  2998                           
  2999                           ;i2c.c: 50: if ( SSPCON1bits.WCOL )
  3000  003AB0  BEC6               	btfsc	4038,7,c	;volatile
  3001  003AB2  0012               	return	
  3002                           
  3003                           ;i2c.c: 52: else
  3004                           ;i2c.c: 53: {
  3005                           ;i2c.c: 54: if( ((SSPCON1&0x0F)!=0x08) && ((SSPCON1&0x0F)!=0x0B) )
  3006                           
  3007                           ;i2c.c: 51: return ( -1 );
  3008                           ;	Return value of _WriteI2C is never used
  3009  003AB4  50C6               	movf	4038,w,c	;volatile
  3010  003AB6  0B0F               	andlw	15
  3011  003AB8  0A08               	xorlw	8
  3012  003ABA  B4D8               	btfsc	status,2,c
  3013  003ABC  D00C               	goto	l4732
  3014  003ABE  50C6               	movf	4038,w,c	;volatile
  3015  003AC0  0B0F               	andlw	15
  3016  003AC2  0A0B               	xorlw	11
  3017  003AC4  B4D8               	btfsc	status,2,c
  3018  003AC6  D007               	goto	l4732
  3019                           
  3020                           ;i2c.c: 55: {
  3021                           ;i2c.c: 56: SSPCON1bits.CKP = 1;
  3022  003AC8  88C6               	bsf	4038,4,c	;volatile
  3023  003ACA                     l91:
  3024  003ACA  A69E               	btfss	3998,3,c	;volatile
  3025  003ACC  D7FE               	goto	l91
  3026                           
  3027                           ;i2c.c: 59: if ( ( !SSPSTATbits.R_W ) && ( !SSPSTATbits.BF ) )
  3028  003ACE  B4C7               	btfsc	4039,2,c	;volatile
  3029  003AD0  0012               	return	
  3030  003AD2  50C7               	movf	4039,w,c	;volatile
  3031                           
  3032                           ;i2c.c: 66: }
  3033                           ;i2c.c: 67: }
  3034                           
  3035                           ;i2c.c: 63: else
  3036                           ;i2c.c: 64: {
  3037                           ;i2c.c: 65: return ( 0 );
  3038                           ;	Return value of _WriteI2C is never used
  3039                           
  3040                           ;i2c.c: 62: }
  3041                           
  3042                           ;i2c.c: 60: {
  3043                           ;i2c.c: 61: return ( -2 );
  3044                           ;	Return value of _WriteI2C is never used
  3045  003AD4  0012               	return	
  3046  003AD6                     l4732:
  3047                           
  3048                           ;i2c.c: 68: else if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
  3049  003AD6  50C6               	movf	4038,w,c	;volatile
  3050  003AD8  0B0F               	andlw	15
  3051  003ADA  0A08               	xorlw	8
  3052  003ADC  B4D8               	btfsc	status,2,c
  3053  003ADE  D005               	goto	l100
  3054  003AE0  50C6               	movf	4038,w,c	;volatile
  3055  003AE2  0B0F               	andlw	15
  3056  003AE4  0A0B               	xorlw	11
  3057  003AE6  A4D8               	btfss	status,2,c
  3058  003AE8  0012               	return	
  3059  003AEA                     l100:
  3060  003AEA  B0C7               	btfsc	4039,0,c	;volatile
  3061  003AEC  D7FE               	goto	l100
  3062  003AEE                     l4736:
  3063  003AEE  A4C7               	btfss	4039,2,c	;volatile
  3064  003AF0  D004               	goto	u5080
  3065  003AF2  0102               	movlb	2	; () banked
  3066  003AF4  6B3C               	clrf	??_WriteI2C& (0+255),b
  3067  003AF6  2B3C               	incf	??_WriteI2C& (0+255),f,b
  3068  003AF8  D002               	goto	u5088
  3069  003AFA                     u5080:
  3070  003AFA  0102               	movlb	2	; () banked
  3071  003AFC  6B3C               	clrf	??_WriteI2C& (0+255),b
  3072  003AFE                     u5088:
  3073  003AFE  50C5               	movf	4037,w,c	;volatile
  3074  003B00  0B1F               	andlw	31
  3075  003B02  0102               	movlb	2	; () banked
  3076  003B04  113C               	iorwf	??_WriteI2C& (0+255),w,b
  3077  003B06  0900               	iorlw	0
  3078  003B08  A4D8               	btfss	status,2,c
  3079  003B0A  D7F1               	goto	l4736
  3080                           
  3081                           ; BSR set to: 2
  3082                           ;i2c.c: 72: if ( SSPCON2bits.ACKSTAT )
  3083  003B0C  50C5               	movf	4037,w,c	;volatile
  3084                           
  3085                           ; BSR set to: 2
  3086                           
  3087                           ; BSR set to: 2
  3088                           
  3089                           ; BSR set to: 2
  3090                           
  3091                           ; BSR set to: 2
  3092                           ;i2c.c: 74: else return ( 0 );
  3093                           ;	Return value of _WriteI2C is never used
  3094                           
  3095                           ; BSR set to: 2
  3096                           
  3097                           ; BSR set to: 2
  3098                           ;i2c.c: 73: return ( -2 );
  3099                           ;	Return value of _WriteI2C is never used
  3100  003B0E  0012               	return	
  3101  003B10                     __end_of_WriteI2C:
  3102                           	opt stack 0
  3103                           tblptru	equ	0xFF8
  3104                           tblptrh	equ	0xFF7
  3105                           tblptrl	equ	0xFF6
  3106                           tablat	equ	0xFF5
  3107                           prodl	equ	0xFF3
  3108                           intcon	equ	0xFF2
  3109                           postinc0	equ	0xFEE
  3110                           wreg	equ	0xFE8
  3111                           postdec1	equ	0xFE5
  3112                           fsr1l	equ	0xFE1
  3113                           indf2	equ	0xFDF
  3114                           postinc2	equ	0xFDE
  3115                           fsr2h	equ	0xFDA
  3116                           fsr2l	equ	0xFD9
  3117                           status	equ	0xFD8
  3118                           
  3119 ;; *************** function _ReadI2C *****************
  3120 ;; Defined at:
  3121 ;;		line 32 in file "I2C/i2c.c"
  3122 ;; Parameters:    Size  Location     Type
  3123 ;;		None
  3124 ;; Auto vars:     Size  Location     Type
  3125 ;;		None
  3126 ;; Return value:  Size  Location     Type
  3127 ;;                  1    wreg      unsigned char 
  3128 ;; Registers used:
  3129 ;;		wreg, status,2, status,0
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3135 ;;      Params:         0       0       0       0       0       0       0
  3136 ;;      Locals:         0       0       0       0       0       0       0
  3137 ;;      Temps:          0       0       0       0       0       0       0
  3138 ;;      Totals:         0       0       0       0       0       0       0
  3139 ;;Total ram usage:        0 bytes
  3140 ;; Hardware stack levels used:    1
  3141 ;; Hardware stack levels required when called:    7
  3142 ;; This function calls:
  3143 ;;		Nothing
  3144 ;; This function is called by:
  3145 ;;		_readEEEPROM
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           	psect	text7
  3150  0041F2                     __ptext7:
  3151                           	opt stack 0
  3152  0041F2                     _ReadI2C:
  3153                           	opt stack 22
  3154                           
  3155                           ;i2c.c: 34: if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
  3156                           
  3157                           ;incstack = 0
  3158  0041F2  50C6               	movf	4038,w,c	;volatile
  3159  0041F4  0B0F               	andlw	15
  3160  0041F6  0A08               	xorlw	8
  3161  0041F8  B4D8               	btfsc	status,2,c
  3162  0041FA  D004               	goto	l80
  3163  0041FC  50C6               	movf	4038,w,c	;volatile
  3164  0041FE  0B0F               	andlw	15
  3165  004200  0A0B               	xorlw	11
  3166  004202  B4D8               	btfsc	status,2,c
  3167  004204                     l80:
  3168                           
  3169                           ;i2c.c: 35: SSPCON2bits.RCEN = 1;
  3170  004204  86C5               	bsf	4037,3,c	;volatile
  3171  004206                     l81:
  3172  004206  A0C7               	btfss	4039,0,c	;volatile
  3173  004208  D7FE               	goto	l81
  3174                           
  3175                           ;i2c.c: 37: return ( SSPBUF );
  3176  00420A  50C9               	movf	4041,w,c	;volatile
  3177  00420C  0012               	return	
  3178  00420E                     __end_of_ReadI2C:
  3179                           	opt stack 0
  3180                           tblptru	equ	0xFF8
  3181                           tblptrh	equ	0xFF7
  3182                           tblptrl	equ	0xFF6
  3183                           tablat	equ	0xFF5
  3184                           prodl	equ	0xFF3
  3185                           intcon	equ	0xFF2
  3186                           postinc0	equ	0xFEE
  3187                           wreg	equ	0xFE8
  3188                           postdec1	equ	0xFE5
  3189                           fsr1l	equ	0xFE1
  3190                           indf2	equ	0xFDF
  3191                           postinc2	equ	0xFDE
  3192                           fsr2h	equ	0xFDA
  3193                           fsr2l	equ	0xFD9
  3194                           status	equ	0xFD8
  3195                           
  3196 ;; *************** function _global_init *****************
  3197 ;; Defined at:
  3198 ;;		line 886 in file "main.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;		None
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;		None
  3203 ;; Return value:  Size  Location     Type
  3204 ;;                  1    wreg      void 
  3205 ;; Registers used:
  3206 ;;		None
  3207 ;; Tracked objects:
  3208 ;;		On entry : 0/0
  3209 ;;		On exit  : 0/0
  3210 ;;		Unchanged: 0/0
  3211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3212 ;;      Params:         0       0       0       0       0       0       0
  3213 ;;      Locals:         0       0       0       0       0       0       0
  3214 ;;      Temps:          0       0       0       0       0       0       0
  3215 ;;      Totals:         0       0       0       0       0       0       0
  3216 ;;Total ram usage:        0 bytes
  3217 ;; Hardware stack levels used:    1
  3218 ;; Hardware stack levels required when called:    7
  3219 ;; This function calls:
  3220 ;;		Nothing
  3221 ;; This function is called by:
  3222 ;;		_main
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           	psect	text8
  3227  004360                     __ptext8:
  3228                           	opt stack 0
  3229  004360                     _global_init:
  3230                           	opt stack 23
  3231                           
  3232                           ;main.c: 888: RCONbits.IPEN = 1;
  3233                           
  3234                           ;incstack = 0
  3235  004360  8ED0               	bsf	4048,7,c	;volatile
  3236                           
  3237                           ;main.c: 889: INTCONbits.GIE = 1;
  3238  004362  8EF2               	bsf	intcon,7,c	;volatile
  3239                           
  3240                           ;main.c: 890: INTCONbits.GIEH = 1;
  3241  004364  8EF2               	bsf	intcon,7,c	;volatile
  3242  004366  0012               	return		;funcret
  3243  004368                     __end_of_global_init:
  3244                           	opt stack 0
  3245                           tblptru	equ	0xFF8
  3246                           tblptrh	equ	0xFF7
  3247                           tblptrl	equ	0xFF6
  3248                           tablat	equ	0xFF5
  3249                           prodl	equ	0xFF3
  3250                           intcon	equ	0xFF2
  3251                           postinc0	equ	0xFEE
  3252                           wreg	equ	0xFE8
  3253                           postdec1	equ	0xFE5
  3254                           fsr1l	equ	0xFE1
  3255                           indf2	equ	0xFDF
  3256                           postinc2	equ	0xFDE
  3257                           fsr2h	equ	0xFDA
  3258                           fsr2l	equ	0xFD9
  3259                           status	equ	0xFD8
  3260                           
  3261 ;; *************** function _displayInterface *****************
  3262 ;; Defined at:
  3263 ;;		line 203 in file "main.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;  mode            2   39[BANK2 ] int 
  3266 ;;  status          2   41[BANK2 ] int 
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;  tmp             3   45[BANK2 ] unsigned char [3]
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  1    wreg      void 
  3271 ;; Registers used:
  3272 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3278 ;;      Params:         0       0       0       4       0       0       0
  3279 ;;      Locals:         0       0       0       3       0       0       0
  3280 ;;      Temps:          0       0       0       2       0       0       0
  3281 ;;      Totals:         0       0       0       9       0       0       0
  3282 ;;Total ram usage:        9 bytes
  3283 ;; Hardware stack levels used:    1
  3284 ;; Hardware stack levels required when called:   10
  3285 ;; This function calls:
  3286 ;;		_BusyXLCD
  3287 ;;		_SetDDRamAddr
  3288 ;;		_WriteCmdXLCD
  3289 ;;		_putrsXLCD
  3290 ;;		_putsXLCD
  3291 ;;		_sprintf
  3292 ;; This function is called by:
  3293 ;;		_main
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           	psect	text9
  3298  0006C2                     __ptext9:
  3299                           	opt stack 0
  3300  0006C2                     _displayInterface:
  3301                           	opt stack 20
  3302  0006C2                     l10148:
  3303  0006C2  EC8A  F01F         	call	_BusyXLCD	;wreg free
  3304  0006C6  0900               	iorlw	0
  3305  0006C8  A4D8               	btfss	status,2,c
  3306  0006CA  D7FB               	goto	l10148
  3307                           
  3308                           ;main.c: 211: WriteCmdXLCD(0b00001011);
  3309  0006CC  0E0B               	movlw	11
  3310  0006CE  ECEA  F01E         	call	_WriteCmdXLCD
  3311                           
  3312                           ;main.c: 214: if(mode==0){
  3313  0006D2  0102               	movlb	2	; () banked
  3314  0006D4  5163               	movf	displayInterface@mode& (0+255),w,b
  3315  0006D6  0102               	movlb	2	; () banked
  3316  0006D8  1164               	iorwf	(displayInterface@mode+1)& (0+255),w,b
  3317  0006DA  A4D8               	btfss	status,2,c
  3318  0006DC  D01D               	goto	l10160
  3319                           
  3320                           ; BSR set to: 2
  3321                           ;main.c: 215: displayHours=hours;
  3322  0006DE  C236  F2A9         	movff	_hours,_displayHours	;volatile
  3323  0006E2  C237  F2AA         	movff	_hours+1,_displayHours+1	;volatile
  3324                           
  3325                           ;main.c: 216: displayMinutes=minutes;
  3326  0006E6  C234  F2A7         	movff	_minutes,_displayMinutes	;volatile
  3327  0006EA  C235  F2A8         	movff	_minutes+1,_displayMinutes+1	;volatile
  3328                           
  3329                           ;main.c: 217: displaySeconds=seconds;
  3330  0006EE  C232  F2A5         	movff	_seconds,_displaySeconds	;volatile
  3331  0006F2  C233  F2A6         	movff	_seconds+1,_displaySeconds+1	;volatile
  3332                           
  3333                           ;main.c: 218: displayTemperature=temperature;
  3334  0006F6  C2A3  F29F         	movff	_temperature,_displayTemperature	;volatile
  3335  0006FA  C2A4  F2A0         	movff	_temperature+1,_displayTemperature+1	;volatile
  3336                           
  3337                           ;main.c: 219: displayLuminosity=luminosity;
  3338  0006FE  C2A1  F29D         	movff	_luminosity,_displayLuminosity	;volatile
  3339  000702  C2A2  F29E         	movff	_luminosity+1,_displayLuminosity+1	;volatile
  3340  000706                     l10156:
  3341  000706  EC8A  F01F         	call	_BusyXLCD	;wreg free
  3342  00070A  0900               	iorlw	0
  3343  00070C  A4D8               	btfss	status,2,c
  3344  00070E  D7FB               	goto	l10156
  3345                           
  3346                           ;main.c: 222: WriteCmdXLCD(0b00001101);
  3347  000710  0E0D               	movlw	13
  3348  000712  ECEA  F01E         	call	_WriteCmdXLCD
  3349                           
  3350                           ;main.c: 223: }
  3351  000716  D008               	goto	l10164
  3352  000718                     l10160:
  3353  000718  EC8A  F01F         	call	_BusyXLCD	;wreg free
  3354  00071C  0900               	iorlw	0
  3355  00071E  A4D8               	btfss	status,2,c
  3356  000720  D7FB               	goto	l10160
  3357                           
  3358                           ;main.c: 226: WriteCmdXLCD(0b00001111);
  3359  000722  0E0F               	movlw	15
  3360  000724  ECEA  F01E         	call	_WriteCmdXLCD
  3361  000728                     l10164:
  3362  000728  EC8A  F01F         	call	_BusyXLCD	;wreg free
  3363  00072C  0900               	iorlw	0
  3364  00072E  A4D8               	btfss	status,2,c
  3365  000730  D7FB               	goto	l10164
  3366                           
  3367                           ;main.c: 231: SetDDRamAddr(0x01);
  3368  000732  0E01               	movlw	1
  3369  000734  EC88  F01D         	call	_SetDDRamAddr
  3370                           
  3371                           ;main.c: 232: tmp[0] = "\0";
  3372  000738  0EB2               	movlw	low STR_13
  3373  00073A  0102               	movlb	2	; () banked
  3374  00073C  6F69               	movwf	displayInterface@tmp& (0+255),b
  3375                           
  3376                           ; BSR set to: 2
  3377                           ;main.c: 233: if(displayHours<10){sprintf(tmp,"0%d",displayHours);}
  3378  00073E  0102               	movlb	2	; () banked
  3379  000740  BFAA               	btfsc	(_displayHours+1)& (0+255),7,b	;volatile
  3380  000742  D008               	goto	l10172
  3381  000744  0102               	movlb	2	; () banked
  3382  000746  51AA               	movf	(_displayHours+1)& (0+255),w,b	;volatile
  3383  000748  E118               	bnz	l10174
  3384  00074A  0E0A               	movlw	10
  3385  00074C  0102               	movlb	2	; () banked
  3386  00074E  5DA9               	subwf	_displayHours& (0+255),w,b	;volatile
  3387  000750  B0D8               	btfsc	status,0,c
  3388  000752  D013               	goto	l10174
  3389  000754                     l10172:
  3390                           
  3391                           ; BSR set to: 2
  3392  000754  0E69               	movlw	low displayInterface@tmp
  3393  000756  0102               	movlb	2	; () banked
  3394  000758  6F57               	movwf	sprintf@wh& (0+255),b
  3395  00075A  0E02               	movlw	high displayInterface@tmp
  3396  00075C  0102               	movlb	2	; () banked
  3397  00075E  6F58               	movwf	(sprintf@wh+1)& (0+255),b
  3398  000760  0EA8               	movlw	low STR_14
  3399  000762  0102               	movlb	2	; () banked
  3400  000764  6F59               	movwf	sprintf@f& (0+255),b
  3401  000766  0E06               	movlw	high STR_14
  3402  000768  0102               	movlb	2	; () banked
  3403  00076A  6F5A               	movwf	(sprintf@f+1)& (0+255),b
  3404  00076C  C2A9  F25B         	movff	_displayHours,?_sprintf+4	;volatile
  3405  000770  C2AA  F25C         	movff	_displayHours+1,?_sprintf+5	;volatile
  3406  000774  EC76  F01E         	call	_sprintf	;wreg free
  3407  000778  D012               	goto	l10176
  3408  00077A                     l10174:
  3409                           
  3410                           ;main.c: 234: else{sprintf(tmp,"%d",displayHours);}
  3411  00077A  0E69               	movlw	low displayInterface@tmp
  3412  00077C  0102               	movlb	2	; () banked
  3413  00077E  6F57               	movwf	sprintf@wh& (0+255),b
  3414  000780  0E02               	movlw	high displayInterface@tmp
  3415  000782  0102               	movlb	2	; () banked
  3416  000784  6F58               	movwf	(sprintf@wh+1)& (0+255),b
  3417  000786  0E4D               	movlw	low (STR_11+66)
  3418  000788  0102               	movlb	2	; () banked
  3419  00078A  6F59               	movwf	sprintf@f& (0+255),b
  3420  00078C  0E06               	movlw	high (STR_11+66)
  3421  00078E  0102               	movlb	2	; () banked
  3422  000790  6F5A               	movwf	(sprintf@f+1)& (0+255),b
  3423  000792  C2A9  F25B         	movff	_displayHours,?_sprintf+4	;volatile
  3424  000796  C2AA  F25C         	movff	_displayHours+1,?_sprintf+5	;volatile
  3425  00079A  EC76  F01E         	call	_sprintf	;wreg free
  3426  00079E                     l10176:
  3427                           
  3428                           ;main.c: 235: putsXLCD(tmp);
  3429  00079E  0E69               	movlw	low displayInterface@tmp
  3430  0007A0  0102               	movlb	2	; () banked
  3431  0007A2  6F3D               	movwf	putsXLCD@buffer& (0+255),b
  3432  0007A4  0E02               	movlw	high displayInterface@tmp
  3433  0007A6  0102               	movlb	2	; () banked
  3434  0007A8  6F3E               	movwf	(putsXLCD@buffer+1)& (0+255),b
  3435  0007AA  EC31  F020         	call	_putsXLCD	;wreg free
  3436  0007AE                     l10178:
  3437  0007AE  EC8A  F01F         	call	_BusyXLCD	;wreg free
  3438  0007B2  0900               	iorlw	0
  3439  0007B4  A4D8               	btfss	status,2,c
  3440  0007B6  D7FB               	goto	l10178
  3441                           
  3442                           ;main.c: 238: SetDDRamAddr(0x03);
  3443  0007B8  0E03               	movlw	3
  3444  0007BA  EC88  F01D         	call	_SetDDRamAddr
  3445                           
  3446                           ;main.c: 239: putrsXLCD(":");
  3447  0007BE  0EB4               	movlw	low STR_16
  3448  0007C0  0102               	movlb	2	; () banked
  3449  0007C2  6F3D               	movwf	putrsXLCD@buffer& (0+255),b
  3450  0007C4  0E06               	movlw	high STR_16
  3451  0007C6  0102               	movlb	2	; () banked
  3452  0007C8  6F3E               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  3453  0007CA  ECE0  F01F         	call	_putrsXLCD	;wreg free
  3454  0007CE                     l10184:
  3455  0007CE  EC8A  F01F         	call	_BusyXLCD	;wreg free
  3456  0007D2  0900               	iorlw	0
  3457  0007D4  A4D8               	btfss	status,2,c
  3458  0007D6  D7FB               	goto	l10184
  3459                           
  3460                           ;main.c: 242: SetDDRamAddr(0x04);
  3461  0007D8  0E04               	movlw	4
  3462  0007DA  EC88  F01D         	call	_SetDDRamAddr
  3463                           
  3464                           ;main.c: 243: tmp[0] = "\0";
  3465  0007DE  0EB2               	movlw	low STR_13
  3466  0007E0  0102               	movlb	2	; () banked
  3467  0007E2  6F69               	movwf	displayInterface@tmp& (0+255),b
  3468                           
  3469                           ; BSR set to: 2
  3470                           ;main.c: 244: if(displayMinutes<10){sprintf(tmp,"0%d",displayMinutes);}
  3471  0007E4  0102               	movlb	2	; () banked
  3472  0007E6  BFA8               	btfsc	(_displayMinutes+1)& (0+255),7,b	;volatile
  3473  0007E8  D008               	goto	l10192
  3474  0007EA  0102               	movlb	2	; () banked
  3475  0007EC  51A8               	movf	(_displayMinutes+1)& (0+255),w,b	;volatile
  3476  0007EE  E118               	bnz	l10194
  3477  0007F0  0E0A               	movlw	10
  3478  0007F2  0102               	movlb	2	; () banked
  3479  0007F4  5DA7               	subwf	_displayMinutes& (0+255),w,b	;volatile
  3480  0007F6  B0D8               	btfsc	status,0,c
  3481  0007F8  D013               	goto	l10194
  3482  0007FA                     l10192:
  3483                           
  3484                           ; BSR set to: 2
  3485  0007FA  0E69               	movlw	low displayInterface@tmp
  3486  0007FC  0102               	movlb	2	; () banked
  3487  0007FE  6F57               	movwf	sprintf@wh& (0+255),b
  3488  000800  0E02               	movlw	high displayInterface@tmp
  3489  000802  0102               	movlb	2	; () banked
  3490  000804  6F58               	movwf	(sprintf@wh+1)& (0+255),b
  3491  000806  0EA8               	movlw	low STR_14
  3492  000808  0102               	movlb	2	; () banked
  3493  00080A  6F59               	movwf	sprintf@f& (0+255),b
  3494  00080C  0E06               	movlw	high STR_14
  3495  00080E  0102               	movlb	2	; () banked
  3496  000810  6F5A               	movwf	(sprintf@f+1)& (0+255),b
  3497  000812  C2A7  F25B         	movff	_displayMinutes,?_sprintf+4	;volatile
  3498  000816  C2A8  F25C         	movff	_displayMinutes+1,?_sprintf+5	;volatile
  3499  00081A  EC76  F01E         	call	_sprintf	;wreg free
  3500  00081E  D012               	goto	l10196
  3501  000820                     l10194:
  3502                           
  3503                           ;main.c: 245: else{sprintf(tmp,"%d",displayMinutes);}
  3504  000820  0E69               	movlw	low displayInterface@tmp
  3505  000822  0102               	movlb	2	; () banked
  3506  000824  6F57               	movwf	sprintf@wh& (0+255),b
  3507  000826  0E02               	movlw	high displayInterface@tmp
  3508  000828  0102               	movlb	2	; () banked
  3509  00082A  6F58               	movwf	(sprintf@wh+1)& (0+255),b
  3510  00082C  0E4D               	movlw	low (STR_11+66)
  3511  00082E  0102               	movlb	2	; () banked
  3512  000830  6F59               	movwf	sprintf@f& (0+255),b
  3513  000832  0E06               	movlw	high (STR_11+66)
  3514  000834  0102               	movlb	2	; () banked
  3515  000836  6F5A               	movwf	(sprintf@f+1)& (0+255),b
  3516  000838  C2A7  F25B         	movff	_displayMinutes,?_sprintf+4	;volatile
  3517  00083C  C2A8  F25C         	movff	_displayMinutes+1,?_sprintf+5	;volatile
  3518  000840  EC76  F01E         	call	_sprintf	;wreg free
  3519  000844                     l10196:
  3520                           
  3521                           ;main.c: 246: putsXLCD(tmp);
  3522  000844  0E69               	movlw	low displayInterface@tmp
  3523  000846  0102               	movlb	2	; () banked
  3524  000848  6F3D               	movwf	putsXLCD@buffer& (0+255),b
  3525  00084A  0E02               	movlw	high displayInterface@tmp
  3526  00084C  0102               	movlb	2	; () banked
  3527  00084E  6F3E               	movwf	(putsXLCD@buffer+1)& (0+255),b
  3528  000850  EC31  F020         	call	_putsXLCD	;wreg free
  3529  000854                     l10198:
  3530  000854  EC8A  F01F         	call	_BusyXLCD	;wreg free
  3531  000858  0900               	iorlw	0
  3532  00085A  A4D8               	btfss	status,2,c
  3533  00085C  D7FB               	goto	l10198
  3534                           
  3535                           ;main.c: 249: SetDDRamAddr(0x06);
  3536  00085E  0E06               	movlw	6
  3537  000860  EC88  F01D         	call	_SetDDRamAddr
  3538                           
  3539                           ;main.c: 250: putrsXLCD(":");
  3540  000864  0EB4               	movlw	low STR_16
  3541  000866  0102               	movlb	2	; () banked
  3542  000868  6F3D               	movwf	putrsXLCD@buffer& (0+255),b
  3543  00086A  0E06               	movlw	high STR_16
  3544  00086C  0102               	movlb	2	; () banked
  3545  00086E  6F3E               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  3546  000870  ECE0  F01F         	call	_putrsXLCD	;wreg free
  3547  000874                     l10204:
  3548  000874  EC8A  F01F         	call	_BusyXLCD	;wreg free
  3549  000878  0900               	iorlw	0
  3550  00087A  A4D8               	btfss	status,2,c
  3551  00087C  D7FB               	goto	l10204
  3552                           
  3553                           ;main.c: 253: SetDDRamAddr(0x07);
  3554  00087E  0E07               	movlw	7
  3555  000880  EC88  F01D         	call	_SetDDRamAddr
  3556                           
  3557                           ;main.c: 254: tmp[0] = "\0";
  3558  000884  0EB2               	movlw	low STR_13
  3559  000886  0102               	movlb	2	; () banked
  3560  000888  6F69               	movwf	displayInterface@tmp& (0+255),b
  3561                           
  3562                           ; BSR set to: 2
  3563                           ;main.c: 255: if(displaySeconds<10){sprintf(tmp,"0%d",displaySeconds);}
  3564  00088A  0102               	movlb	2	; () banked
  3565  00088C  BFA6               	btfsc	(_displaySeconds+1)& (0+255),7,b	;volatile
  3566  00088E  D008               	goto	l10212
  3567  000890  0102               	movlb	2	; () banked
  3568  000892  51A6               	movf	(_displaySeconds+1)& (0+255),w,b	;volatile
  3569  000894  E118               	bnz	l10214
  3570  000896  0E0A               	movlw	10
  3571  000898  0102               	movlb	2	; () banked
  3572  00089A  5DA5               	subwf	_displaySeconds& (0+255),w,b	;volatile
  3573  00089C  B0D8               	btfsc	status,0,c
  3574  00089E  D013               	goto	l10214
  3575  0008A0                     l10212:
  3576                           
  3577                           ; BSR set to: 2
  3578  0008A0  0E69               	movlw	low displayInterface@tmp
  3579  0008A2  0102               	movlb	2	; () banked
  3580  0008A4  6F57               	movwf	sprintf@wh& (0+255),b
  3581  0008A6  0E02               	movlw	high displayInterface@tmp
  3582  0008A8  0102               	movlb	2	; () banked
  3583  0008AA  6F58               	movwf	(sprintf@wh+1)& (0+255),b
  3584  0008AC  0EA8               	movlw	low STR_14
  3585  0008AE  0102               	movlb	2	; () banked
  3586  0008B0  6F59               	movwf	sprintf@f& (0+255),b
  3587  0008B2  0E06               	movlw	high STR_14
  3588  0008B4  0102               	movlb	2	; () banked
  3589  0008B6  6F5A               	movwf	(sprintf@f+1)& (0+255),b
  3590  0008B8  C2A5  F25B         	movff	_displaySeconds,?_sprintf+4	;volatile
  3591  0008BC  C2A6  F25C         	movff	_displaySeconds+1,?_sprintf+5	;volatile
  3592  0008C0  EC76  F01E         	call	_sprintf	;wreg free
  3593  0008C4  D012               	goto	l10216
  3594  0008C6                     l10214:
  3595                           
  3596                           ;main.c: 256: else{sprintf(tmp,"%d",displaySeconds);}
  3597  0008C6  0E69               	movlw	low displayInterface@tmp
  3598  0008C8  0102               	movlb	2	; () banked
  3599  0008CA  6F57               	movwf	sprintf@wh& (0+255),b
  3600  0008CC  0E02               	movlw	high displayInterface@tmp
  3601  0008CE  0102               	movlb	2	; () banked
  3602  0008D0  6F58               	movwf	(sprintf@wh+1)& (0+255),b
  3603  0008D2  0E4D               	movlw	low (STR_11+66)
  3604  0008D4  0102               	movlb	2	; () banked
  3605  0008D6  6F59               	movwf	sprintf@f& (0+255),b
  3606  0008D8  0E06               	movlw	high (STR_11+66)
  3607  0008DA  0102               	movlb	2	; () banked
  3608  0008DC  6F5A               	movwf	(sprintf@f+1)& (0+255),b
  3609  0008DE  C2A5  F25B         	movff	_displaySeconds,?_sprintf+4	;volatile
  3610  0008E2  C2A6  F25C         	movff	_displaySeconds+1,?_sprintf+5	;volatile
  3611  0008E6  EC76  F01E         	call	_sprintf	;wreg free
  3612  0008EA                     l10216:
  3613                           
  3614                           ;main.c: 257: putsXLCD(tmp);
  3615  0008EA  0E69               	movlw	low displayInterface@tmp
  3616  0008EC  0102               	movlb	2	; () banked
  3617  0008EE  6F3D               	movwf	putsXLCD@buffer& (0+255),b
  3618  0008F0  0E02               	movlw	high displayInterface@tmp
  3619  0008F2  0102               	movlb	2	; () banked
  3620  0008F4  6F3E               	movwf	(putsXLCD@buffer+1)& (0+255),b
  3621  0008F6  EC31  F020         	call	_putsXLCD	;wreg free
  3622  0008FA                     l10218:
  3623  0008FA  EC8A  F01F         	call	_BusyXLCD	;wreg free
  3624  0008FE  0900               	iorlw	0
  3625  000900  A4D8               	btfss	status,2,c
  3626  000902  D7FB               	goto	l10218
  3627                           
  3628                           ;main.c: 261: SetDDRamAddr(0x0A);
  3629  000904  0E0A               	movlw	10
  3630  000906  EC88  F01D         	call	_SetDDRamAddr
  3631                           
  3632                           ;main.c: 262: if(mode==1){
  3633  00090A  0102               	movlb	2	; () banked
  3634  00090C  0563               	decf	displayInterface@mode& (0+255),w,b
  3635  00090E  0102               	movlb	2	; () banked
  3636  000910  1164               	iorwf	(displayInterface@mode+1)& (0+255),w,b
  3637  000912  A4D8               	btfss	status,2,c
  3638  000914  D008               	goto	l583
  3639                           
  3640                           ; BSR set to: 2
  3641                           ;main.c: 263: putrsXLCD("mM");
  3642  000916  0EAF               	movlw	low STR_24
  3643  000918  0102               	movlb	2	; () banked
  3644  00091A  6F3D               	movwf	putrsXLCD@buffer& (0+255),b
  3645  00091C  0E06               	movlw	high STR_24
  3646  00091E  0102               	movlb	2	; () banked
  3647  000920  6F3E               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  3648  000922  ECE0  F01F         	call	_putrsXLCD	;wreg free
  3649  000926                     l583:
  3650                           
  3651                           ;main.c: 264: }
  3652                           ;main.c: 265: putrsXLCD("  ");
  3653  000926  0EAC               	movlw	low STR_25
  3654  000928  0102               	movlb	2	; () banked
  3655  00092A  6F3D               	movwf	putrsXLCD@buffer& (0+255),b
  3656  00092C  0E06               	movlw	high STR_25
  3657  00092E  0102               	movlb	2	; () banked
  3658  000930  6F3E               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  3659  000932  ECE0  F01F         	call	_putrsXLCD	;wreg free
  3660  000936                     l10226:
  3661  000936  EC8A  F01F         	call	_BusyXLCD	;wreg free
  3662  00093A  0900               	iorlw	0
  3663  00093C  A4D8               	btfss	status,2,c
  3664  00093E  D7FB               	goto	l10226
  3665                           
  3666                           ;main.c: 269: SetDDRamAddr(0x0C);
  3667  000940  0E0C               	movlw	12
  3668  000942  EC88  F01D         	call	_SetDDRamAddr
  3669                           
  3670                           ;main.c: 270: if(wALTON==1 || mode==1){
  3671  000946  0102               	movlb	2	; () banked
  3672  000948  059B               	decf	_wALTON& (0+255),w,b	;volatile
  3673  00094A  0102               	movlb	2	; () banked
  3674  00094C  119C               	iorwf	(_wALTON+1)& (0+255),w,b	;volatile
  3675  00094E  B4D8               	btfsc	status,2,c
  3676  000950  D006               	goto	l10234
  3677                           
  3678                           ; BSR set to: 2
  3679  000952  0102               	movlb	2	; () banked
  3680  000954  0563               	decf	displayInterface@mode& (0+255),w,b
  3681  000956  0102               	movlb	2	; () banked
  3682  000958  1164               	iorwf	(displayInterface@mode+1)& (0+255),w,b
  3683  00095A  A4D8               	btfss	status,2,c
  3684  00095C  D009               	goto	l10236
  3685  00095E                     l10234:
  3686                           
  3687                           ; BSR set to: 2
  3688                           ;main.c: 271: putrsXLCD("T");
  3689  00095E  0EBC               	movlw	low STR_26
  3690  000960  0102               	movlb	2	; () banked
  3691  000962  6F3D               	movwf	putrsXLCD@buffer& (0+255),b
  3692  000964  0E06               	movlw	high STR_26
  3693  000966  0102               	movlb	2	; () banked
  3694  000968  6F3E               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  3695  00096A  ECE0  F01F         	call	_putrsXLCD	;wreg free
  3696                           
  3697                           ;main.c: 272: }
  3698  00096E  D008               	goto	l10238
  3699  000970                     l10236:
  3700                           
  3701                           ;main.c: 273: else{
  3702                           ;main.c: 274: putrsXLCD(" ");
  3703  000970  0EAD               	movlw	low (STR_25+1)
  3704  000972  0102               	movlb	2	; () banked
  3705  000974  6F3D               	movwf	putrsXLCD@buffer& (0+255),b
  3706  000976  0E06               	movlw	high (STR_25+1)
  3707  000978  0102               	movlb	2	; () banked
  3708  00097A  6F3E               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  3709  00097C  ECE0  F01F         	call	_putrsXLCD	;wreg free
  3710  000980                     l10238:
  3711  000980  EC8A  F01F         	call	_BusyXLCD	;wreg free
  3712  000984  0900               	iorlw	0
  3713  000986  A4D8               	btfss	status,2,c
  3714  000988  D7FB               	goto	l10238
  3715  00098A                     l10240:
  3716  00098A  EC8A  F01F         	call	_BusyXLCD	;wreg free
  3717  00098E  0900               	iorlw	0
  3718  000990  A4D8               	btfss	status,2,c
  3719  000992  D7FB               	goto	l10240
  3720                           
  3721                           ;main.c: 280: SetDDRamAddr(0x0D);
  3722  000994  0E0D               	movlw	13
  3723  000996  EC88  F01D         	call	_SetDDRamAddr
  3724                           
  3725                           ;main.c: 281: if(wALLON==1 || mode==1){
  3726  00099A  0102               	movlb	2	; () banked
  3727  00099C  0599               	decf	_wALLON& (0+255),w,b	;volatile
  3728  00099E  0102               	movlb	2	; () banked
  3729  0009A0  119A               	iorwf	(_wALLON+1)& (0+255),w,b	;volatile
  3730  0009A2  B4D8               	btfsc	status,2,c
  3731  0009A4  D006               	goto	l10248
  3732                           
  3733                           ; BSR set to: 2
  3734  0009A6  0102               	movlb	2	; () banked
  3735  0009A8  0563               	decf	displayInterface@mode& (0+255),w,b
  3736  0009AA  0102               	movlb	2	; () banked
  3737  0009AC  1164               	iorwf	(displayInterface@mode+1)& (0+255),w,b
  3738  0009AE  A4D8               	btfss	status,2,c
  3739  0009B0  D009               	goto	l10250
  3740  0009B2                     l10248:
  3741                           
  3742                           ; BSR set to: 2
  3743                           ;main.c: 282: putrsXLCD("L");
  3744  0009B2  0EBA               	movlw	low STR_28
  3745  0009B4  0102               	movlb	2	; () banked
  3746  0009B6  6F3D               	movwf	putrsXLCD@buffer& (0+255),b
  3747  0009B8  0E06               	movlw	high STR_28
  3748  0009BA  0102               	movlb	2	; () banked
  3749  0009BC  6F3E               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  3750  0009BE  ECE0  F01F         	call	_putrsXLCD	;wreg free
  3751                           
  3752                           ;main.c: 283: }
  3753  0009C2  D008               	goto	l10252
  3754  0009C4                     l10250:
  3755                           
  3756                           ;main.c: 284: else{
  3757                           ;main.c: 285: putrsXLCD(" ");
  3758  0009C4  0EAD               	movlw	low (STR_25+1)
  3759  0009C6  0102               	movlb	2	; () banked
  3760  0009C8  6F3D               	movwf	putrsXLCD@buffer& (0+255),b
  3761  0009CA  0E06               	movlw	high (STR_25+1)
  3762  0009CC  0102               	movlb	2	; () banked
  3763  0009CE  6F3E               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  3764  0009D0  ECE0  F01F         	call	_putrsXLCD	;wreg free
  3765  0009D4                     l10252:
  3766  0009D4  EC8A  F01F         	call	_BusyXLCD	;wreg free
  3767  0009D8  0900               	iorlw	0
  3768  0009DA  A4D8               	btfss	status,2,c
  3769  0009DC  D7FB               	goto	l10252
  3770                           
  3771                           ;main.c: 290: SetDDRamAddr(0x0F);
  3772  0009DE  0E0F               	movlw	15
  3773  0009E0  EC88  F01D         	call	_SetDDRamAddr
  3774                           
  3775                           ;main.c: 291: if(ALAF){putrsXLCD("A");}
  3776  0009E4  0102               	movlb	2	; () banked
  3777  0009E6  51AB               	movf	_ALAF& (0+255),w,b	;volatile
  3778  0009E8  0102               	movlb	2	; () banked
  3779  0009EA  11AC               	iorwf	(_ALAF+1)& (0+255),w,b	;volatile
  3780  0009EC  B4D8               	btfsc	status,2,c
  3781  0009EE  D009               	goto	l10260
  3782                           
  3783                           ; BSR set to: 2
  3784  0009F0  0EB6               	movlw	low STR_30
  3785  0009F2  0102               	movlb	2	; () banked
  3786  0009F4  6F3D               	movwf	putrsXLCD@buffer& (0+255),b
  3787  0009F6  0E06               	movlw	high STR_30
  3788  0009F8  0102               	movlb	2	; () banked
  3789  0009FA  6F3E               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  3790  0009FC  ECE0  F01F         	call	_putrsXLCD	;wreg free
  3791  000A00  D008               	goto	l10262
  3792  000A02                     l10260:
  3793                           
  3794                           ;main.c: 292: else{putrsXLCD("a");}
  3795  000A02  0EBE               	movlw	low STR_31
  3796  000A04  0102               	movlb	2	; () banked
  3797  000A06  6F3D               	movwf	putrsXLCD@buffer& (0+255),b
  3798  000A08  0E06               	movlw	high STR_31
  3799  000A0A  0102               	movlb	2	; () banked
  3800  000A0C  6F3E               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  3801  000A0E  ECE0  F01F         	call	_putrsXLCD	;wreg free
  3802  000A12                     l10262:
  3803  000A12  EC8A  F01F         	call	_BusyXLCD	;wreg free
  3804  000A16  0900               	iorlw	0
  3805  000A18  A4D8               	btfss	status,2,c
  3806  000A1A  D7FB               	goto	l10262
  3807                           
  3808                           ;main.c: 296: SetDDRamAddr(0x41);
  3809  000A1C  0E41               	movlw	65
  3810  000A1E  EC88  F01D         	call	_SetDDRamAddr
  3811                           
  3812                           ;main.c: 297: tmp[0] = "\0";
  3813  000A22  0EB2               	movlw	low STR_13
  3814  000A24  0102               	movlb	2	; () banked
  3815  000A26  6F69               	movwf	displayInterface@tmp& (0+255),b
  3816                           
  3817                           ;main.c: 298: switch(status){
  3818  000A28  D0A1               	goto	l10292
  3819  000A2A                     l10268:
  3820                           
  3821                           ; BSR set to: 2
  3822                           ;main.c: 300: if(!pressedMode){displayTemperature=temperature;}
  3823  000A2A  0102               	movlb	2	; () banked
  3824  000A2C  5191               	movf	_pressedMode& (0+255),w,b	;volatile
  3825  000A2E  0102               	movlb	2	; () banked
  3826  000A30  1192               	iorwf	(_pressedMode+1)& (0+255),w,b	;volatile
  3827  000A32  A4D8               	btfss	status,2,c
  3828  000A34  D004               	goto	l10272
  3829                           
  3830                           ; BSR set to: 2
  3831  000A36  C2A3  F29F         	movff	_temperature,_displayTemperature	;volatile
  3832  000A3A  C2A4  F2A0         	movff	_temperature+1,_displayTemperature+1	;volatile
  3833  000A3E                     l10272:
  3834                           
  3835                           ; BSR set to: 2
  3836                           ;main.c: 301: if(displayTemperature<10){sprintf(tmp,"0%d",displayTemperature);}
  3837  000A3E  0102               	movlb	2	; () banked
  3838  000A40  BFA0               	btfsc	(_displayTemperature+1)& (0+255),7,b	;volatile
  3839  000A42  D008               	goto	l10274
  3840  000A44  0102               	movlb	2	; () banked
  3841  000A46  51A0               	movf	(_displayTemperature+1)& (0+255),w,b	;volatile
  3842  000A48  E118               	bnz	l10276
  3843  000A4A  0E0A               	movlw	10
  3844  000A4C  0102               	movlb	2	; () banked
  3845  000A4E  5D9F               	subwf	_displayTemperature& (0+255),w,b	;volatile
  3846  000A50  B0D8               	btfsc	status,0,c
  3847  000A52  D013               	goto	l10276
  3848  000A54                     l10274:
  3849                           
  3850                           ; BSR set to: 2
  3851  000A54  0E69               	movlw	low displayInterface@tmp
  3852  000A56  0102               	movlb	2	; () banked
  3853  000A58  6F57               	movwf	sprintf@wh& (0+255),b
  3854  000A5A  0E02               	movlw	high displayInterface@tmp
  3855  000A5C  0102               	movlb	2	; () banked
  3856  000A5E  6F58               	movwf	(sprintf@wh+1)& (0+255),b
  3857  000A60  0EA8               	movlw	low STR_14
  3858  000A62  0102               	movlb	2	; () banked
  3859  000A64  6F59               	movwf	sprintf@f& (0+255),b
  3860  000A66  0E06               	movlw	high STR_14
  3861  000A68  0102               	movlb	2	; () banked
  3862  000A6A  6F5A               	movwf	(sprintf@f+1)& (0+255),b
  3863  000A6C  C29F  F25B         	movff	_displayTemperature,?_sprintf+4	;volatile
  3864  000A70  C2A0  F25C         	movff	_displayTemperature+1,?_sprintf+5	;volatile
  3865  000A74  EC76  F01E         	call	_sprintf	;wreg free
  3866  000A78  D08B               	goto	l10294
  3867  000A7A                     l10276:
  3868                           
  3869                           ;main.c: 302: else{sprintf(tmp,"%d",displayTemperature);}
  3870  000A7A  0E69               	movlw	low displayInterface@tmp
  3871  000A7C  0102               	movlb	2	; () banked
  3872  000A7E  6F57               	movwf	sprintf@wh& (0+255),b
  3873  000A80  0E02               	movlw	high displayInterface@tmp
  3874  000A82  0102               	movlb	2	; () banked
  3875  000A84  6F58               	movwf	(sprintf@wh+1)& (0+255),b
  3876  000A86  0E4D               	movlw	low (STR_11+66)
  3877  000A88  0102               	movlb	2	; () banked
  3878  000A8A  6F59               	movwf	sprintf@f& (0+255),b
  3879  000A8C  0E06               	movlw	high (STR_11+66)
  3880  000A8E  0102               	movlb	2	; () banked
  3881  000A90  6F5A               	movwf	(sprintf@f+1)& (0+255),b
  3882  000A92  C29F  F25B         	movff	_displayTemperature,?_sprintf+4	;volatile
  3883  000A96  C2A0  F25C         	movff	_displayTemperature+1,?_sprintf+5	;volatile
  3884  000A9A  EC76  F01E         	call	_sprintf	;wreg free
  3885                           
  3886                           ;main.c: 303: break;
  3887  000A9E  D078               	goto	l10294
  3888  000AA0                     l615:
  3889                           
  3890                           ; BSR set to: 2
  3891                           ;main.c: 305: displayTemperature=temperature;
  3892  000AA0  C2A3  F29F         	movff	_temperature,_displayTemperature	;volatile
  3893  000AA4  C2A4  F2A0         	movff	_temperature+1,_displayTemperature+1	;volatile
  3894                           
  3895                           ; BSR set to: 2
  3896                           ;main.c: 306: if(ALAT<10){sprintf(tmp,"0%d",ALAT);}
  3897  000AA8  0102               	movlb	2	; () banked
  3898  000AAA  BF3B               	btfsc	(_ALAT+1)& (0+255),7,b	;volatile
  3899  000AAC  D008               	goto	l10280
  3900  000AAE  0102               	movlb	2	; () banked
  3901  000AB0  513B               	movf	(_ALAT+1)& (0+255),w,b	;volatile
  3902  000AB2  E118               	bnz	l10282
  3903  000AB4  0E0A               	movlw	10
  3904  000AB6  0102               	movlb	2	; () banked
  3905  000AB8  5D3A               	subwf	_ALAT& (0+255),w,b	;volatile
  3906  000ABA  B0D8               	btfsc	status,0,c
  3907  000ABC  D013               	goto	l10282
  3908  000ABE                     l10280:
  3909                           
  3910                           ; BSR set to: 2
  3911  000ABE  0E69               	movlw	low displayInterface@tmp
  3912  000AC0  0102               	movlb	2	; () banked
  3913  000AC2  6F57               	movwf	sprintf@wh& (0+255),b
  3914  000AC4  0E02               	movlw	high displayInterface@tmp
  3915  000AC6  0102               	movlb	2	; () banked
  3916  000AC8  6F58               	movwf	(sprintf@wh+1)& (0+255),b
  3917  000ACA  0EA8               	movlw	low STR_14
  3918  000ACC  0102               	movlb	2	; () banked
  3919  000ACE  6F59               	movwf	sprintf@f& (0+255),b
  3920  000AD0  0E06               	movlw	high STR_14
  3921  000AD2  0102               	movlb	2	; () banked
  3922  000AD4  6F5A               	movwf	(sprintf@f+1)& (0+255),b
  3923  000AD6  C23A  F25B         	movff	_ALAT,?_sprintf+4	;volatile
  3924  000ADA  C23B  F25C         	movff	_ALAT+1,?_sprintf+5	;volatile
  3925  000ADE  EC76  F01E         	call	_sprintf	;wreg free
  3926  000AE2  D056               	goto	l10294
  3927  000AE4                     l10282:
  3928                           
  3929                           ;main.c: 307: else{sprintf(tmp,"%d",ALAT);}
  3930  000AE4  0E69               	movlw	low displayInterface@tmp
  3931  000AE6  0102               	movlb	2	; () banked
  3932  000AE8  6F57               	movwf	sprintf@wh& (0+255),b
  3933  000AEA  0E02               	movlw	high displayInterface@tmp
  3934  000AEC  0102               	movlb	2	; () banked
  3935  000AEE  6F58               	movwf	(sprintf@wh+1)& (0+255),b
  3936  000AF0  0E4D               	movlw	low (STR_11+66)
  3937  000AF2  0102               	movlb	2	; () banked
  3938  000AF4  6F59               	movwf	sprintf@f& (0+255),b
  3939  000AF6  0E06               	movlw	high (STR_11+66)
  3940  000AF8  0102               	movlb	2	; () banked
  3941  000AFA  6F5A               	movwf	(sprintf@f+1)& (0+255),b
  3942  000AFC  C23A  F25B         	movff	_ALAT,?_sprintf+4	;volatile
  3943  000B00  C23B  F25C         	movff	_ALAT+1,?_sprintf+5	;volatile
  3944  000B04  EC76  F01E         	call	_sprintf	;wreg free
  3945                           
  3946                           ;main.c: 308: break;
  3947  000B08  D043               	goto	l10294
  3948  000B0A                     l10284:
  3949                           
  3950                           ;main.c: 310: if(displayTemperature<10){sprintf(tmp,"0%d",displayTemperature);}
  3951  000B0A  0102               	movlb	2	; () banked
  3952  000B0C  BFA0               	btfsc	(_displayTemperature+1)& (0+255),7,b	;volatile
  3953  000B0E  D008               	goto	l10286
  3954  000B10  0102               	movlb	2	; () banked
  3955  000B12  51A0               	movf	(_displayTemperature+1)& (0+255),w,b	;volatile
  3956  000B14  E118               	bnz	l10288
  3957  000B16  0E0A               	movlw	10
  3958  000B18  0102               	movlb	2	; () banked
  3959  000B1A  5D9F               	subwf	_displayTemperature& (0+255),w,b	;volatile
  3960  000B1C  B0D8               	btfsc	status,0,c
  3961  000B1E  D013               	goto	l10288
  3962  000B20                     l10286:
  3963                           
  3964                           ; BSR set to: 2
  3965  000B20  0E69               	movlw	low displayInterface@tmp
  3966  000B22  0102               	movlb	2	; () banked
  3967  000B24  6F57               	movwf	sprintf@wh& (0+255),b
  3968  000B26  0E02               	movlw	high displayInterface@tmp
  3969  000B28  0102               	movlb	2	; () banked
  3970  000B2A  6F58               	movwf	(sprintf@wh+1)& (0+255),b
  3971  000B2C  0EA8               	movlw	low STR_14
  3972  000B2E  0102               	movlb	2	; () banked
  3973  000B30  6F59               	movwf	sprintf@f& (0+255),b
  3974  000B32  0E06               	movlw	high STR_14
  3975  000B34  0102               	movlb	2	; () banked
  3976  000B36  6F5A               	movwf	(sprintf@f+1)& (0+255),b
  3977  000B38  C29F  F25B         	movff	_displayTemperature,?_sprintf+4	;volatile
  3978  000B3C  C2A0  F25C         	movff	_displayTemperature+1,?_sprintf+5	;volatile
  3979  000B40  EC76  F01E         	call	_sprintf	;wreg free
  3980  000B44  D025               	goto	l10294
  3981  000B46                     l10288:
  3982                           
  3983                           ;main.c: 311: else{sprintf(tmp,"%d",displayTemperature);}
  3984  000B46  0E69               	movlw	low displayInterface@tmp
  3985  000B48  0102               	movlb	2	; () banked
  3986  000B4A  6F57               	movwf	sprintf@wh& (0+255),b
  3987  000B4C  0E02               	movlw	high displayInterface@tmp
  3988  000B4E  0102               	movlb	2	; () banked
  3989  000B50  6F58               	movwf	(sprintf@wh+1)& (0+255),b
  3990  000B52  0E4D               	movlw	low (STR_11+66)
  3991  000B54  0102               	movlb	2	; () banked
  3992  000B56  6F59               	movwf	sprintf@f& (0+255),b
  3993  000B58  0E06               	movlw	high (STR_11+66)
  3994  000B5A  0102               	movlb	2	; () banked
  3995  000B5C  6F5A               	movwf	(sprintf@f+1)& (0+255),b
  3996  000B5E  C29F  F25B         	movff	_displayTemperature,?_sprintf+4	;volatile
  3997  000B62  C2A0  F25C         	movff	_displayTemperature+1,?_sprintf+5	;volatile
  3998  000B66  EC76  F01E         	call	_sprintf	;wreg free
  3999                           
  4000                           ;main.c: 313: }
  4001                           
  4002                           ;main.c: 312: break;
  4003  000B6A  D012               	goto	l10294
  4004  000B6C                     l10292:
  4005  000B6C  C265  F267         	movff	displayInterface@status,??_displayInterface
  4006  000B70  C266  F268         	movff	displayInterface@status+1,??_displayInterface+1
  4007                           
  4008                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4009                           ; Switch size 1, requested type "space"
  4010                           ; Number of cases is 1, Range of values is 0 to 0
  4011                           ; switch strategies available:
  4012                           ; Name         Instructions Cycles
  4013                           ; simple_byte            4     3 (average)
  4014                           ;	Chosen strategy is simple_byte
  4015  000B74  0102               	movlb	2	; () banked
  4016  000B76  5168               	movf	(??_displayInterface+1)& (0+255),w,b
  4017  000B78  0A00               	xorlw	0	; case 0
  4018  000B7A  A4D8               	btfss	status,2,c
  4019  000B7C  D7C6               	goto	l10284
  4020                           
  4021                           ; BSR set to: 2
  4022                           ; Switch size 1, requested type "space"
  4023                           ; Number of cases is 2, Range of values is 4 to 5
  4024                           ; switch strategies available:
  4025                           ; Name         Instructions Cycles
  4026                           ; simple_byte            7     4 (average)
  4027                           ;	Chosen strategy is simple_byte
  4028  000B7E  0102               	movlb	2	; () banked
  4029  000B80  5167               	movf	??_displayInterface& (0+255),w,b
  4030  000B82  0A04               	xorlw	4	; case 4
  4031  000B84  B4D8               	btfsc	status,2,c
  4032  000B86  D751               	goto	l10268
  4033  000B88  0A01               	xorlw	1	; case 5
  4034  000B8A  B4D8               	btfsc	status,2,c
  4035  000B8C  D789               	goto	l615
  4036  000B8E  D7BD               	goto	l10284
  4037  000B90                     l10294:
  4038                           
  4039                           ;main.c: 314: putsXLCD(tmp);
  4040  000B90  0E69               	movlw	low displayInterface@tmp
  4041  000B92  0102               	movlb	2	; () banked
  4042  000B94  6F3D               	movwf	putsXLCD@buffer& (0+255),b
  4043  000B96  0E02               	movlw	high displayInterface@tmp
  4044  000B98  0102               	movlb	2	; () banked
  4045  000B9A  6F3E               	movwf	(putsXLCD@buffer+1)& (0+255),b
  4046  000B9C  EC31  F020         	call	_putsXLCD	;wreg free
  4047  000BA0                     l10296:
  4048  000BA0  EC8A  F01F         	call	_BusyXLCD	;wreg free
  4049  000BA4  0900               	iorlw	0
  4050  000BA6  A4D8               	btfss	status,2,c
  4051  000BA8  D7FB               	goto	l10296
  4052                           
  4053                           ;main.c: 317: SetDDRamAddr(0x44);
  4054  000BAA  0E44               	movlw	68
  4055  000BAC  EC88  F01D         	call	_SetDDRamAddr
  4056                           
  4057                           ;main.c: 318: putrsXLCD("C");
  4058  000BB0  0EB8               	movlw	low STR_39
  4059  000BB2  0102               	movlb	2	; () banked
  4060  000BB4  6F3D               	movwf	putrsXLCD@buffer& (0+255),b
  4061  000BB6  0E06               	movlw	high STR_39
  4062  000BB8  0102               	movlb	2	; () banked
  4063  000BBA  6F3E               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  4064  000BBC  ECE0  F01F         	call	_putrsXLCD	;wreg free
  4065  000BC0                     l10302:
  4066  000BC0  EC8A  F01F         	call	_BusyXLCD	;wreg free
  4067  000BC4  0900               	iorlw	0
  4068  000BC6  A4D8               	btfss	status,2,c
  4069  000BC8  D7FB               	goto	l10302
  4070                           
  4071                           ;main.c: 321: SetDDRamAddr(0x4D);
  4072  000BCA  0E4D               	movlw	77
  4073  000BCC  EC88  F01D         	call	_SetDDRamAddr
  4074                           
  4075                           ;main.c: 322: putrsXLCD("L");
  4076  000BD0  0EBA               	movlw	low STR_28
  4077  000BD2  0102               	movlb	2	; () banked
  4078  000BD4  6F3D               	movwf	putrsXLCD@buffer& (0+255),b
  4079  000BD6  0E06               	movlw	high STR_28
  4080  000BD8  0102               	movlb	2	; () banked
  4081  000BDA  6F3E               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  4082  000BDC  ECE0  F01F         	call	_putrsXLCD	;wreg free
  4083  000BE0                     l10308:
  4084  000BE0  EC8A  F01F         	call	_BusyXLCD	;wreg free
  4085  000BE4  0900               	iorlw	0
  4086  000BE6  A4D8               	btfss	status,2,c
  4087  000BE8  D7FB               	goto	l10308
  4088                           
  4089                           ;main.c: 325: SetDDRamAddr(0x4F);
  4090  000BEA  0E4F               	movlw	79
  4091  000BEC  EC88  F01D         	call	_SetDDRamAddr
  4092                           
  4093                           ;main.c: 326: tmp[0] = "\0";
  4094  000BF0  0EB2               	movlw	low STR_13
  4095  000BF2  0102               	movlb	2	; () banked
  4096  000BF4  6F69               	movwf	displayInterface@tmp& (0+255),b
  4097                           
  4098                           ;main.c: 327: switch(status){
  4099  000BF6  D060               	goto	l10332
  4100  000BF8                     l10314:
  4101                           
  4102                           ; BSR set to: 2
  4103                           ;main.c: 329: if(!pressedMode){displayLuminosity=luminosity;}
  4104  000BF8  0102               	movlb	2	; () banked
  4105  000BFA  5191               	movf	_pressedMode& (0+255),w,b	;volatile
  4106  000BFC  0102               	movlb	2	; () banked
  4107  000BFE  1192               	iorwf	(_pressedMode+1)& (0+255),w,b	;volatile
  4108  000C00  A4D8               	btfss	status,2,c
  4109  000C02  D004               	goto	l10318
  4110                           
  4111                           ; BSR set to: 2
  4112  000C04  C2A1  F29D         	movff	_luminosity,_displayLuminosity	;volatile
  4113  000C08  C2A2  F29E         	movff	_luminosity+1,_displayLuminosity+1	;volatile
  4114  000C0C                     l10318:
  4115                           
  4116                           ; BSR set to: 2
  4117                           ;main.c: 330: sprintf(tmp,"%d",displayLuminosity);
  4118  000C0C  0E69               	movlw	low displayInterface@tmp
  4119  000C0E  0102               	movlb	2	; () banked
  4120  000C10  6F57               	movwf	sprintf@wh& (0+255),b
  4121  000C12  0E02               	movlw	high displayInterface@tmp
  4122  000C14  0102               	movlb	2	; () banked
  4123  000C16  6F58               	movwf	(sprintf@wh+1)& (0+255),b
  4124  000C18  0E4D               	movlw	low (STR_11+66)
  4125  000C1A  0102               	movlb	2	; () banked
  4126  000C1C  6F59               	movwf	sprintf@f& (0+255),b
  4127  000C1E  0E06               	movlw	high (STR_11+66)
  4128  000C20  0102               	movlb	2	; () banked
  4129  000C22  6F5A               	movwf	(sprintf@f+1)& (0+255),b
  4130  000C24  C29D  F25B         	movff	_displayLuminosity,?_sprintf+4	;volatile
  4131  000C28  C29E  F25C         	movff	_displayLuminosity+1,?_sprintf+5	;volatile
  4132  000C2C  EC76  F01E         	call	_sprintf	;wreg free
  4133                           
  4134                           ;main.c: 331: break;
  4135  000C30  D058               	goto	l10334
  4136  000C32                     l10320:
  4137                           
  4138                           ;main.c: 333: if(!pressedMode){displayLuminosity=luminosity;}
  4139  000C32  0102               	movlb	2	; () banked
  4140  000C34  5191               	movf	_pressedMode& (0+255),w,b	;volatile
  4141  000C36  0102               	movlb	2	; () banked
  4142  000C38  1192               	iorwf	(_pressedMode+1)& (0+255),w,b	;volatile
  4143  000C3A  A4D8               	btfss	status,2,c
  4144  000C3C  D004               	goto	l10324
  4145                           
  4146                           ; BSR set to: 2
  4147  000C3E  C2A1  F29D         	movff	_luminosity,_displayLuminosity	;volatile
  4148  000C42  C2A2  F29E         	movff	_luminosity+1,_displayLuminosity+1	;volatile
  4149  000C46                     l10324:
  4150                           
  4151                           ; BSR set to: 2
  4152                           ;main.c: 334: sprintf(tmp,"%d",displayLuminosity);
  4153  000C46  0E69               	movlw	low displayInterface@tmp
  4154  000C48  0102               	movlb	2	; () banked
  4155  000C4A  6F57               	movwf	sprintf@wh& (0+255),b
  4156  000C4C  0E02               	movlw	high displayInterface@tmp
  4157  000C4E  0102               	movlb	2	; () banked
  4158  000C50  6F58               	movwf	(sprintf@wh+1)& (0+255),b
  4159  000C52  0E4D               	movlw	low (STR_11+66)
  4160  000C54  0102               	movlb	2	; () banked
  4161  000C56  6F59               	movwf	sprintf@f& (0+255),b
  4162  000C58  0E06               	movlw	high (STR_11+66)
  4163  000C5A  0102               	movlb	2	; () banked
  4164  000C5C  6F5A               	movwf	(sprintf@f+1)& (0+255),b
  4165  000C5E  C29D  F25B         	movff	_displayLuminosity,?_sprintf+4	;volatile
  4166  000C62  C29E  F25C         	movff	_displayLuminosity+1,?_sprintf+5	;volatile
  4167  000C66  EC76  F01E         	call	_sprintf	;wreg free
  4168                           
  4169                           ;main.c: 335: break;
  4170  000C6A  D03B               	goto	l10334
  4171  000C6C                     l10326:
  4172                           
  4173                           ;main.c: 337: sprintf(tmp,"%d",ALAL);
  4174  000C6C  0E69               	movlw	low displayInterface@tmp
  4175  000C6E  0102               	movlb	2	; () banked
  4176  000C70  6F57               	movwf	sprintf@wh& (0+255),b
  4177  000C72  0E02               	movlw	high displayInterface@tmp
  4178  000C74  0102               	movlb	2	; () banked
  4179  000C76  6F58               	movwf	(sprintf@wh+1)& (0+255),b
  4180  000C78  0E4D               	movlw	low (STR_11+66)
  4181  000C7A  0102               	movlb	2	; () banked
  4182  000C7C  6F59               	movwf	sprintf@f& (0+255),b
  4183  000C7E  0E06               	movlw	high (STR_11+66)
  4184  000C80  0102               	movlb	2	; () banked
  4185  000C82  6F5A               	movwf	(sprintf@f+1)& (0+255),b
  4186  000C84  C238  F25B         	movff	_ALAL,?_sprintf+4	;volatile
  4187  000C88  C239  F25C         	movff	_ALAL+1,?_sprintf+5	;volatile
  4188  000C8C  EC76  F01E         	call	_sprintf	;wreg free
  4189                           
  4190                           ;main.c: 338: break;
  4191  000C90  D028               	goto	l10334
  4192  000C92                     l10328:
  4193                           
  4194                           ;main.c: 340: sprintf(tmp,"%d",displayLuminosity);
  4195  000C92  0E69               	movlw	low displayInterface@tmp
  4196  000C94  0102               	movlb	2	; () banked
  4197  000C96  6F57               	movwf	sprintf@wh& (0+255),b
  4198  000C98  0E02               	movlw	high displayInterface@tmp
  4199  000C9A  0102               	movlb	2	; () banked
  4200  000C9C  6F58               	movwf	(sprintf@wh+1)& (0+255),b
  4201  000C9E  0E4D               	movlw	low (STR_11+66)
  4202  000CA0  0102               	movlb	2	; () banked
  4203  000CA2  6F59               	movwf	sprintf@f& (0+255),b
  4204  000CA4  0E06               	movlw	high (STR_11+66)
  4205  000CA6  0102               	movlb	2	; () banked
  4206  000CA8  6F5A               	movwf	(sprintf@f+1)& (0+255),b
  4207  000CAA  C29D  F25B         	movff	_displayLuminosity,?_sprintf+4	;volatile
  4208  000CAE  C29E  F25C         	movff	_displayLuminosity+1,?_sprintf+5	;volatile
  4209  000CB2  EC76  F01E         	call	_sprintf	;wreg free
  4210                           
  4211                           ;main.c: 342: }
  4212                           
  4213                           ;main.c: 341: break;
  4214  000CB6  D015               	goto	l10334
  4215  000CB8                     l10332:
  4216  000CB8  C265  F267         	movff	displayInterface@status,??_displayInterface
  4217  000CBC  C266  F268         	movff	displayInterface@status+1,??_displayInterface+1
  4218                           
  4219                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4220                           ; Switch size 1, requested type "space"
  4221                           ; Number of cases is 1, Range of values is 0 to 0
  4222                           ; switch strategies available:
  4223                           ; Name         Instructions Cycles
  4224                           ; simple_byte            4     3 (average)
  4225                           ;	Chosen strategy is simple_byte
  4226  000CC0  0102               	movlb	2	; () banked
  4227  000CC2  5168               	movf	(??_displayInterface+1)& (0+255),w,b
  4228  000CC4  0A00               	xorlw	0	; case 0
  4229  000CC6  A4D8               	btfss	status,2,c
  4230  000CC8  D7E4               	goto	l10328
  4231                           
  4232                           ; BSR set to: 2
  4233                           ; Switch size 1, requested type "space"
  4234                           ; Number of cases is 3, Range of values is 4 to 6
  4235                           ; switch strategies available:
  4236                           ; Name         Instructions Cycles
  4237                           ; simple_byte           10     6 (average)
  4238                           ;	Chosen strategy is simple_byte
  4239  000CCA  0102               	movlb	2	; () banked
  4240  000CCC  5167               	movf	??_displayInterface& (0+255),w,b
  4241  000CCE  0A04               	xorlw	4	; case 4
  4242  000CD0  B4D8               	btfsc	status,2,c
  4243  000CD2  D792               	goto	l10314
  4244  000CD4  0A01               	xorlw	1	; case 5
  4245  000CD6  B4D8               	btfsc	status,2,c
  4246  000CD8  D7AC               	goto	l10320
  4247  000CDA  0A03               	xorlw	3	; case 6
  4248  000CDC  B4D8               	btfsc	status,2,c
  4249  000CDE  D7C6               	goto	l10326
  4250  000CE0  D7D8               	goto	l10328
  4251  000CE2                     l10334:
  4252                           
  4253                           ;main.c: 343: putsXLCD(tmp);
  4254  000CE2  0E69               	movlw	low displayInterface@tmp
  4255  000CE4  0102               	movlb	2	; () banked
  4256  000CE6  6F3D               	movwf	putsXLCD@buffer& (0+255),b
  4257  000CE8  0E02               	movlw	high displayInterface@tmp
  4258  000CEA  0102               	movlb	2	; () banked
  4259  000CEC  6F3E               	movwf	(putsXLCD@buffer+1)& (0+255),b
  4260  000CEE  EC31  F020         	call	_putsXLCD	;wreg free
  4261  000CF2                     l10336:
  4262  000CF2  EC8A  F01F         	call	_BusyXLCD	;wreg free
  4263  000CF6  0900               	iorlw	0
  4264  000CF8  B4D8               	btfsc	status,2,c
  4265  000CFA  D021               	goto	l10356
  4266  000CFC  D7FA               	goto	l10336
  4267  000CFE                     l10338:
  4268  000CFE  0E02               	movlw	2
  4269  000D00  EC88  F01D         	call	_SetDDRamAddr
  4270  000D04  0012               	return	
  4271  000D06                     l10340:
  4272  000D06  0E05               	movlw	5
  4273  000D08  EC88  F01D         	call	_SetDDRamAddr
  4274  000D0C  0012               	return	
  4275  000D0E                     l10342:
  4276  000D0E  0E08               	movlw	8
  4277  000D10  EC88  F01D         	call	_SetDDRamAddr
  4278  000D14  0012               	return	
  4279  000D16                     l10344:
  4280  000D16  0E0A               	movlw	10
  4281  000D18  EC88  F01D         	call	_SetDDRamAddr
  4282  000D1C  0012               	return	
  4283  000D1E                     l10346:
  4284  000D1E  0E0B               	movlw	11
  4285  000D20  EC88  F01D         	call	_SetDDRamAddr
  4286  000D24  0012               	return	
  4287  000D26                     l10348:
  4288  000D26  0E0C               	movlw	12
  4289  000D28  EC88  F01D         	call	_SetDDRamAddr
  4290  000D2C  0012               	return	
  4291  000D2E                     l10350:
  4292  000D2E  0E0D               	movlw	13
  4293  000D30  EC88  F01D         	call	_SetDDRamAddr
  4294  000D34  0012               	return	
  4295  000D36                     l10352:
  4296  000D36  0E0F               	movlw	15
  4297  000D38  EC88  F01D         	call	_SetDDRamAddr
  4298                           
  4299                           ;main.c: 357: }
  4300                           
  4301                           ;main.c: 356: default:break;
  4302  000D3C  0012               	return	
  4303  000D3E                     l10356:
  4304  000D3E  C265  F267         	movff	displayInterface@status,??_displayInterface
  4305  000D42  C266  F268         	movff	displayInterface@status+1,??_displayInterface+1
  4306                           
  4307                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4308                           ; Switch size 1, requested type "space"
  4309                           ; Number of cases is 1, Range of values is 0 to 0
  4310                           ; switch strategies available:
  4311                           ; Name         Instructions Cycles
  4312                           ; simple_byte            4     3 (average)
  4313                           ;	Chosen strategy is simple_byte
  4314  000D46  0102               	movlb	2	; () banked
  4315  000D48  5168               	movf	(??_displayInterface+1)& (0+255),w,b
  4316  000D4A  0A00               	xorlw	0	; case 0
  4317  000D4C  A4D8               	btfss	status,2,c
  4318  000D4E  0012               	return	
  4319                           
  4320                           ; BSR set to: 2
  4321                           ; Switch size 1, requested type "space"
  4322                           ; Number of cases is 8, Range of values is 0 to 7
  4323                           ; switch strategies available:
  4324                           ; Name         Instructions Cycles
  4325                           ; simple_byte           25    13 (average)
  4326                           ;	Chosen strategy is simple_byte
  4327  000D50  0102               	movlb	2	; () banked
  4328  000D52  5167               	movf	??_displayInterface& (0+255),w,b
  4329  000D54  0A00               	xorlw	0	; case 0
  4330  000D56  B4D8               	btfsc	status,2,c
  4331  000D58  D7D2               	goto	l10338
  4332  000D5A  0A01               	xorlw	1	; case 1
  4333  000D5C  B4D8               	btfsc	status,2,c
  4334  000D5E  D7D3               	goto	l10340
  4335  000D60  0A03               	xorlw	3	; case 2
  4336  000D62  B4D8               	btfsc	status,2,c
  4337  000D64  D7D4               	goto	l10342
  4338  000D66  0A01               	xorlw	1	; case 3
  4339  000D68  B4D8               	btfsc	status,2,c
  4340  000D6A  D7D5               	goto	l10344
  4341  000D6C  0A07               	xorlw	7	; case 4
  4342  000D6E  B4D8               	btfsc	status,2,c
  4343  000D70  D7D6               	goto	l10346
  4344  000D72  0A01               	xorlw	1	; case 5
  4345  000D74  B4D8               	btfsc	status,2,c
  4346  000D76  D7D7               	goto	l10348
  4347  000D78  0A03               	xorlw	3	; case 6
  4348  000D7A  B4D8               	btfsc	status,2,c
  4349  000D7C  D7D8               	goto	l10350
  4350  000D7E  0A01               	xorlw	1	; case 7
  4351  000D80  A4D8               	btfss	status,2,c
  4352  000D82  0012               	return	
  4353  000D84  D7D8               	goto	l10352
  4354  000D86                     __end_of_displayInterface:
  4355                           	opt stack 0
  4356                           tblptru	equ	0xFF8
  4357                           tblptrh	equ	0xFF7
  4358                           tblptrl	equ	0xFF6
  4359                           tablat	equ	0xFF5
  4360                           prodl	equ	0xFF3
  4361                           intcon	equ	0xFF2
  4362                           postinc0	equ	0xFEE
  4363                           wreg	equ	0xFE8
  4364                           postdec1	equ	0xFE5
  4365                           fsr1l	equ	0xFE1
  4366                           indf2	equ	0xFDF
  4367                           postinc2	equ	0xFDE
  4368                           fsr2h	equ	0xFDA
  4369                           fsr2l	equ	0xFD9
  4370                           status	equ	0xFD8
  4371                           
  4372 ;; *************** function _sprintf *****************
  4373 ;; Defined at:
  4374 ;;		line 13 in file "/opt/microchip/xc8/v1.41/sources/common/sprintf.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;  wh              2   27[BANK2 ] PTR unsigned char 
  4377 ;;		 -> displayInterface@tmp(3), reply_message_serial_com@str(248), 
  4378 ;;  f               2   29[BANK2 ] PTR const unsigned char 
  4379 ;;		 -> STR_45(3), STR_44(3), STR_43(3), STR_42(3), 
  4380 ;;		 -> STR_38(3), STR_37(4), STR_36(3), STR_35(4), 
  4381 ;;		 -> STR_34(3), STR_33(4), STR_23(3), STR_22(4), 
  4382 ;;		 -> STR_19(3), STR_18(4), STR_15(3), STR_14(4), 
  4383 ;;		 -> STR_12(24), STR_11(69), STR_10(24), STR_9(12), 
  4384 ;;		 -> STR_8(12), STR_7(18), STR_6(12), STR_5(12), 
  4385 ;;		 -> STR_4(18), STR_3(15), STR_2(12), STR_1(18), 
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;  pb              4   35[BANK2 ] struct __prbuf
  4388 ;;  ap              2   33[BANK2 ] PTR void [1]
  4389 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), ?_printf(2), 
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  2   27[BANK2 ] int 
  4392 ;; Registers used:
  4393 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4399 ;;      Params:         0       0       0       6       0       0       0
  4400 ;;      Locals:         0       0       0       6       0       0       0
  4401 ;;      Temps:          0       0       0       0       0       0       0
  4402 ;;      Totals:         0       0       0      12       0       0       0
  4403 ;;Total ram usage:       12 bytes
  4404 ;; Hardware stack levels used:    1
  4405 ;; Hardware stack levels required when called:    9
  4406 ;; This function calls:
  4407 ;;		__doprnt
  4408 ;; This function is called by:
  4409 ;;		_displayInterface
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413                           	psect	text10
  4414  003CEC                     __ptext10:
  4415                           	opt stack 0
  4416  003CEC                     _sprintf:
  4417                           	opt stack 20
  4418                           
  4419                           ;incstack = 0
  4420  003CEC  C257  F25F         	movff	sprintf@wh,sprintf@pb
  4421  003CF0  C258  F260         	movff	sprintf@wh+1,sprintf@pb+1
  4422  003CF4  0E00               	movlw	0
  4423  003CF6  0102               	movlb	2	; () banked
  4424  003CF8  6F61               	movwf	(sprintf@pb+2)& (0+255),b
  4425  003CFA  0E00               	movlw	0
  4426  003CFC  0102               	movlb	2	; () banked
  4427  003CFE  6F62               	movwf	(sprintf@pb+3)& (0+255),b
  4428  003D00  0E5B               	movlw	low (?_sprintf+4)
  4429  003D02  0102               	movlb	2	; () banked
  4430  003D04  6F5D               	movwf	sprintf@ap& (0+255),b
  4431  003D06  0E02               	movlw	high (?_sprintf+4)
  4432  003D08  0102               	movlb	2	; () banked
  4433  003D0A  6F5E               	movwf	(sprintf@ap+1)& (0+255),b
  4434                           
  4435                           ; BSR set to: 2
  4436  003D0C  0E5F               	movlw	low sprintf@pb
  4437  003D0E  0102               	movlb	2	; () banked
  4438  003D10  6F48               	movwf	__doprnt@pb& (0+255),b
  4439  003D12  0E02               	movlw	high sprintf@pb
  4440  003D14  0102               	movlb	2	; () banked
  4441  003D16  6F49               	movwf	(__doprnt@pb+1)& (0+255),b
  4442  003D18  C259  F24A         	movff	sprintf@f,__doprnt@f
  4443  003D1C  C25A  F24B         	movff	sprintf@f+1,__doprnt@f+1
  4444  003D20  0E5D               	movlw	low sprintf@ap
  4445  003D22  0102               	movlb	2	; () banked
  4446  003D24  6F4C               	movwf	__doprnt@ap& (0+255),b
  4447  003D26  0E02               	movlw	high sprintf@ap
  4448  003D28  0102               	movlb	2	; () banked
  4449  003D2A  6F4D               	movwf	(__doprnt@ap+1)& (0+255),b
  4450  003D2C  ECAD  F00E         	call	__doprnt	;wreg free
  4451  003D30  C25F  FFD9         	movff	sprintf@pb,fsr2l
  4452  003D34  C260  FFDA         	movff	sprintf@pb+1,fsr2h
  4453  003D38  0E00               	movlw	0
  4454  003D3A  6EDF               	movwf	indf2,c
  4455  003D3C  0012               	return	
  4456  003D3E                     __end_of_sprintf:
  4457                           	opt stack 0
  4458                           tblptru	equ	0xFF8
  4459                           tblptrh	equ	0xFF7
  4460                           tblptrl	equ	0xFF6
  4461                           tablat	equ	0xFF5
  4462                           prodl	equ	0xFF3
  4463                           intcon	equ	0xFF2
  4464                           postinc0	equ	0xFEE
  4465                           wreg	equ	0xFE8
  4466                           postdec1	equ	0xFE5
  4467                           fsr1l	equ	0xFE1
  4468                           indf2	equ	0xFDF
  4469                           postinc2	equ	0xFDE
  4470                           fsr2h	equ	0xFDA
  4471                           fsr2l	equ	0xFD9
  4472                           status	equ	0xFD8
  4473                           
  4474 ;; *************** function __doprnt *****************
  4475 ;; Defined at:
  4476 ;;		line 458 in file "/opt/microchip/xc8/v1.41/sources/common/doprnt.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;  pb              2   12[BANK2 ] PTR struct __prbuf
  4479 ;;		 -> sprintf@pb(4), printf@pb(4), 
  4480 ;;  f               2   14[BANK2 ] PTR const unsigned char 
  4481 ;;		 -> STR_57(36), STR_45(3), STR_44(3), STR_43(3), 
  4482 ;;		 -> STR_42(3), STR_38(3), STR_37(4), STR_36(3), 
  4483 ;;		 -> STR_35(4), STR_34(3), STR_33(4), STR_23(3), 
  4484 ;;		 -> STR_22(4), STR_19(3), STR_18(4), STR_15(3), 
  4485 ;;		 -> STR_14(4), STR_12(24), STR_11(69), STR_10(24), 
  4486 ;;		 -> STR_9(12), STR_8(12), STR_7(18), STR_6(12), 
  4487 ;;		 -> STR_5(12), STR_4(18), STR_3(15), STR_2(12), 
  4488 ;;		 -> STR_1(18), 
  4489 ;;  ap              2   16[BANK2 ] PTR PTR void 
  4490 ;;		 -> sprintf@ap(2), printf@ap(2), 
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;  tmpval          4    0        struct .
  4493 ;;  cp              2   24[BANK2 ] PTR const unsigned char 
  4494 ;;		 -> ?_sprintf(2), ?_printf(2), NULL(0), STR_56(7), 
  4495 ;;		 -> STR_55(5), STR_54(7), STR_53(11), STR_52(7), 
  4496 ;;		 -> STR_51(5), STR_50(7), STR_49(11), STR_48(7), 
  4497 ;;		 -> STR_47(11), STR_46(7), displayInterface@tmp(3), reply_message_serial_com@str(248), 
  4498 ;;  val             2   22[BANK2 ] unsigned int 
  4499 ;;  len             2    0        unsigned int 
  4500 ;;  c               1   26[BANK2 ] char 
  4501 ;;  prec            1   21[BANK2 ] char 
  4502 ;;  flag            1   20[BANK2 ] unsigned char 
  4503 ;; Return value:  Size  Location     Type
  4504 ;;                  2   12[BANK2 ] int 
  4505 ;; Registers used:
  4506 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4507 ;; Tracked objects:
  4508 ;;		On entry : 0/0
  4509 ;;		On exit  : 0/0
  4510 ;;		Unchanged: 0/0
  4511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4512 ;;      Params:         0       0       0       6       0       0       0
  4513 ;;      Locals:         0       0       0       7       0       0       0
  4514 ;;      Temps:          0       0       0       2       0       0       0
  4515 ;;      Totals:         0       0       0      15       0       0       0
  4516 ;;Total ram usage:       15 bytes
  4517 ;; Hardware stack levels used:    1
  4518 ;; Hardware stack levels required when called:    8
  4519 ;; This function calls:
  4520 ;;		Absolute function
  4521 ;;		___lwdiv
  4522 ;;		___lwmod
  4523 ;;		_putch
  4524 ;; This function is called by:
  4525 ;;		_sprintf
  4526 ;; This function uses a non-reentrant model
  4527 ;;
  4528                           
  4529                           	psect	text11
  4530  001D5A                     __ptext11:
  4531                           	opt stack 0
  4532  001D5A                     __doprnt:
  4533                           	opt stack 20
  4534                           
  4535                           ;doprnt.c: 499: signed char c;
  4536                           ;doprnt.c: 506: signed char prec;
  4537                           ;doprnt.c: 508: unsigned char flag;
  4538                           ;doprnt.c: 523: union {
  4539                           ;doprnt.c: 524: unsigned long vd;
  4540                           ;doprnt.c: 525: double integ;
  4541                           ;doprnt.c: 526: } tmpval;
  4542                           ;doprnt.c: 528: unsigned int val;
  4543                           ;doprnt.c: 529: unsigned len;
  4544                           ;doprnt.c: 530: const char * cp;
  4545                           ;doprnt.c: 536: while(c = *f++) {
  4546                           
  4547                           ;incstack = 0
  4548  001D5A  D1C1               	goto	l10098
  4549  001D5C                     l10016:
  4550                           
  4551                           ;doprnt.c: 538: if(c != '%')
  4552  001D5C  0E25               	movlw	37
  4553  001D5E  0102               	movlb	2	; () banked
  4554  001D60  1956               	xorwf	__doprnt@c& (0+255),w,b
  4555  001D62  B4D8               	btfsc	status,2,c
  4556  001D64  D036               	goto	l10026
  4557                           
  4558                           ; BSR set to: 2
  4559                           ;doprnt.c: 540: {
  4560                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  4561  001D66  0102               	movlb	2	; () banked
  4562  001D68  EE20 F002          	lfsr	2,2
  4563  001D6C  5148               	movf	__doprnt@pb& (0+255),w,b
  4564  001D6E  26D9               	addwf	fsr2l,f,c
  4565  001D70  5149               	movf	(__doprnt@pb+1)& (0+255),w,b
  4566  001D72  22DA               	addwfc	fsr2h,f,c
  4567  001D74  50DE               	movf	postinc2,w,c
  4568  001D76  10DE               	iorwf	postinc2,w,c
  4569  001D78  B4D8               	btfsc	status,2,c
  4570  001D7A  D015               	goto	l10022
  4571                           
  4572                           ; BSR set to: 2
  4573  001D7C  0102               	movlb	2	; () banked
  4574  001D7E  EE20 F002          	lfsr	2,2
  4575  001D82  5148               	movf	__doprnt@pb& (0+255),w,b
  4576  001D84  26D9               	addwf	fsr2l,f,c
  4577  001D86  5149               	movf	(__doprnt@pb+1)& (0+255),w,b
  4578  001D88  22DA               	addwfc	fsr2h,f,c
  4579  001D8A  D801               	call	u12878
  4580  001D8C  D1A8               	goto	l10098
  4581  001D8E                     u12878:
  4582  001D8E  0005               	push	
  4583  001D90  6EFA               	movwf	pclath,c
  4584  001D92  50DE               	movf	postinc2,w,c
  4585  001D94  6EFD               	movwf	tosl,c
  4586  001D96  50DE               	movf	postinc2,w,c
  4587  001D98  6EFE               	movwf	tosh,c
  4588  001D9A  50F8               	movf	tblptru,w,c
  4589  001D9C  6EFF               	movwf	tosu,c
  4590  001D9E  50FA               	movf	pclath,w,c
  4591  001DA0  0102               	movlb	2	; () banked
  4592  001DA2  5156               	movf	__doprnt@c& (0+255),w,b
  4593  001DA4  0012               	return		;indir
  4594  001DA6                     l10022:
  4595  001DA6  C248  FFD9         	movff	__doprnt@pb,fsr2l
  4596  001DAA  C249  FFDA         	movff	__doprnt@pb+1,fsr2h
  4597  001DAE  CFDE F24E          	movff	postinc2,??__doprnt
  4598  001DB2  CFDD F24F          	movff	postdec2,??__doprnt+1
  4599  001DB6  C24E  FFD9         	movff	??__doprnt,fsr2l
  4600  001DBA  C24F  FFDA         	movff	??__doprnt+1,fsr2h
  4601  001DBE  C256  FFDF         	movff	__doprnt@c,indf2
  4602  001DC2  C248  FFD9         	movff	__doprnt@pb,fsr2l
  4603  001DC6  C249  FFDA         	movff	__doprnt@pb+1,fsr2h
  4604  001DCA  2ADE               	incf	postinc2,f,c
  4605  001DCC  0E00               	movlw	0
  4606  001DCE  22DD               	addwfc	postdec2,f,c
  4607                           
  4608                           ;doprnt.c: 542: continue;
  4609  001DD0  D186               	goto	l10098
  4610  001DD2                     l10026:
  4611                           
  4612                           ;doprnt.c: 543: }
  4613                           ;doprnt.c: 548: flag = 0;
  4614  001DD2  0E00               	movlw	0
  4615  001DD4  0102               	movlb	2	; () banked
  4616  001DD6  6F50               	movwf	__doprnt@flag& (0+255),b
  4617                           
  4618                           ;doprnt.c: 635: switch(c = *f++) {
  4619  001DD8  D08E               	goto	l10050
  4620  001DDA                     l10028:
  4621                           
  4622                           ; BSR set to: 2
  4623                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4624  001DDA  C24C  FFD9         	movff	__doprnt@ap,fsr2l
  4625  001DDE  C24D  FFDA         	movff	__doprnt@ap+1,fsr2h
  4626  001DE2  CFDF F24E          	movff	indf2,??__doprnt
  4627  001DE6  0E02               	movlw	2
  4628  001DE8  26DE               	addwf	postinc2,f,c
  4629  001DEA  CFDF F24F          	movff	indf2,??__doprnt+1
  4630  001DEE  0E00               	movlw	0
  4631  001DF0  22DD               	addwfc	postdec2,f,c
  4632  001DF2  C24E  FFD9         	movff	??__doprnt,fsr2l
  4633  001DF6  C24F  FFDA         	movff	??__doprnt+1,fsr2h
  4634  001DFA  CFDE F254          	movff	postinc2,__doprnt@cp
  4635  001DFE  CFDD F255          	movff	postdec2,__doprnt@cp+1
  4636                           
  4637                           ; BSR set to: 2
  4638                           ;doprnt.c: 740: if(!cp)
  4639  001E02  0102               	movlb	2	; () banked
  4640  001E04  5154               	movf	__doprnt@cp& (0+255),w,b
  4641  001E06  0102               	movlb	2	; () banked
  4642  001E08  1155               	iorwf	(__doprnt@cp+1)& (0+255),w,b
  4643  001E0A  A4D8               	btfss	status,2,c
  4644  001E0C  D060               	goto	l10046
  4645                           
  4646                           ; BSR set to: 2
  4647                           ;doprnt.c: 741: cp = "(null)";
  4648  001E0E  0E95               	movlw	low STR_56
  4649  001E10  0102               	movlb	2	; () banked
  4650  001E12  6F54               	movwf	__doprnt@cp& (0+255),b
  4651  001E14  0E06               	movlw	high STR_56
  4652  001E16  0102               	movlb	2	; () banked
  4653  001E18  6F55               	movwf	(__doprnt@cp+1)& (0+255),b
  4654                           
  4655                           ; BSR set to: 2
  4656                           ;doprnt.c: 777: while(*cp)
  4657  001E1A  D059               	goto	l10046
  4658  001E1C                     l10034:
  4659                           
  4660                           ;doprnt.c: 778: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
  4661  001E1C  0102               	movlb	2	; () banked
  4662  001E1E  EE20 F002          	lfsr	2,2
  4663  001E22  5148               	movf	__doprnt@pb& (0+255),w,b
  4664  001E24  26D9               	addwf	fsr2l,f,c
  4665  001E26  5149               	movf	(__doprnt@pb+1)& (0+255),w,b
  4666  001E28  22DA               	addwfc	fsr2h,f,c
  4667  001E2A  50DE               	movf	postinc2,w,c
  4668  001E2C  10DE               	iorwf	postinc2,w,c
  4669  001E2E  B4D8               	btfsc	status,2,c
  4670  001E30  D027               	goto	l10040
  4671                           
  4672                           ; BSR set to: 2
  4673  001E32  0102               	movlb	2	; () banked
  4674  001E34  EE20 F002          	lfsr	2,2
  4675  001E38  5148               	movf	__doprnt@pb& (0+255),w,b
  4676  001E3A  26D9               	addwf	fsr2l,f,c
  4677  001E3C  5149               	movf	(__doprnt@pb+1)& (0+255),w,b
  4678  001E3E  22DA               	addwfc	fsr2h,f,c
  4679  001E40  D801               	call	u12908
  4680  001E42  D01A               	goto	l10038
  4681  001E44                     u12908:
  4682  001E44  0005               	push	
  4683  001E46  6EFA               	movwf	pclath,c
  4684  001E48  50DE               	movf	postinc2,w,c
  4685  001E4A  6EFD               	movwf	tosl,c
  4686  001E4C  50DE               	movf	postinc2,w,c
  4687  001E4E  6EFE               	movwf	tosh,c
  4688  001E50  50F8               	movf	tblptru,w,c
  4689  001E52  6EFF               	movwf	tosu,c
  4690  001E54  50FA               	movf	pclath,w,c
  4691  001E56  C254  FFF6         	movff	__doprnt@cp,tblptrl
  4692  001E5A  C255  FFF7         	movff	__doprnt@cp+1,tblptrh
  4693  001E5E  6AF8               	clrf	tblptru,c
  4694  001E60  0E05               	movlw	(high __ramtop+-1)
  4695  001E62  64F7               	cpfsgt	tblptrh,c
  4696  001E64  D003               	bra	u12917
  4697  001E66  0008               	tblrd		*
  4698  001E68  50F5               	movf	tablat,w,c
  4699  001E6A  D005               	bra	u12910
  4700  001E6C                     u12917:
  4701  001E6C  CFF6 FFE9          	movff	tblptrl,fsr0l
  4702  001E70  CFF7 FFEA          	movff	tblptrh,fsr0h
  4703  001E74  50EF               	movf	indf0,w,c
  4704  001E76                     u12910:
  4705  001E76  0012               	return		;indir
  4706  001E78                     l10038:
  4707  001E78  0102               	movlb	2	; () banked
  4708  001E7A  4B54               	infsnz	__doprnt@cp& (0+255),f,b
  4709  001E7C  2B55               	incf	(__doprnt@cp+1)& (0+255),f,b
  4710  001E7E  D027               	goto	l10046
  4711  001E80                     l10040:
  4712                           
  4713                           ; BSR set to: 2
  4714  001E80  C254  FFF6         	movff	__doprnt@cp,tblptrl
  4715  001E84  C255  FFF7         	movff	__doprnt@cp+1,tblptrh
  4716  001E88  6AF8               	clrf	tblptru,c
  4717  001E8A  C248  FFD9         	movff	__doprnt@pb,fsr2l
  4718  001E8E  C249  FFDA         	movff	__doprnt@pb+1,fsr2h
  4719  001E92  CFDE F24E          	movff	postinc2,??__doprnt
  4720  001E96  CFDD F24F          	movff	postdec2,??__doprnt+1
  4721  001E9A  C24E  FFD9         	movff	??__doprnt,fsr2l
  4722  001E9E  C24F  FFDA         	movff	??__doprnt+1,fsr2h
  4723  001EA2  0E05               	movlw	(high __ramtop+-1)
  4724  001EA4  64F7               	cpfsgt	tblptrh,c
  4725  001EA6  D003               	bra	u12927
  4726  001EA8  0008               	tblrd		*
  4727  001EAA  50F5               	movf	tablat,w,c
  4728  001EAC  D005               	bra	u12920
  4729  001EAE                     u12927:
  4730  001EAE  CFF6 FFE9          	movff	tblptrl,fsr0l
  4731  001EB2  CFF7 FFEA          	movff	tblptrh,fsr0h
  4732  001EB6  50EF               	movf	indf0,w,c
  4733  001EB8                     u12920:
  4734  001EB8  6EDF               	movwf	indf2,c
  4735  001EBA  0102               	movlb	2	; () banked
  4736  001EBC  4B54               	infsnz	__doprnt@cp& (0+255),f,b
  4737  001EBE  2B55               	incf	(__doprnt@cp+1)& (0+255),f,b
  4738                           
  4739                           ; BSR set to: 2
  4740  001EC0  C248  FFD9         	movff	__doprnt@pb,fsr2l
  4741  001EC4  C249  FFDA         	movff	__doprnt@pb+1,fsr2h
  4742  001EC8  2ADE               	incf	postinc2,f,c
  4743  001ECA  0E00               	movlw	0
  4744  001ECC  22DD               	addwfc	postdec2,f,c
  4745  001ECE                     l10046:
  4746                           
  4747                           ; BSR set to: 2
  4748  001ECE  C254  FFF6         	movff	__doprnt@cp,tblptrl
  4749  001ED2  C255  FFF7         	movff	__doprnt@cp+1,tblptrh
  4750  001ED6  6AF8               	clrf	tblptru,c
  4751  001ED8  0E05               	movlw	(high __ramtop+-1)
  4752  001EDA  64F7               	cpfsgt	tblptrh,c
  4753  001EDC  D003               	bra	u12937
  4754  001EDE  0008               	tblrd		*
  4755  001EE0  50F5               	movf	tablat,w,c
  4756  001EE2  D005               	bra	u12930
  4757  001EE4                     u12937:
  4758  001EE4  CFF6 FFE9          	movff	tblptrl,fsr0l
  4759  001EE8  CFF7 FFEA          	movff	tblptrh,fsr0h
  4760  001EEC  50EF               	movf	indf0,w,c
  4761  001EEE                     u12930:
  4762  001EEE  0900               	iorlw	0
  4763  001EF0  B4D8               	btfsc	status,2,c
  4764  001EF2  D0F5               	goto	l10098
  4765  001EF4  D793               	goto	l10034
  4766  001EF6                     l10050:
  4767  001EF6  C24A  FFF6         	movff	__doprnt@f,tblptrl
  4768  001EFA  C24B  FFF7         	movff	__doprnt@f+1,tblptrh
  4769  001EFE  0102               	movlb	2	; () banked
  4770  001F00  4B4A               	infsnz	__doprnt@f& (0+255),f,b
  4771  001F02  2B4B               	incf	(__doprnt@f+1)& (0+255),f,b
  4772  001F04                     	if	0	;tblptru may be non-zero
  4773  001F04                     	endif
  4774  001F04                     	if	0	;tblptru may be non-zero
  4775  001F04                     	endif
  4776  001F04  0008               	tblrd		*
  4777  001F06  CFF5 F256          	movff	tablat,__doprnt@c
  4778  001F0A  0102               	movlb	2	; () banked
  4779  001F0C  5156               	movf	__doprnt@c& (0+255),w,b
  4780                           
  4781                           ; Switch size 1, requested type "space"
  4782                           ; Number of cases is 4, Range of values is 0 to 115
  4783                           ; switch strategies available:
  4784                           ; Name         Instructions Cycles
  4785                           ; simple_byte           13     7 (average)
  4786                           ;	Chosen strategy is simple_byte
  4787  001F0E  0A00               	xorlw	0	; case 0
  4788  001F10  B4D8               	btfsc	status,2,c
  4789  001F12  D0F3               	goto	l10100
  4790  001F14  0A64               	xorlw	100	; case 100
  4791  001F16  B4D8               	btfsc	status,2,c
  4792  001F18  D007               	goto	l10052
  4793  001F1A  0A0D               	xorlw	13	; case 105
  4794  001F1C  B4D8               	btfsc	status,2,c
  4795  001F1E  D004               	goto	l10052
  4796  001F20  0A1A               	xorlw	26	; case 115
  4797  001F22  B4D8               	btfsc	status,2,c
  4798  001F24  D75A               	goto	l10028
  4799  001F26  D0DB               	goto	l10098
  4800  001F28                     l10052:
  4801                           
  4802                           ;doprnt.c: 1253: {
  4803                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4804  001F28  C24C  FFD9         	movff	__doprnt@ap,fsr2l
  4805  001F2C  C24D  FFDA         	movff	__doprnt@ap+1,fsr2h
  4806  001F30  CFDF F24E          	movff	indf2,??__doprnt
  4807  001F34  0E02               	movlw	2
  4808  001F36  26DE               	addwf	postinc2,f,c
  4809  001F38  CFDF F24F          	movff	indf2,??__doprnt+1
  4810  001F3C  0E00               	movlw	0
  4811  001F3E  22DD               	addwfc	postdec2,f,c
  4812  001F40  C24E  FFD9         	movff	??__doprnt,fsr2l
  4813  001F44  C24F  FFDA         	movff	??__doprnt+1,fsr2h
  4814  001F48  CFDE F252          	movff	postinc2,__doprnt@val
  4815  001F4C  CFDD F253          	movff	postdec2,__doprnt@val+1
  4816                           
  4817                           ;doprnt.c: 1261: if((int)val < 0) {
  4818  001F50  0102               	movlb	2	; () banked
  4819  001F52  AF53               	btfss	(__doprnt@val+1)& (0+255),7,b
  4820  001F54  D008               	goto	l10060
  4821                           
  4822                           ; BSR set to: 2
  4823                           ;doprnt.c: 1262: flag |= 0x03;
  4824  001F56  0E03               	movlw	3
  4825  001F58  0102               	movlb	2	; () banked
  4826  001F5A  1350               	iorwf	__doprnt@flag& (0+255),f,b
  4827                           
  4828                           ; BSR set to: 2
  4829                           ;doprnt.c: 1263: val = -val;
  4830  001F5C  0102               	movlb	2	; () banked
  4831  001F5E  6D52               	negf	__doprnt@val& (0+255),b
  4832  001F60  1F53               	comf	(__doprnt@val+1)& (0+255),f,b
  4833  001F62  B0D8               	btfsc	status,0,c
  4834  001F64  2B53               	incf	(__doprnt@val+1)& (0+255),f,b
  4835  001F66                     l10060:
  4836                           
  4837                           ; BSR set to: 2
  4838                           ;doprnt.c: 1264: }
  4839                           ;doprnt.c: 1266: }
  4840                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4841  001F66  0E01               	movlw	1
  4842  001F68  0102               	movlb	2	; () banked
  4843  001F6A  6F56               	movwf	__doprnt@c& (0+255),b
  4844  001F6C                     l10062:
  4845                           
  4846                           ; BSR set to: 2
  4847  001F6C  0E05               	movlw	5
  4848  001F6E  0102               	movlb	2	; () banked
  4849  001F70  1956               	xorwf	__doprnt@c& (0+255),w,b
  4850  001F72  B4D8               	btfsc	status,2,c
  4851  001F74  D016               	goto	l10074
  4852                           
  4853                           ; BSR set to: 2
  4854                           ;doprnt.c: 1306: if(val < dpowers[c])
  4855                           
  4856                           ; BSR set to: 2
  4857                           
  4858                           ; BSR set to: 2
  4859  001F76  0102               	movlb	2	; () banked
  4860  001F78  5156               	movf	__doprnt@c& (0+255),w,b
  4861  001F7A  0D02               	mullw	2
  4862  001F7C  0E01               	movlw	low _dpowers
  4863  001F7E  24F3               	addwf	prodl,w,c
  4864  001F80  6EF6               	movwf	tblptrl,c
  4865  001F82  0E06               	movlw	high _dpowers
  4866  001F84  20F4               	addwfc	prodh,w,c
  4867  001F86  6EF7               	movwf	tblptrh,c
  4868  001F88                     	if	0	;There are less than 3 active tblptr bytes
  4869  001F88                     	endif
  4870  001F88  0009               	tblrd		*+
  4871  001F8A  50F5               	movf	tablat,w,c
  4872  001F8C  0102               	movlb	2	; () banked
  4873  001F8E  5D52               	subwf	__doprnt@val& (0+255),w,b
  4874  001F90  0009               	tblrd		*+
  4875  001F92  50F5               	movf	tablat,w,c
  4876  001F94  0102               	movlb	2	; () banked
  4877  001F96  5953               	subwfb	(__doprnt@val+1)& (0+255),w,b
  4878  001F98  A0D8               	btfss	status,0,c
  4879  001F9A  D003               	goto	l10074
  4880                           
  4881                           ; BSR set to: 2
  4882                           
  4883                           ; BSR set to: 2
  4884                           
  4885                           ; BSR set to: 2
  4886                           ;doprnt.c: 1307: break;
  4887  001F9C  0102               	movlb	2	; () banked
  4888  001F9E  2B56               	incf	__doprnt@c& (0+255),f,b
  4889  001FA0  D7E5               	goto	l10062
  4890  001FA2                     l10074:
  4891                           
  4892                           ; BSR set to: 2
  4893                           ;doprnt.c: 1422: {
  4894                           ;doprnt.c: 1438: if(flag & 0x03)
  4895  001FA2  C250  F24E         	movff	__doprnt@flag,??__doprnt
  4896  001FA6  0E03               	movlw	3
  4897  001FA8  0102               	movlb	2	; () banked
  4898  001FAA  174E               	andwf	??__doprnt& (0+255),f,b
  4899  001FAC  B4D8               	btfsc	status,2,c
  4900  001FAE  D034               	goto	l10084
  4901                           
  4902                           ; BSR set to: 2
  4903                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  4904  001FB0  0102               	movlb	2	; () banked
  4905  001FB2  EE20 F002          	lfsr	2,2
  4906  001FB6  5148               	movf	__doprnt@pb& (0+255),w,b
  4907  001FB8  26D9               	addwf	fsr2l,f,c
  4908  001FBA  5149               	movf	(__doprnt@pb+1)& (0+255),w,b
  4909  001FBC  22DA               	addwfc	fsr2h,f,c
  4910  001FBE  50DE               	movf	postinc2,w,c
  4911  001FC0  10DE               	iorwf	postinc2,w,c
  4912  001FC2  B4D8               	btfsc	status,2,c
  4913  001FC4  D014               	goto	l10080
  4914                           
  4915                           ; BSR set to: 2
  4916  001FC6  0102               	movlb	2	; () banked
  4917  001FC8  EE20 F002          	lfsr	2,2
  4918  001FCC  5148               	movf	__doprnt@pb& (0+255),w,b
  4919  001FCE  26D9               	addwf	fsr2l,f,c
  4920  001FD0  5149               	movf	(__doprnt@pb+1)& (0+255),w,b
  4921  001FD2  22DA               	addwfc	fsr2h,f,c
  4922  001FD4  D801               	call	u13018
  4923  001FD6  D020               	goto	l10084
  4924  001FD8                     u13018:
  4925  001FD8  0005               	push	
  4926  001FDA  6EFA               	movwf	pclath,c
  4927  001FDC  50DE               	movf	postinc2,w,c
  4928  001FDE  6EFD               	movwf	tosl,c
  4929  001FE0  50DE               	movf	postinc2,w,c
  4930  001FE2  6EFE               	movwf	tosh,c
  4931  001FE4  50F8               	movf	tblptru,w,c
  4932  001FE6  6EFF               	movwf	tosu,c
  4933  001FE8  50FA               	movf	pclath,w,c
  4934  001FEA  0E2D               	movlw	45
  4935  001FEC  0012               	return		;indir
  4936  001FEE                     l10080:
  4937  001FEE  C248  FFD9         	movff	__doprnt@pb,fsr2l
  4938  001FF2  C249  FFDA         	movff	__doprnt@pb+1,fsr2h
  4939  001FF6  CFDE F24E          	movff	postinc2,??__doprnt
  4940  001FFA  CFDD F24F          	movff	postdec2,??__doprnt+1
  4941  001FFE  C24E  FFD9         	movff	??__doprnt,fsr2l
  4942  002002  C24F  FFDA         	movff	??__doprnt+1,fsr2h
  4943  002006  0E2D               	movlw	45
  4944  002008  6EDF               	movwf	indf2,c
  4945  00200A  C248  FFD9         	movff	__doprnt@pb,fsr2l
  4946  00200E  C249  FFDA         	movff	__doprnt@pb+1,fsr2h
  4947  002012  2ADE               	incf	postinc2,f,c
  4948  002014  0E00               	movlw	0
  4949  002016  22DD               	addwfc	postdec2,f,c
  4950  002018                     l10084:
  4951                           
  4952                           ;doprnt.c: 1469: }
  4953                           ;doprnt.c: 1472: prec = c;
  4954  002018  C256  F251         	movff	__doprnt@c,__doprnt@prec
  4955                           
  4956                           ;doprnt.c: 1474: while(prec--) {
  4957  00201C  D05A               	goto	l10096
  4958  00201E                     l10086:
  4959                           
  4960                           ;doprnt.c: 1478: {
  4961                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4962  00201E  0102               	movlb	2	; () banked
  4963  002020  5151               	movf	__doprnt@prec& (0+255),w,b
  4964  002022  0D02               	mullw	2
  4965  002024  0E01               	movlw	low _dpowers
  4966  002026  24F3               	addwf	prodl,w,c
  4967  002028  6EF6               	movwf	tblptrl,c
  4968  00202A  0E06               	movlw	high _dpowers
  4969  00202C  20F4               	addwfc	prodh,w,c
  4970  00202E  6EF7               	movwf	tblptrh,c
  4971  002030                     	if	0	;There are less than 3 active tblptr bytes
  4972  002030                     	endif
  4973  002030  0009               	tblrd		*+
  4974  002032  CFF5 F23E          	movff	tablat,___lwdiv@divisor
  4975  002036  000A               	tblrd		*-
  4976  002038  CFF5 F23F          	movff	tablat,___lwdiv@divisor+1
  4977  00203C  C252  F23C         	movff	__doprnt@val,___lwdiv@dividend
  4978  002040  C253  F23D         	movff	__doprnt@val+1,___lwdiv@dividend+1
  4979  002044  ECF3  F01B         	call	___lwdiv
  4980  002048  C23C  F243         	movff	?___lwdiv,___lwmod@dividend
  4981  00204C  C23D  F244         	movff	?___lwdiv+1,___lwmod@dividend+1
  4982  002050  0E00               	movlw	0
  4983  002052  0102               	movlb	2	; () banked
  4984  002054  6F46               	movwf	(___lwmod@divisor+1)& (0+255),b
  4985  002056  0E0A               	movlw	10
  4986  002058  6F45               	movwf	___lwmod@divisor& (0+255),b
  4987  00205A  ECBA  F01D         	call	___lwmod	;wreg free
  4988  00205E  0102               	movlb	2	; () banked
  4989  002060  5143               	movf	?___lwmod& (0+255),w,b
  4990  002062  0F30               	addlw	48
  4991  002064  0102               	movlb	2	; () banked
  4992  002066  6F56               	movwf	__doprnt@c& (0+255),b
  4993                           
  4994                           ; BSR set to: 2
  4995                           ;doprnt.c: 1523: }
  4996                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  4997  002068  0102               	movlb	2	; () banked
  4998  00206A  EE20 F002          	lfsr	2,2
  4999  00206E  5148               	movf	__doprnt@pb& (0+255),w,b
  5000  002070  26D9               	addwf	fsr2l,f,c
  5001  002072  5149               	movf	(__doprnt@pb+1)& (0+255),w,b
  5002  002074  22DA               	addwfc	fsr2h,f,c
  5003  002076  50DE               	movf	postinc2,w,c
  5004  002078  10DE               	iorwf	postinc2,w,c
  5005  00207A  B4D8               	btfsc	status,2,c
  5006  00207C  D015               	goto	l10092
  5007                           
  5008                           ; BSR set to: 2
  5009  00207E  0102               	movlb	2	; () banked
  5010  002080  EE20 F002          	lfsr	2,2
  5011  002084  5148               	movf	__doprnt@pb& (0+255),w,b
  5012  002086  26D9               	addwf	fsr2l,f,c
  5013  002088  5149               	movf	(__doprnt@pb+1)& (0+255),w,b
  5014  00208A  22DA               	addwfc	fsr2h,f,c
  5015  00208C  D801               	call	u13038
  5016  00208E  D021               	goto	l10096
  5017  002090                     u13038:
  5018  002090  0005               	push	
  5019  002092  6EFA               	movwf	pclath,c
  5020  002094  50DE               	movf	postinc2,w,c
  5021  002096  6EFD               	movwf	tosl,c
  5022  002098  50DE               	movf	postinc2,w,c
  5023  00209A  6EFE               	movwf	tosh,c
  5024  00209C  50F8               	movf	tblptru,w,c
  5025  00209E  6EFF               	movwf	tosu,c
  5026  0020A0  50FA               	movf	pclath,w,c
  5027  0020A2  0102               	movlb	2	; () banked
  5028  0020A4  5156               	movf	__doprnt@c& (0+255),w,b
  5029  0020A6  0012               	return		;indir
  5030  0020A8                     l10092:
  5031  0020A8  C248  FFD9         	movff	__doprnt@pb,fsr2l
  5032  0020AC  C249  FFDA         	movff	__doprnt@pb+1,fsr2h
  5033  0020B0  CFDE F24E          	movff	postinc2,??__doprnt
  5034  0020B4  CFDD F24F          	movff	postdec2,??__doprnt+1
  5035  0020B8  C24E  FFD9         	movff	??__doprnt,fsr2l
  5036  0020BC  C24F  FFDA         	movff	??__doprnt+1,fsr2h
  5037  0020C0  C256  FFDF         	movff	__doprnt@c,indf2
  5038  0020C4  C248  FFD9         	movff	__doprnt@pb,fsr2l
  5039  0020C8  C249  FFDA         	movff	__doprnt@pb+1,fsr2h
  5040  0020CC  2ADE               	incf	postinc2,f,c
  5041  0020CE  0E00               	movlw	0
  5042  0020D0  22DD               	addwfc	postdec2,f,c
  5043  0020D2                     l10096:
  5044  0020D2  0102               	movlb	2	; () banked
  5045  0020D4  0751               	decf	__doprnt@prec& (0+255),f,b
  5046  0020D6  0102               	movlb	2	; () banked
  5047  0020D8  2951               	incf	__doprnt@prec& (0+255),w,b
  5048  0020DA  A4D8               	btfss	status,2,c
  5049  0020DC  D7A0               	goto	l10086
  5050  0020DE                     l10098:
  5051  0020DE  C24A  FFF6         	movff	__doprnt@f,tblptrl
  5052  0020E2  C24B  FFF7         	movff	__doprnt@f+1,tblptrh
  5053  0020E6  0102               	movlb	2	; () banked
  5054  0020E8  4B4A               	infsnz	__doprnt@f& (0+255),f,b
  5055  0020EA  2B4B               	incf	(__doprnt@f+1)& (0+255),f,b
  5056  0020EC                     	if	0	;tblptru may be non-zero
  5057  0020EC                     	endif
  5058  0020EC                     	if	0	;tblptru may be non-zero
  5059  0020EC                     	endif
  5060  0020EC  0008               	tblrd		*
  5061  0020EE  CFF5 F256          	movff	tablat,__doprnt@c
  5062  0020F2  0102               	movlb	2	; () banked
  5063  0020F4  5156               	movf	__doprnt@c& (0+255),w,b
  5064  0020F6  A4D8               	btfss	status,2,c
  5065  0020F8  D631               	goto	l10016
  5066  0020FA                     l10100:
  5067                           
  5068                           ; BSR set to: 2
  5069                           ;doprnt.c: 1540: return 0;
  5070  0020FA  0E00               	movlw	0
  5071  0020FC  0102               	movlb	2	; () banked
  5072  0020FE  6F49               	movwf	(?__doprnt+1)& (0+255),b
  5073  002100  0E00               	movlw	0
  5074  002102  6F48               	movwf	?__doprnt& (0+255),b
  5075  002104  0012               	return	
  5076  002106                     __end_of__doprnt:
  5077                           	opt stack 0
  5078                           tosu	equ	0xFFF
  5079                           tosh	equ	0xFFE
  5080                           tosl	equ	0xFFD
  5081                           pclath	equ	0xFFA
  5082                           tblptru	equ	0xFF8
  5083                           tblptrh	equ	0xFF7
  5084                           tblptrl	equ	0xFF6
  5085                           tablat	equ	0xFF5
  5086                           prodh	equ	0xFF4
  5087                           prodl	equ	0xFF3
  5088                           intcon	equ	0xFF2
  5089                           indf0	equ	0xFEF
  5090                           postinc0	equ	0xFEE
  5091                           fsr0h	equ	0xFEA
  5092                           fsr0l	equ	0xFE9
  5093                           wreg	equ	0xFE8
  5094                           postdec1	equ	0xFE5
  5095                           fsr1l	equ	0xFE1
  5096                           indf2	equ	0xFDF
  5097                           postinc2	equ	0xFDE
  5098                           postdec2	equ	0xFDD
  5099                           fsr2h	equ	0xFDA
  5100                           fsr2l	equ	0xFD9
  5101                           status	equ	0xFD8
  5102                           
  5103 ;; *************** function _putch *****************
  5104 ;; Defined at:
  5105 ;;		line 7 in file "/opt/microchip/xc8/v1.41/sources/common/putch.c"
  5106 ;; Parameters:    Size  Location     Type
  5107 ;;  c               1    wreg     unsigned char 
  5108 ;; Auto vars:     Size  Location     Type
  5109 ;;  c               1    0[COMRAM] unsigned char 
  5110 ;; Return value:  Size  Location     Type
  5111 ;;                  1    wreg      void 
  5112 ;; Registers used:
  5113 ;;		wreg
  5114 ;; Tracked objects:
  5115 ;;		On entry : 0/0
  5116 ;;		On exit  : 0/0
  5117 ;;		Unchanged: 0/0
  5118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5119 ;;      Params:         0       0       0       0       0       0       0
  5120 ;;      Locals:         0       0       0       0       0       0       0
  5121 ;;      Temps:          0       0       0       0       0       0       0
  5122 ;;      Totals:         0       0       0       0       0       0       0
  5123 ;;Total ram usage:        0 bytes
  5124 ;; Hardware stack levels used:    1
  5125 ;; Hardware stack levels required when called:    7
  5126 ;; This function calls:
  5127 ;;		Nothing
  5128 ;; This function is called by:
  5129 ;;		i2__doprnt
  5130 ;;		__doprnt
  5131 ;; This function uses a non-reentrant model
  5132 ;;
  5133                           
  5134                           	psect	text12
  5135  004368                     __ptext12:
  5136                           	opt stack 0
  5137  004368                     _putch:
  5138                           	opt stack 0
  5139                           
  5140                           ; BSR set to: 2
  5141                           ;Skip over the trampoline to the duplicate function for level 2
  5142  004368  B27F               	btfsc	btemp,1,c
  5143  00436A  0012               	return	
  5144  00436C                     _putch$intlevel0:
  5145                           	opt stack 20
  5146                           
  5147                           ;incstack = 0
  5148  00436C  0012               	return		;funcret
  5149  00436E                     __end_of_putch:
  5150                           	opt stack 0
  5151                           tosu	equ	0xFFF
  5152                           tosh	equ	0xFFE
  5153                           tosl	equ	0xFFD
  5154                           pclath	equ	0xFFA
  5155                           tblptru	equ	0xFF8
  5156                           tblptrh	equ	0xFF7
  5157                           tblptrl	equ	0xFF6
  5158                           tablat	equ	0xFF5
  5159                           prodh	equ	0xFF4
  5160                           prodl	equ	0xFF3
  5161                           intcon	equ	0xFF2
  5162                           indf0	equ	0xFEF
  5163                           postinc0	equ	0xFEE
  5164                           fsr0h	equ	0xFEA
  5165                           fsr0l	equ	0xFE9
  5166                           wreg	equ	0xFE8
  5167                           postdec1	equ	0xFE5
  5168                           fsr1l	equ	0xFE1
  5169                           indf2	equ	0xFDF
  5170                           postinc2	equ	0xFDE
  5171                           postdec2	equ	0xFDD
  5172                           fsr2h	equ	0xFDA
  5173                           fsr2l	equ	0xFD9
  5174                           status	equ	0xFD8
  5175                           
  5176 ;; *************** function ___lwmod *****************
  5177 ;; Defined at:
  5178 ;;		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/lwmod.c"
  5179 ;; Parameters:    Size  Location     Type
  5180 ;;  dividend        2    7[BANK2 ] unsigned int 
  5181 ;;  divisor         2    9[BANK2 ] unsigned int 
  5182 ;; Auto vars:     Size  Location     Type
  5183 ;;  counter         1   11[BANK2 ] unsigned char 
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  2    7[BANK2 ] unsigned int 
  5186 ;; Registers used:
  5187 ;;		wreg, status,2, status,0
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5193 ;;      Params:         0       0       0       4       0       0       0
  5194 ;;      Locals:         0       0       0       1       0       0       0
  5195 ;;      Temps:          0       0       0       0       0       0       0
  5196 ;;      Totals:         0       0       0       5       0       0       0
  5197 ;;Total ram usage:        5 bytes
  5198 ;; Hardware stack levels used:    1
  5199 ;; Hardware stack levels required when called:    7
  5200 ;; This function calls:
  5201 ;;		Nothing
  5202 ;; This function is called by:
  5203 ;;		__doprnt
  5204 ;; This function uses a non-reentrant model
  5205 ;;
  5206                           
  5207                           	psect	text13
  5208  003B74                     __ptext13:
  5209                           	opt stack 0
  5210  003B74                     ___lwmod:
  5211                           	opt stack 20
  5212                           
  5213                           ;incstack = 0
  5214  003B74  0102               	movlb	2	; () banked
  5215  003B76  5145               	movf	___lwmod@divisor& (0+255),w,b
  5216  003B78  0102               	movlb	2	; () banked
  5217  003B7A  1146               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  5218  003B7C  B4D8               	btfsc	status,2,c
  5219  003B7E  D026               	goto	l1552
  5220                           
  5221                           ; BSR set to: 2
  5222  003B80  0E01               	movlw	1
  5223  003B82  0102               	movlb	2	; () banked
  5224  003B84  6F47               	movwf	___lwmod@counter& (0+255),b
  5225  003B86  D006               	goto	l4624
  5226  003B88                     l4622:
  5227                           
  5228                           ; BSR set to: 2
  5229  003B88  0102               	movlb	2	; () banked
  5230  003B8A  90D8               	bcf	status,0,c
  5231  003B8C  3745               	rlcf	___lwmod@divisor& (0+255),f,b
  5232  003B8E  3746               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  5233  003B90  0102               	movlb	2	; () banked
  5234  003B92  2B47               	incf	___lwmod@counter& (0+255),f,b
  5235  003B94                     l4624:
  5236                           
  5237                           ; BSR set to: 2
  5238  003B94  0102               	movlb	2	; () banked
  5239  003B96  AF46               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  5240  003B98  D7F7               	goto	l4622
  5241  003B9A                     l4626:
  5242                           
  5243                           ; BSR set to: 2
  5244  003B9A  0102               	movlb	2	; () banked
  5245  003B9C  5145               	movf	___lwmod@divisor& (0+255),w,b
  5246  003B9E  0102               	movlb	2	; () banked
  5247  003BA0  5D43               	subwf	___lwmod@dividend& (0+255),w,b
  5248  003BA2  0102               	movlb	2	; () banked
  5249  003BA4  5146               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5250  003BA6  0102               	movlb	2	; () banked
  5251  003BA8  5944               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  5252  003BAA  A0D8               	btfss	status,0,c
  5253  003BAC  D008               	goto	l4630
  5254                           
  5255                           ; BSR set to: 2
  5256  003BAE  0102               	movlb	2	; () banked
  5257  003BB0  5145               	movf	___lwmod@divisor& (0+255),w,b
  5258  003BB2  0102               	movlb	2	; () banked
  5259  003BB4  5F43               	subwf	___lwmod@dividend& (0+255),f,b
  5260  003BB6  0102               	movlb	2	; () banked
  5261  003BB8  5146               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5262  003BBA  0102               	movlb	2	; () banked
  5263  003BBC  5B44               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  5264  003BBE                     l4630:
  5265                           
  5266                           ; BSR set to: 2
  5267  003BBE  0102               	movlb	2	; () banked
  5268  003BC0  90D8               	bcf	status,0,c
  5269  003BC2  3346               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  5270  003BC4  3345               	rrcf	___lwmod@divisor& (0+255),f,b
  5271                           
  5272                           ; BSR set to: 2
  5273  003BC6  0102               	movlb	2	; () banked
  5274  003BC8  2F47               	decfsz	___lwmod@counter& (0+255),f,b
  5275  003BCA  D7E7               	goto	l4626
  5276  003BCC                     l1552:
  5277                           
  5278                           ; BSR set to: 2
  5279  003BCC  C243  F243         	movff	___lwmod@dividend,?___lwmod
  5280  003BD0  C244  F244         	movff	___lwmod@dividend+1,?___lwmod+1
  5281                           
  5282                           ; BSR set to: 2
  5283  003BD4  0012               	return		;funcret
  5284  003BD6                     __end_of___lwmod:
  5285                           	opt stack 0
  5286                           tosu	equ	0xFFF
  5287                           tosh	equ	0xFFE
  5288                           tosl	equ	0xFFD
  5289                           pclath	equ	0xFFA
  5290                           tblptru	equ	0xFF8
  5291                           tblptrh	equ	0xFF7
  5292                           tblptrl	equ	0xFF6
  5293                           tablat	equ	0xFF5
  5294                           prodh	equ	0xFF4
  5295                           prodl	equ	0xFF3
  5296                           intcon	equ	0xFF2
  5297                           indf0	equ	0xFEF
  5298                           postinc0	equ	0xFEE
  5299                           fsr0h	equ	0xFEA
  5300                           fsr0l	equ	0xFE9
  5301                           wreg	equ	0xFE8
  5302                           postdec1	equ	0xFE5
  5303                           fsr1l	equ	0xFE1
  5304                           indf2	equ	0xFDF
  5305                           postinc2	equ	0xFDE
  5306                           postdec2	equ	0xFDD
  5307                           fsr2h	equ	0xFDA
  5308                           fsr2l	equ	0xFD9
  5309                           status	equ	0xFD8
  5310                           
  5311 ;; *************** function ___lwdiv *****************
  5312 ;; Defined at:
  5313 ;;		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/lwdiv.c"
  5314 ;; Parameters:    Size  Location     Type
  5315 ;;  dividend        2    0[BANK2 ] unsigned int 
  5316 ;;  divisor         2    2[BANK2 ] unsigned int 
  5317 ;; Auto vars:     Size  Location     Type
  5318 ;;  quotient        2    4[BANK2 ] unsigned int 
  5319 ;;  counter         1    6[BANK2 ] unsigned char 
  5320 ;; Return value:  Size  Location     Type
  5321 ;;                  2    0[BANK2 ] unsigned int 
  5322 ;; Registers used:
  5323 ;;		wreg, status,2, status,0
  5324 ;; Tracked objects:
  5325 ;;		On entry : 0/0
  5326 ;;		On exit  : 0/0
  5327 ;;		Unchanged: 0/0
  5328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5329 ;;      Params:         0       0       0       4       0       0       0
  5330 ;;      Locals:         0       0       0       3       0       0       0
  5331 ;;      Temps:          0       0       0       0       0       0       0
  5332 ;;      Totals:         0       0       0       7       0       0       0
  5333 ;;Total ram usage:        7 bytes
  5334 ;; Hardware stack levels used:    1
  5335 ;; Hardware stack levels required when called:    7
  5336 ;; This function calls:
  5337 ;;		Nothing
  5338 ;; This function is called by:
  5339 ;;		__doprnt
  5340 ;; This function uses a non-reentrant model
  5341 ;;
  5342                           
  5343                           	psect	text14
  5344  0037E6                     __ptext14:
  5345                           	opt stack 0
  5346  0037E6                     ___lwdiv:
  5347                           	opt stack 20
  5348                           
  5349                           ; BSR set to: 2
  5350                           ;incstack = 0
  5351  0037E6  0E00               	movlw	0
  5352  0037E8  0102               	movlb	2	; () banked
  5353  0037EA  6F41               	movwf	(___lwdiv@quotient+1)& (0+255),b
  5354  0037EC  0E00               	movlw	0
  5355  0037EE  6F40               	movwf	___lwdiv@quotient& (0+255),b
  5356                           
  5357                           ; BSR set to: 2
  5358  0037F0  0102               	movlb	2	; () banked
  5359  0037F2  513E               	movf	___lwdiv@divisor& (0+255),w,b
  5360  0037F4  0102               	movlb	2	; () banked
  5361  0037F6  113F               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  5362  0037F8  B4D8               	btfsc	status,2,c
  5363  0037FA  D02C               	goto	l1542
  5364                           
  5365                           ; BSR set to: 2
  5366  0037FC  0E01               	movlw	1
  5367  0037FE  0102               	movlb	2	; () banked
  5368  003800  6F42               	movwf	___lwdiv@counter& (0+255),b
  5369  003802  D006               	goto	l4604
  5370  003804                     l4602:
  5371                           
  5372                           ; BSR set to: 2
  5373  003804  0102               	movlb	2	; () banked
  5374  003806  90D8               	bcf	status,0,c
  5375  003808  373E               	rlcf	___lwdiv@divisor& (0+255),f,b
  5376  00380A  373F               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  5377  00380C  0102               	movlb	2	; () banked
  5378  00380E  2B42               	incf	___lwdiv@counter& (0+255),f,b
  5379  003810                     l4604:
  5380                           
  5381                           ; BSR set to: 2
  5382  003810  0102               	movlb	2	; () banked
  5383  003812  AF3F               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  5384  003814  D7F7               	goto	l4602
  5385  003816                     l4606:
  5386                           
  5387                           ; BSR set to: 2
  5388  003816  0102               	movlb	2	; () banked
  5389  003818  90D8               	bcf	status,0,c
  5390  00381A  3740               	rlcf	___lwdiv@quotient& (0+255),f,b
  5391  00381C  3741               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  5392                           
  5393                           ; BSR set to: 2
  5394  00381E  0102               	movlb	2	; () banked
  5395  003820  513E               	movf	___lwdiv@divisor& (0+255),w,b
  5396  003822  0102               	movlb	2	; () banked
  5397  003824  5D3C               	subwf	___lwdiv@dividend& (0+255),w,b
  5398  003826  0102               	movlb	2	; () banked
  5399  003828  513F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5400  00382A  0102               	movlb	2	; () banked
  5401  00382C  593D               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  5402  00382E  A0D8               	btfss	status,0,c
  5403  003830  D00A               	goto	l4614
  5404                           
  5405                           ; BSR set to: 2
  5406  003832  0102               	movlb	2	; () banked
  5407  003834  513E               	movf	___lwdiv@divisor& (0+255),w,b
  5408  003836  0102               	movlb	2	; () banked
  5409  003838  5F3C               	subwf	___lwdiv@dividend& (0+255),f,b
  5410  00383A  0102               	movlb	2	; () banked
  5411  00383C  513F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5412  00383E  0102               	movlb	2	; () banked
  5413  003840  5B3D               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  5414                           
  5415                           ; BSR set to: 2
  5416  003842  0102               	movlb	2	; () banked
  5417  003844  8140               	bsf	___lwdiv@quotient& (0+255),0,b
  5418  003846                     l4614:
  5419                           
  5420                           ; BSR set to: 2
  5421  003846  0102               	movlb	2	; () banked
  5422  003848  90D8               	bcf	status,0,c
  5423  00384A  333F               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  5424  00384C  333E               	rrcf	___lwdiv@divisor& (0+255),f,b
  5425                           
  5426                           ; BSR set to: 2
  5427  00384E  0102               	movlb	2	; () banked
  5428  003850  2F42               	decfsz	___lwdiv@counter& (0+255),f,b
  5429  003852  D7E1               	goto	l4606
  5430  003854                     l1542:
  5431                           
  5432                           ; BSR set to: 2
  5433  003854  C240  F23C         	movff	___lwdiv@quotient,?___lwdiv
  5434  003858  C241  F23D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5435                           
  5436                           ; BSR set to: 2
  5437  00385C  0012               	return		;funcret
  5438  00385E                     __end_of___lwdiv:
  5439                           	opt stack 0
  5440                           tosu	equ	0xFFF
  5441                           tosh	equ	0xFFE
  5442                           tosl	equ	0xFFD
  5443                           pclath	equ	0xFFA
  5444                           tblptru	equ	0xFF8
  5445                           tblptrh	equ	0xFF7
  5446                           tblptrl	equ	0xFF6
  5447                           tablat	equ	0xFF5
  5448                           prodh	equ	0xFF4
  5449                           prodl	equ	0xFF3
  5450                           intcon	equ	0xFF2
  5451                           indf0	equ	0xFEF
  5452                           postinc0	equ	0xFEE
  5453                           fsr0h	equ	0xFEA
  5454                           fsr0l	equ	0xFE9
  5455                           wreg	equ	0xFE8
  5456                           postdec1	equ	0xFE5
  5457                           fsr1l	equ	0xFE1
  5458                           indf2	equ	0xFDF
  5459                           postinc2	equ	0xFDE
  5460                           postdec2	equ	0xFDD
  5461                           fsr2h	equ	0xFDA
  5462                           fsr2l	equ	0xFD9
  5463                           status	equ	0xFD8
  5464                           
  5465 ;; *************** function _putsXLCD *****************
  5466 ;; Defined at:
  5467 ;;		line 18 in file "XLCD/putsxlcd.c"
  5468 ;; Parameters:    Size  Location     Type
  5469 ;;  buffer          2    1[BANK2 ] PTR unsigned char 
  5470 ;;		 -> displayInterface@tmp(3), 
  5471 ;; Auto vars:     Size  Location     Type
  5472 ;;		None
  5473 ;; Return value:  Size  Location     Type
  5474 ;;                  1    wreg      void 
  5475 ;; Registers used:
  5476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5477 ;; Tracked objects:
  5478 ;;		On entry : 0/0
  5479 ;;		On exit  : 0/0
  5480 ;;		Unchanged: 0/0
  5481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5482 ;;      Params:         0       0       0       2       0       0       0
  5483 ;;      Locals:         0       0       0       0       0       0       0
  5484 ;;      Temps:          0       0       0       0       0       0       0
  5485 ;;      Totals:         0       0       0       2       0       0       0
  5486 ;;Total ram usage:        2 bytes
  5487 ;; Hardware stack levels used:    1
  5488 ;; Hardware stack levels required when called:    9
  5489 ;; This function calls:
  5490 ;;		_BusyXLCD
  5491 ;;		_WriteDataXLCD
  5492 ;; This function is called by:
  5493 ;;		_displayInterface
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           	psect	text15
  5498  004062                     __ptext15:
  5499                           	opt stack 0
  5500  004062                     _putsXLCD:
  5501                           	opt stack 20
  5502                           
  5503                           ;putsxlcd.c: 20: while(*buffer)
  5504                           
  5505                           ; BSR set to: 2
  5506                           ;incstack = 0
  5507  004062  D00F               	goto	l5304
  5508  004064                     l5298:
  5509  004064  EC8A  F01F         	call	_BusyXLCD
  5510  004068  0900               	iorlw	0
  5511  00406A  A4D8               	btfss	status,2,c
  5512  00406C  D7FB               	goto	l5298
  5513                           
  5514                           ;putsxlcd.c: 23: WriteDataXLCD(*buffer);
  5515  00406E  C23D  FFD9         	movff	putsXLCD@buffer,fsr2l
  5516  004072  C23E  FFDA         	movff	putsXLCD@buffer+1,fsr2h
  5517  004076  50DF               	movf	indf2,w,c
  5518  004078  ECC8  F01E         	call	_WriteDataXLCD
  5519                           
  5520                           ;putsxlcd.c: 24: buffer++;
  5521  00407C  0102               	movlb	2	; () banked
  5522  00407E  4B3D               	infsnz	putsXLCD@buffer& (0+255),f,b
  5523  004080  2B3E               	incf	(putsXLCD@buffer+1)& (0+255),f,b
  5524  004082                     l5304:
  5525  004082  C23D  FFD9         	movff	putsXLCD@buffer,fsr2l
  5526  004086  C23E  FFDA         	movff	putsXLCD@buffer+1,fsr2h
  5527  00408A  50DF               	movf	indf2,w,c
  5528  00408C  B4D8               	btfsc	status,2,c
  5529  00408E  0012               	return	
  5530  004090  D7E9               	goto	l5298
  5531  004092                     __end_of_putsXLCD:
  5532                           	opt stack 0
  5533                           tosu	equ	0xFFF
  5534                           tosh	equ	0xFFE
  5535                           tosl	equ	0xFFD
  5536                           pclath	equ	0xFFA
  5537                           tblptru	equ	0xFF8
  5538                           tblptrh	equ	0xFF7
  5539                           tblptrl	equ	0xFF6
  5540                           tablat	equ	0xFF5
  5541                           prodh	equ	0xFF4
  5542                           prodl	equ	0xFF3
  5543                           intcon	equ	0xFF2
  5544                           indf0	equ	0xFEF
  5545                           postinc0	equ	0xFEE
  5546                           fsr0h	equ	0xFEA
  5547                           fsr0l	equ	0xFE9
  5548                           wreg	equ	0xFE8
  5549                           postdec1	equ	0xFE5
  5550                           fsr1l	equ	0xFE1
  5551                           indf2	equ	0xFDF
  5552                           postinc2	equ	0xFDE
  5553                           postdec2	equ	0xFDD
  5554                           fsr2h	equ	0xFDA
  5555                           fsr2l	equ	0xFD9
  5556                           status	equ	0xFD8
  5557                           
  5558 ;; *************** function _putrsXLCD *****************
  5559 ;; Defined at:
  5560 ;;		line 18 in file "XLCD/putrxlcd.c"
  5561 ;; Parameters:    Size  Location     Type
  5562 ;;  buffer          2    1[BANK2 ] PTR const unsigned char 
  5563 ;;		 -> STR_40(2), STR_39(2), STR_31(2), STR_30(2), 
  5564 ;;		 -> STR_29(2), STR_28(2), STR_27(2), STR_26(2), 
  5565 ;;		 -> STR_25(3), STR_24(3), STR_20(2), STR_16(2), 
  5566 ;; Auto vars:     Size  Location     Type
  5567 ;;		None
  5568 ;; Return value:  Size  Location     Type
  5569 ;;                  1    wreg      void 
  5570 ;; Registers used:
  5571 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5572 ;; Tracked objects:
  5573 ;;		On entry : 0/0
  5574 ;;		On exit  : 0/0
  5575 ;;		Unchanged: 0/0
  5576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5577 ;;      Params:         0       0       0       2       0       0       0
  5578 ;;      Locals:         0       0       0       0       0       0       0
  5579 ;;      Temps:          0       0       0       0       0       0       0
  5580 ;;      Totals:         0       0       0       2       0       0       0
  5581 ;;Total ram usage:        2 bytes
  5582 ;; Hardware stack levels used:    1
  5583 ;; Hardware stack levels required when called:    9
  5584 ;; This function calls:
  5585 ;;		_BusyXLCD
  5586 ;;		_WriteDataXLCD
  5587 ;; This function is called by:
  5588 ;;		_displayInterface
  5589 ;; This function uses a non-reentrant model
  5590 ;;
  5591                           
  5592                           	psect	text16
  5593  003FC0                     __ptext16:
  5594                           	opt stack 0
  5595  003FC0                     _putrsXLCD:
  5596                           	opt stack 20
  5597                           
  5598                           ;putrxlcd.c: 20: while(*buffer)
  5599                           
  5600                           ;incstack = 0
  5601  003FC0  D010               	goto	l5294
  5602  003FC2                     l5288:
  5603  003FC2  EC8A  F01F         	call	_BusyXLCD	;wreg free
  5604  003FC6  0900               	iorlw	0
  5605  003FC8  A4D8               	btfss	status,2,c
  5606  003FCA  D7FB               	goto	l5288
  5607                           
  5608                           ;putrxlcd.c: 23: WriteDataXLCD(*buffer);
  5609  003FCC  C23D  FFF6         	movff	putrsXLCD@buffer,tblptrl
  5610  003FD0  C23E  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  5611  003FD4                     	if	0	;tblptru may be non-zero
  5612  003FD4                     	endif
  5613  003FD4                     	if	0	;tblptru may be non-zero
  5614  003FD4                     	endif
  5615  003FD4  0008               	tblrd		*
  5616  003FD6  50F5               	movf	tablat,w,c
  5617  003FD8  ECC8  F01E         	call	_WriteDataXLCD
  5618                           
  5619                           ;putrxlcd.c: 24: buffer++;
  5620  003FDC  0102               	movlb	2	; () banked
  5621  003FDE  4B3D               	infsnz	putrsXLCD@buffer& (0+255),f,b
  5622  003FE0  2B3E               	incf	(putrsXLCD@buffer+1)& (0+255),f,b
  5623  003FE2                     l5294:
  5624  003FE2  C23D  FFF6         	movff	putrsXLCD@buffer,tblptrl
  5625  003FE6  C23E  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  5626  003FEA                     	if	0	;tblptru may be non-zero
  5627  003FEA                     	endif
  5628  003FEA                     	if	0	;tblptru may be non-zero
  5629  003FEA                     	endif
  5630  003FEA  0008               	tblrd		*
  5631  003FEC  50F5               	movf	tablat,w,c
  5632  003FEE  0900               	iorlw	0
  5633  003FF0  B4D8               	btfsc	status,2,c
  5634  003FF2  0012               	return	
  5635  003FF4  D7E6               	goto	l5288
  5636  003FF6                     __end_of_putrsXLCD:
  5637                           	opt stack 0
  5638                           tosu	equ	0xFFF
  5639                           tosh	equ	0xFFE
  5640                           tosl	equ	0xFFD
  5641                           pclath	equ	0xFFA
  5642                           tblptru	equ	0xFF8
  5643                           tblptrh	equ	0xFF7
  5644                           tblptrl	equ	0xFF6
  5645                           tablat	equ	0xFF5
  5646                           prodh	equ	0xFF4
  5647                           prodl	equ	0xFF3
  5648                           intcon	equ	0xFF2
  5649                           indf0	equ	0xFEF
  5650                           postinc0	equ	0xFEE
  5651                           fsr0h	equ	0xFEA
  5652                           fsr0l	equ	0xFE9
  5653                           wreg	equ	0xFE8
  5654                           postdec1	equ	0xFE5
  5655                           fsr1l	equ	0xFE1
  5656                           indf2	equ	0xFDF
  5657                           postinc2	equ	0xFDE
  5658                           postdec2	equ	0xFDD
  5659                           fsr2h	equ	0xFDA
  5660                           fsr2l	equ	0xFD9
  5661                           status	equ	0xFD8
  5662                           
  5663 ;; *************** function _WriteDataXLCD *****************
  5664 ;; Defined at:
  5665 ;;		line 18 in file "XLCD/writdata.c"
  5666 ;; Parameters:    Size  Location     Type
  5667 ;;  data            1    wreg     unsigned char 
  5668 ;; Auto vars:     Size  Location     Type
  5669 ;;  data            1    0[BANK2 ] unsigned char 
  5670 ;; Return value:  Size  Location     Type
  5671 ;;                  1    wreg      void 
  5672 ;; Registers used:
  5673 ;;		wreg, status,2, status,0, cstack
  5674 ;; Tracked objects:
  5675 ;;		On entry : 0/0
  5676 ;;		On exit  : 0/0
  5677 ;;		Unchanged: 0/0
  5678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5679 ;;      Params:         0       0       0       0       0       0       0
  5680 ;;      Locals:         0       0       0       1       0       0       0
  5681 ;;      Temps:          0       0       0       0       0       0       0
  5682 ;;      Totals:         0       0       0       1       0       0       0
  5683 ;;Total ram usage:        1 bytes
  5684 ;; Hardware stack levels used:    1
  5685 ;; Hardware stack levels required when called:    8
  5686 ;; This function calls:
  5687 ;;		_DelayFor18TCY
  5688 ;; This function is called by:
  5689 ;;		_putrsXLCD
  5690 ;;		_putsXLCD
  5691 ;; This function uses a non-reentrant model
  5692 ;;
  5693                           
  5694                           	psect	text17
  5695  003D90                     __ptext17:
  5696                           	opt stack 0
  5697  003D90                     _WriteDataXLCD:
  5698                           	opt stack 20
  5699                           
  5700                           ;incstack = 0
  5701                           ;WriteDataXLCD@data stored from wreg
  5702  003D90  0102               	movlb	2	; () banked
  5703  003D92  6F3C               	movwf	WriteDataXLCD@data& (0+255),b
  5704                           
  5705                           ;writdata.c: 37: TRISD &= 0xf0;
  5706  003D94  0EF0               	movlw	240
  5707  003D96  1695               	andwf	3989,f,c	;volatile
  5708                           
  5709                           ;writdata.c: 38: PORTD &= 0xf0;
  5710  003D98  0EF0               	movlw	240
  5711  003D9A  1683               	andwf	3971,f,c	;volatile
  5712                           
  5713                           ;writdata.c: 39: PORTD |= ((data>>4)&0x0f);
  5714  003D9C  0102               	movlb	2	; () banked
  5715  003D9E  393C               	swapf	WriteDataXLCD@data& (0+255),w,b
  5716  003DA0  0B0F               	andlw	15
  5717  003DA2  0B0F               	andlw	15
  5718  003DA4  1283               	iorwf	3971,f,c	;volatile
  5719                           
  5720                           ; BSR set to: 2
  5721                           ;writdata.c: 41: LATDbits.LATD4 = 1;
  5722  003DA6  888C               	bsf	3980,4,c	;volatile
  5723                           
  5724                           ; BSR set to: 2
  5725                           ;writdata.c: 42: LATDbits.LATD5 = 0;
  5726  003DA8  9A8C               	bcf	3980,5,c	;volatile
  5727                           
  5728                           ; BSR set to: 2
  5729                           ;writdata.c: 43: DelayFor18TCY();
  5730  003DAA  EC15  F021         	call	_DelayFor18TCY	;wreg free
  5731                           
  5732                           ;writdata.c: 44: LATDbits.LATD6 = 1;
  5733  003DAE  8C8C               	bsf	3980,6,c	;volatile
  5734                           
  5735                           ;writdata.c: 45: DelayFor18TCY();
  5736  003DB0  EC15  F021         	call	_DelayFor18TCY	;wreg free
  5737                           
  5738                           ;writdata.c: 46: LATDbits.LATD6 = 0;
  5739  003DB4  9C8C               	bcf	3980,6,c	;volatile
  5740                           
  5741                           ;writdata.c: 51: PORTD &= 0xf0;
  5742  003DB6  0EF0               	movlw	240
  5743  003DB8  1683               	andwf	3971,f,c	;volatile
  5744                           
  5745                           ;writdata.c: 52: PORTD |= (data&0x0f);
  5746  003DBA  0102               	movlb	2	; () banked
  5747  003DBC  513C               	movf	WriteDataXLCD@data& (0+255),w,b
  5748  003DBE  0B0F               	andlw	15
  5749  003DC0  1283               	iorwf	3971,f,c	;volatile
  5750                           
  5751                           ; BSR set to: 2
  5752                           ;writdata.c: 54: DelayFor18TCY();
  5753  003DC2  EC15  F021         	call	_DelayFor18TCY	;wreg free
  5754                           
  5755                           ;writdata.c: 55: LATDbits.LATD6 = 1;
  5756  003DC6  8C8C               	bsf	3980,6,c	;volatile
  5757                           
  5758                           ;writdata.c: 56: DelayFor18TCY();
  5759  003DC8  EC15  F021         	call	_DelayFor18TCY	;wreg free
  5760                           
  5761                           ;writdata.c: 57: LATDbits.LATD6 = 0;
  5762  003DCC  9C8C               	bcf	3980,6,c	;volatile
  5763                           
  5764                           ;writdata.c: 61: TRISD |= 0x0f;
  5765  003DCE  0E0F               	movlw	15
  5766  003DD0  1295               	iorwf	3989,f,c	;volatile
  5767  003DD2  0012               	return	
  5768  003DD4                     __end_of_WriteDataXLCD:
  5769                           	opt stack 0
  5770                           tosu	equ	0xFFF
  5771                           tosh	equ	0xFFE
  5772                           tosl	equ	0xFFD
  5773                           pclath	equ	0xFFA
  5774                           tblptru	equ	0xFF8
  5775                           tblptrh	equ	0xFF7
  5776                           tblptrl	equ	0xFF6
  5777                           tablat	equ	0xFF5
  5778                           prodh	equ	0xFF4
  5779                           prodl	equ	0xFF3
  5780                           intcon	equ	0xFF2
  5781                           indf0	equ	0xFEF
  5782                           postinc0	equ	0xFEE
  5783                           fsr0h	equ	0xFEA
  5784                           fsr0l	equ	0xFE9
  5785                           wreg	equ	0xFE8
  5786                           postdec1	equ	0xFE5
  5787                           fsr1l	equ	0xFE1
  5788                           indf2	equ	0xFDF
  5789                           postinc2	equ	0xFDE
  5790                           postdec2	equ	0xFDD
  5791                           fsr2h	equ	0xFDA
  5792                           fsr2l	equ	0xFD9
  5793                           status	equ	0xFD8
  5794                           
  5795 ;; *************** function _buzzer_init *****************
  5796 ;; Defined at:
  5797 ;;		line 917 in file "main.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;		None
  5800 ;; Auto vars:     Size  Location     Type
  5801 ;;		None
  5802 ;; Return value:  Size  Location     Type
  5803 ;;                  1    wreg      void 
  5804 ;; Registers used:
  5805 ;;		wreg, status,2
  5806 ;; Tracked objects:
  5807 ;;		On entry : 0/0
  5808 ;;		On exit  : 0/0
  5809 ;;		Unchanged: 0/0
  5810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5811 ;;      Params:         0       0       0       0       0       0       0
  5812 ;;      Locals:         0       0       0       0       0       0       0
  5813 ;;      Temps:          0       0       0       0       0       0       0
  5814 ;;      Totals:         0       0       0       0       0       0       0
  5815 ;;Total ram usage:        0 bytes
  5816 ;; Hardware stack levels used:    1
  5817 ;; Hardware stack levels required when called:    7
  5818 ;; This function calls:
  5819 ;;		Nothing
  5820 ;; This function is called by:
  5821 ;;		_main
  5822 ;; This function uses a non-reentrant model
  5823 ;;
  5824                           
  5825                           	psect	text18
  5826  004308                     __ptext18:
  5827                           	opt stack 0
  5828  004308                     _buzzer_init:
  5829                           	opt stack 23
  5830                           
  5831                           ;main.c: 918: T2CON = 0x05;
  5832                           
  5833                           ;incstack = 0
  5834  004308  0E05               	movlw	5
  5835  00430A  6ECA               	movwf	4042,c	;volatile
  5836                           
  5837                           ;main.c: 919: TRISCbits.TRISC2 = 0;
  5838  00430C  9494               	bcf	3988,2,c	;volatile
  5839                           
  5840                           ;main.c: 920: PR2 = 0x80;
  5841  00430E  0E80               	movlw	128
  5842  004310  6ECB               	movwf	4043,c	;volatile
  5843                           
  5844                           ;main.c: 921: CCPR1L = 0x80;
  5845  004312  0E80               	movlw	128
  5846  004314  6EBE               	movwf	4030,c	;volatile
  5847  004316  0012               	return		;funcret
  5848  004318                     __end_of_buzzer_init:
  5849                           	opt stack 0
  5850                           tosu	equ	0xFFF
  5851                           tosh	equ	0xFFE
  5852                           tosl	equ	0xFFD
  5853                           pclath	equ	0xFFA
  5854                           tblptru	equ	0xFF8
  5855                           tblptrh	equ	0xFF7
  5856                           tblptrl	equ	0xFF6
  5857                           tablat	equ	0xFF5
  5858                           prodh	equ	0xFF4
  5859                           prodl	equ	0xFF3
  5860                           intcon	equ	0xFF2
  5861                           indf0	equ	0xFEF
  5862                           postinc0	equ	0xFEE
  5863                           fsr0h	equ	0xFEA
  5864                           fsr0l	equ	0xFE9
  5865                           wreg	equ	0xFE8
  5866                           postdec1	equ	0xFE5
  5867                           fsr1l	equ	0xFE1
  5868                           indf2	equ	0xFDF
  5869                           postinc2	equ	0xFDE
  5870                           postdec2	equ	0xFDD
  5871                           fsr2h	equ	0xFDA
  5872                           fsr2l	equ	0xFD9
  5873                           status	equ	0xFD8
  5874                           
  5875 ;; *************** function ___wmul *****************
  5876 ;; Defined at:
  5877 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  5878 ;; Parameters:    Size  Location     Type
  5879 ;;  multiplier      2    0[BANK2 ] unsigned int 
  5880 ;;  multiplicand    2    2[BANK2 ] unsigned int 
  5881 ;; Auto vars:     Size  Location     Type
  5882 ;;  product         2    4[BANK2 ] unsigned int 
  5883 ;; Return value:  Size  Location     Type
  5884 ;;                  2    0[BANK2 ] unsigned int 
  5885 ;; Registers used:
  5886 ;;		wreg, status,2, status,0, prodl, prodh
  5887 ;; Tracked objects:
  5888 ;;		On entry : 0/0
  5889 ;;		On exit  : 0/0
  5890 ;;		Unchanged: 0/0
  5891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5892 ;;      Params:         0       0       0       4       0       0       0
  5893 ;;      Locals:         0       0       0       2       0       0       0
  5894 ;;      Temps:          0       0       0       0       0       0       0
  5895 ;;      Totals:         0       0       0       6       0       0       0
  5896 ;;Total ram usage:        6 bytes
  5897 ;; Hardware stack levels used:    1
  5898 ;; Hardware stack levels required when called:    7
  5899 ;; This function calls:
  5900 ;;		Nothing
  5901 ;; This function is called by:
  5902 ;;		_main
  5903 ;; This function uses a non-reentrant model
  5904 ;;
  5905                           
  5906                           	psect	text19
  5907  003FF6                     __ptext19:
  5908                           	opt stack 0
  5909  003FF6                     ___wmul:
  5910                           	opt stack 23
  5911                           
  5912                           ;incstack = 0
  5913  003FF6  0102               	movlb	2	; () banked
  5914  003FF8  513C               	movf	___wmul@multiplier& (0+255),w,b
  5915  003FFA  0102               	movlb	2	; () banked
  5916  003FFC  033E               	mulwf	___wmul@multiplicand& (0+255),b
  5917  003FFE  CFF3 F240          	movff	prodl,___wmul@product
  5918  004002  CFF4 F241          	movff	prodh,___wmul@product+1
  5919  004006  0102               	movlb	2	; () banked
  5920  004008  513C               	movf	___wmul@multiplier& (0+255),w,b
  5921  00400A  0102               	movlb	2	; () banked
  5922  00400C  033F               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5923  00400E  50F3               	movf	prodl,w,c
  5924  004010  0102               	movlb	2	; () banked
  5925  004012  2741               	addwf	(___wmul@product+1)& (0+255),f,b
  5926  004014  0102               	movlb	2	; () banked
  5927  004016  513D               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5928  004018  0102               	movlb	2	; () banked
  5929  00401A  033E               	mulwf	___wmul@multiplicand& (0+255),b
  5930  00401C  50F3               	movf	prodl,w,c
  5931  00401E  0102               	movlb	2	; () banked
  5932  004020  2741               	addwf	(___wmul@product+1)& (0+255),f,b
  5933                           
  5934                           ; BSR set to: 2
  5935  004022  C240  F23C         	movff	___wmul@product,?___wmul
  5936  004026  C241  F23D         	movff	___wmul@product+1,?___wmul+1
  5937  00402A  0012               	return	
  5938  00402C                     __end_of___wmul:
  5939                           	opt stack 0
  5940                           tosu	equ	0xFFF
  5941                           tosh	equ	0xFFE
  5942                           tosl	equ	0xFFD
  5943                           pclath	equ	0xFFA
  5944                           tblptru	equ	0xFF8
  5945                           tblptrh	equ	0xFF7
  5946                           tblptrl	equ	0xFF6
  5947                           tablat	equ	0xFF5
  5948                           prodh	equ	0xFF4
  5949                           prodl	equ	0xFF3
  5950                           intcon	equ	0xFF2
  5951                           indf0	equ	0xFEF
  5952                           postinc0	equ	0xFEE
  5953                           fsr0h	equ	0xFEA
  5954                           fsr0l	equ	0xFE9
  5955                           wreg	equ	0xFE8
  5956                           postdec1	equ	0xFE5
  5957                           fsr1l	equ	0xFE1
  5958                           indf2	equ	0xFDF
  5959                           postinc2	equ	0xFDE
  5960                           postdec2	equ	0xFDD
  5961                           fsr2h	equ	0xFDA
  5962                           fsr2l	equ	0xFD9
  5963                           status	equ	0xFD8
  5964                           
  5965 ;; *************** function _USART_init *****************
  5966 ;; Defined at:
  5967 ;;		line 965 in file "main.c"
  5968 ;; Parameters:    Size  Location     Type
  5969 ;;		None
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;		None
  5972 ;; Return value:  Size  Location     Type
  5973 ;;                  1    wreg      void 
  5974 ;; Registers used:
  5975 ;;		wreg, status,2, cstack
  5976 ;; Tracked objects:
  5977 ;;		On entry : 0/0
  5978 ;;		On exit  : 0/0
  5979 ;;		Unchanged: 0/0
  5980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5981 ;;      Params:         0       0       0       0       0       0       0
  5982 ;;      Locals:         0       0       0       0       0       0       0
  5983 ;;      Temps:          0       0       0       0       0       0       0
  5984 ;;      Totals:         0       0       0       0       0       0       0
  5985 ;;Total ram usage:        0 bytes
  5986 ;; Hardware stack levels used:    1
  5987 ;; Hardware stack levels required when called:    8
  5988 ;; This function calls:
  5989 ;;		_OpenUSART
  5990 ;; This function is called by:
  5991 ;;		_main
  5992 ;; This function uses a non-reentrant model
  5993 ;;
  5994                           
  5995                           	psect	text20
  5996  0042E4                     __ptext20:
  5997                           	opt stack 0
  5998  0042E4                     _USART_init:
  5999                           	opt stack 22
  6000                           
  6001                           ;main.c: 966: OpenUSART( 0b01111111 &
  6002                           ;main.c: 967: 0b11111111 &
  6003                           ;main.c: 968: 0b11111110 &
  6004                           ;main.c: 969: 0b11111101 &
  6005                           ;main.c: 970: 0b11111111 &
  6006                           ;main.c: 971: 0b11111111,
  6007                           ;main.c: 972: 25 );
  6008                           
  6009                           ; BSR set to: 2
  6010                           ;incstack = 0
  6011  0042E4  0E00               	movlw	0
  6012  0042E6  0102               	movlb	2	; () banked
  6013  0042E8  6F3D               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  6014  0042EA  0E19               	movlw	25
  6015  0042EC  6F3C               	movwf	OpenUSART@spbrg& (0+255),b
  6016  0042EE  0E7C               	movlw	124
  6017  0042F0  ECE2  F01C         	call	_OpenUSART
  6018  0042F4  0012               	return		;funcret
  6019  0042F6                     __end_of_USART_init:
  6020                           	opt stack 0
  6021                           tosu	equ	0xFFF
  6022                           tosh	equ	0xFFE
  6023                           tosl	equ	0xFFD
  6024                           pclath	equ	0xFFA
  6025                           tblptru	equ	0xFF8
  6026                           tblptrh	equ	0xFF7
  6027                           tblptrl	equ	0xFF6
  6028                           tablat	equ	0xFF5
  6029                           prodh	equ	0xFF4
  6030                           prodl	equ	0xFF3
  6031                           intcon	equ	0xFF2
  6032                           indf0	equ	0xFEF
  6033                           postinc0	equ	0xFEE
  6034                           fsr0h	equ	0xFEA
  6035                           fsr0l	equ	0xFE9
  6036                           wreg	equ	0xFE8
  6037                           postdec1	equ	0xFE5
  6038                           fsr1l	equ	0xFE1
  6039                           indf2	equ	0xFDF
  6040                           postinc2	equ	0xFDE
  6041                           postdec2	equ	0xFDD
  6042                           fsr2h	equ	0xFDA
  6043                           fsr2l	equ	0xFD9
  6044                           status	equ	0xFD8
  6045                           
  6046 ;; *************** function _OpenUSART *****************
  6047 ;; Defined at:
  6048 ;;		line 74 in file "USART/usart.c"
  6049 ;; Parameters:    Size  Location     Type
  6050 ;;  config          1    wreg     unsigned char 
  6051 ;;  spbrg           2    0[BANK2 ] unsigned int 
  6052 ;; Auto vars:     Size  Location     Type
  6053 ;;  config          1    2[BANK2 ] unsigned char 
  6054 ;; Return value:  Size  Location     Type
  6055 ;;                  1    wreg      void 
  6056 ;; Registers used:
  6057 ;;		wreg, status,2
  6058 ;; Tracked objects:
  6059 ;;		On entry : 0/0
  6060 ;;		On exit  : 0/0
  6061 ;;		Unchanged: 0/0
  6062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6063 ;;      Params:         0       0       0       2       0       0       0
  6064 ;;      Locals:         0       0       0       1       0       0       0
  6065 ;;      Temps:          0       0       0       0       0       0       0
  6066 ;;      Totals:         0       0       0       3       0       0       0
  6067 ;;Total ram usage:        3 bytes
  6068 ;; Hardware stack levels used:    1
  6069 ;; Hardware stack levels required when called:    7
  6070 ;; This function calls:
  6071 ;;		Nothing
  6072 ;; This function is called by:
  6073 ;;		_USART_init
  6074 ;; This function uses a non-reentrant model
  6075 ;;
  6076                           
  6077                           	psect	text21
  6078  0039C4                     __ptext21:
  6079                           	opt stack 0
  6080  0039C4                     _OpenUSART:
  6081                           	opt stack 22
  6082                           
  6083                           ;incstack = 0
  6084                           ;OpenUSART@config stored from wreg
  6085  0039C4  0102               	movlb	2	; () banked
  6086  0039C6  6F3E               	movwf	OpenUSART@config& (0+255),b
  6087                           
  6088                           ;usart.c: 76: TXSTA = 0;
  6089  0039C8  0E00               	movlw	0
  6090  0039CA  6EAC               	movwf	4012,c	;volatile
  6091                           
  6092                           ;usart.c: 77: RCSTA = 0;
  6093  0039CC  0E00               	movlw	0
  6094  0039CE  6EAB               	movwf	4011,c	;volatile
  6095                           
  6096                           ;usart.c: 79: if(config&0x01)
  6097  0039D0  0102               	movlb	2	; () banked
  6098  0039D2  B13E               	btfsc	OpenUSART@config& (0+255),0,b
  6099                           
  6100                           ; BSR set to: 2
  6101                           ;usart.c: 80: TXSTAbits.SYNC = 1;
  6102  0039D4  88AC               	bsf	4012,4,c	;volatile
  6103                           
  6104                           ; BSR set to: 2
  6105                           ;usart.c: 82: if(config&0x02)
  6106                           
  6107                           ; BSR set to: 2
  6108  0039D6  0102               	movlb	2	; () banked
  6109  0039D8  A33E               	btfss	OpenUSART@config& (0+255),1,b
  6110  0039DA  D002               	goto	l5146
  6111                           
  6112                           ; BSR set to: 2
  6113                           ;usart.c: 83: {
  6114                           ;usart.c: 84: TXSTAbits.TX9 = 1;
  6115  0039DC  8CAC               	bsf	4012,6,c	;volatile
  6116                           
  6117                           ;usart.c: 85: RCSTAbits.RX9 = 1;
  6118  0039DE  8CAB               	bsf	4011,6,c	;volatile
  6119  0039E0                     l5146:
  6120                           
  6121                           ; BSR set to: 2
  6122                           ;usart.c: 86: }
  6123                           ;usart.c: 88: if(config&0x04)
  6124  0039E0  0102               	movlb	2	; () banked
  6125  0039E2  B53E               	btfsc	OpenUSART@config& (0+255),2,b
  6126                           
  6127                           ; BSR set to: 2
  6128                           ;usart.c: 89: TXSTAbits.CSRC = 1;
  6129  0039E4  8EAC               	bsf	4012,7,c	;volatile
  6130                           
  6131                           ; BSR set to: 2
  6132                           ;usart.c: 91: if(config&0x08)
  6133                           
  6134                           ; BSR set to: 2
  6135  0039E6  0102               	movlb	2	; () banked
  6136  0039E8  A73E               	btfss	OpenUSART@config& (0+255),3,b
  6137  0039EA  D002               	goto	l137
  6138                           
  6139                           ; BSR set to: 2
  6140                           ;usart.c: 92: RCSTAbits.CREN = 1;
  6141  0039EC  88AB               	bsf	4011,4,c	;volatile
  6142  0039EE  D001               	goto	l5154
  6143  0039F0                     l137:
  6144                           
  6145                           ; BSR set to: 2
  6146                           ;usart.c: 93: else
  6147                           ;usart.c: 94: RCSTAbits.SREN = 1;
  6148  0039F0  8AAB               	bsf	4011,5,c	;volatile
  6149  0039F2                     l5154:
  6150                           
  6151                           ; BSR set to: 2
  6152                           ;usart.c: 96: if(config&0x10)
  6153  0039F2  0102               	movlb	2	; () banked
  6154  0039F4  B93E               	btfsc	OpenUSART@config& (0+255),4,b
  6155                           
  6156                           ; BSR set to: 2
  6157                           ;usart.c: 97: TXSTAbits.BRGH = 1;
  6158  0039F6  84AC               	bsf	4012,2,c	;volatile
  6159                           
  6160                           ; BSR set to: 2
  6161                           ;usart.c: 99: PIR1bits.TXIF = 0;
  6162  0039F8  989E               	bcf	3998,4,c	;volatile
  6163                           
  6164                           ; BSR set to: 2
  6165                           ;usart.c: 101: if(config&0x20)
  6166  0039FA  0102               	movlb	2	; () banked
  6167  0039FC  BB3E               	btfsc	OpenUSART@config& (0+255),5,b
  6168                           
  6169                           ; BSR set to: 2
  6170                           ;usart.c: 102: RCSTAbits.ADEN = 1;
  6171  0039FE  86AB               	bsf	4011,3,c	;volatile
  6172                           
  6173                           ; BSR set to: 2
  6174                           ;usart.c: 104: if(config&0x40)
  6175                           
  6176                           ; BSR set to: 2
  6177  003A00  0102               	movlb	2	; () banked
  6178  003A02  AD3E               	btfss	OpenUSART@config& (0+255),6,b
  6179  003A04  D002               	goto	l141
  6180                           
  6181                           ; BSR set to: 2
  6182                           ;usart.c: 105: PIE1bits.RCIE = 1;
  6183  003A06  8A9D               	bsf	3997,5,c	;volatile
  6184  003A08  D001               	goto	l142
  6185  003A0A                     l141:
  6186                           
  6187                           ; BSR set to: 2
  6188                           ;usart.c: 106: else
  6189                           ;usart.c: 107: PIE1bits.RCIE = 0;
  6190  003A0A  9A9D               	bcf	3997,5,c	;volatile
  6191  003A0C                     l142:
  6192                           
  6193                           ; BSR set to: 2
  6194                           ;usart.c: 109: PIR1bits.RCIF = 0;
  6195  003A0C  9A9E               	bcf	3998,5,c	;volatile
  6196                           
  6197                           ; BSR set to: 2
  6198                           ;usart.c: 111: if(config&0x80)
  6199  003A0E  0102               	movlb	2	; () banked
  6200  003A10  AF3E               	btfss	OpenUSART@config& (0+255),7,b
  6201  003A12  D002               	goto	l143
  6202                           
  6203                           ; BSR set to: 2
  6204                           ;usart.c: 112: PIE1bits.TXIE = 1;
  6205  003A14  889D               	bsf	3997,4,c	;volatile
  6206  003A16  D001               	goto	l144
  6207  003A18                     l143:
  6208                           
  6209                           ; BSR set to: 2
  6210                           ;usart.c: 113: else
  6211                           ;usart.c: 114: PIE1bits.TXIE = 0;
  6212  003A18  989D               	bcf	3997,4,c	;volatile
  6213  003A1A                     l144:
  6214                           
  6215                           ; BSR set to: 2
  6216                           ;usart.c: 116: SPBRG = spbrg;
  6217  003A1A  C23C  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  6218                           
  6219                           ; BSR set to: 2
  6220                           ;usart.c: 117: SPBRGH = spbrg >> 8;
  6221  003A1E  0102               	movlb	2	; () banked
  6222  003A20  513D               	movf	(OpenUSART@spbrg+1)& (0+255),w,b
  6223  003A22  6EB0               	movwf	4016,c	;volatile
  6224                           
  6225                           ; BSR set to: 2
  6226                           ;usart.c: 119: TXSTAbits.TXEN = 1;
  6227  003A24  8AAC               	bsf	4012,5,c	;volatile
  6228                           
  6229                           ; BSR set to: 2
  6230                           ;usart.c: 120: RCSTAbits.SPEN = 1;
  6231  003A26  8EAB               	bsf	4011,7,c	;volatile
  6232                           
  6233                           ; BSR set to: 2
  6234                           ;usart.c: 122: TRISCbits.TRISC6 = 0;TRISCbits.TRISC7 = 1;
  6235  003A28  9C94               	bcf	3988,6,c	;volatile
  6236                           
  6237                           ; BSR set to: 2
  6238  003A2A  8E94               	bsf	3988,7,c	;volatile
  6239                           
  6240                           ; BSR set to: 2
  6241                           ;usart.c: 123: if(TXSTAbits.SYNC && !TXSTAbits.CSRC)
  6242  003A2C  A8AC               	btfss	4012,4,c	;volatile
  6243  003A2E  0012               	return	
  6244                           
  6245                           ; BSR set to: 2
  6246  003A30  BEAC               	btfsc	4012,7,c	;volatile
  6247  003A32  0012               	return	
  6248                           
  6249                           ; BSR set to: 2
  6250                           ;usart.c: 124: TRISCbits.TRISC6 = 1;
  6251  003A34  8C94               	bsf	3988,6,c	;volatile
  6252  003A36  0012               	return	
  6253  003A38                     __end_of_OpenUSART:
  6254                           	opt stack 0
  6255                           tosu	equ	0xFFF
  6256                           tosh	equ	0xFFE
  6257                           tosl	equ	0xFFD
  6258                           pclath	equ	0xFFA
  6259                           tblptru	equ	0xFF8
  6260                           tblptrh	equ	0xFF7
  6261                           tblptrl	equ	0xFF6
  6262                           tablat	equ	0xFF5
  6263                           prodh	equ	0xFF4
  6264                           prodl	equ	0xFF3
  6265                           intcon	equ	0xFF2
  6266                           indf0	equ	0xFEF
  6267                           postinc0	equ	0xFEE
  6268                           fsr0h	equ	0xFEA
  6269                           fsr0l	equ	0xFE9
  6270                           wreg	equ	0xFE8
  6271                           postdec1	equ	0xFE5
  6272                           fsr1l	equ	0xFE1
  6273                           indf2	equ	0xFDF
  6274                           postinc2	equ	0xFDE
  6275                           postdec2	equ	0xFDD
  6276                           fsr2h	equ	0xFDA
  6277                           fsr2l	equ	0xFD9
  6278                           status	equ	0xFD8
  6279                           
  6280 ;; *************** function _TC74_init *****************
  6281 ;; Defined at:
  6282 ;;		line 960 in file "main.c"
  6283 ;; Parameters:    Size  Location     Type
  6284 ;;		None
  6285 ;; Auto vars:     Size  Location     Type
  6286 ;;		None
  6287 ;; Return value:  Size  Location     Type
  6288 ;;                  1    wreg      void 
  6289 ;; Registers used:
  6290 ;;		wreg, status,2, status,0, cstack
  6291 ;; Tracked objects:
  6292 ;;		On entry : 0/0
  6293 ;;		On exit  : 0/0
  6294 ;;		Unchanged: 0/0
  6295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6296 ;;      Params:         0       0       0       0       0       0       0
  6297 ;;      Locals:         0       0       0       0       0       0       0
  6298 ;;      Temps:          0       0       0       0       0       0       0
  6299 ;;      Totals:         0       0       0       0       0       0       0
  6300 ;;Total ram usage:        0 bytes
  6301 ;; Hardware stack levels used:    1
  6302 ;; Hardware stack levels required when called:    8
  6303 ;; This function calls:
  6304 ;;		_OpenI2C
  6305 ;; This function is called by:
  6306 ;;		_main
  6307 ;; This function uses a non-reentrant model
  6308 ;;
  6309                           
  6310                           	psect	text22
  6311  0042F6                     __ptext22:
  6312                           	opt stack 0
  6313  0042F6                     _TC74_init:
  6314                           	opt stack 22
  6315                           
  6316                           ;main.c: 961: OpenI2C(0b00001000, 0b00000000);
  6317                           
  6318                           ; BSR set to: 2
  6319                           ;incstack = 0
  6320  0042F6  0E00               	movlw	0
  6321  0042F8  0102               	movlb	2	; () banked
  6322  0042FA  6F3C               	movwf	OpenI2C@slew& (0+255),b
  6323  0042FC  0E08               	movlw	8
  6324  0042FE  ECC7  F020         	call	_OpenI2C
  6325                           
  6326                           ;main.c: 962: SSPADD = 9;
  6327  004302  0E09               	movlw	9
  6328  004304  6EC8               	movwf	4040,c	;volatile
  6329  004306  0012               	return		;funcret
  6330  004308                     __end_of_TC74_init:
  6331                           	opt stack 0
  6332                           tosu	equ	0xFFF
  6333                           tosh	equ	0xFFE
  6334                           tosl	equ	0xFFD
  6335                           pclath	equ	0xFFA
  6336                           tblptru	equ	0xFF8
  6337                           tblptrh	equ	0xFF7
  6338                           tblptrl	equ	0xFF6
  6339                           tablat	equ	0xFF5
  6340                           prodh	equ	0xFF4
  6341                           prodl	equ	0xFF3
  6342                           intcon	equ	0xFF2
  6343                           indf0	equ	0xFEF
  6344                           postinc0	equ	0xFEE
  6345                           fsr0h	equ	0xFEA
  6346                           fsr0l	equ	0xFE9
  6347                           wreg	equ	0xFE8
  6348                           postdec1	equ	0xFE5
  6349                           fsr1l	equ	0xFE1
  6350                           indf2	equ	0xFDF
  6351                           postinc2	equ	0xFDE
  6352                           postdec2	equ	0xFDD
  6353                           fsr2h	equ	0xFDA
  6354                           fsr2l	equ	0xFD9
  6355                           status	equ	0xFD8
  6356                           
  6357 ;; *************** function _OpenI2C *****************
  6358 ;; Defined at:
  6359 ;;		line 12 in file "I2C/i2c.c"
  6360 ;; Parameters:    Size  Location     Type
  6361 ;;  sync_mode       1    wreg     unsigned char 
  6362 ;;  slew            1    0[BANK2 ] unsigned char 
  6363 ;; Auto vars:     Size  Location     Type
  6364 ;;  sync_mode       1    1[BANK2 ] unsigned char 
  6365 ;; Return value:  Size  Location     Type
  6366 ;;                  1    wreg      void 
  6367 ;; Registers used:
  6368 ;;		wreg, status,2, status,0
  6369 ;; Tracked objects:
  6370 ;;		On entry : 0/0
  6371 ;;		On exit  : 0/0
  6372 ;;		Unchanged: 0/0
  6373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6374 ;;      Params:         0       0       0       1       0       0       0
  6375 ;;      Locals:         0       0       0       1       0       0       0
  6376 ;;      Temps:          0       0       0       0       0       0       0
  6377 ;;      Totals:         0       0       0       2       0       0       0
  6378 ;;Total ram usage:        2 bytes
  6379 ;; Hardware stack levels used:    1
  6380 ;; Hardware stack levels required when called:    7
  6381 ;; This function calls:
  6382 ;;		Nothing
  6383 ;; This function is called by:
  6384 ;;		_TC74_init
  6385 ;; This function uses a non-reentrant model
  6386 ;;
  6387                           
  6388                           	psect	text23
  6389  00418E                     __ptext23:
  6390                           	opt stack 0
  6391  00418E                     _OpenI2C:
  6392                           	opt stack 22
  6393                           
  6394                           ;incstack = 0
  6395                           ;OpenI2C@sync_mode stored from wreg
  6396  00418E  0102               	movlb	2	; () banked
  6397  004190  6F3D               	movwf	OpenI2C@sync_mode& (0+255),b
  6398                           
  6399                           ;i2c.c: 14: SSPSTAT &= 0x3F;
  6400  004192  0E3F               	movlw	63
  6401  004194  16C7               	andwf	4039,f,c	;volatile
  6402                           
  6403                           ;i2c.c: 15: SSPCON1 = 0x00;
  6404  004196  0E00               	movlw	0
  6405  004198  6EC6               	movwf	4038,c	;volatile
  6406                           
  6407                           ;i2c.c: 16: SSPCON2 = 0x00;
  6408  00419A  0E00               	movlw	0
  6409  00419C  6EC5               	movwf	4037,c	;volatile
  6410                           
  6411                           ;i2c.c: 17: SSPCON1 |= sync_mode;
  6412  00419E  0102               	movlb	2	; () banked
  6413  0041A0  513D               	movf	OpenI2C@sync_mode& (0+255),w,b
  6414  0041A2  12C6               	iorwf	4038,f,c	;volatile
  6415                           
  6416                           ;i2c.c: 18: SSPSTAT |= slew;
  6417  0041A4  0102               	movlb	2	; () banked
  6418  0041A6  513C               	movf	OpenI2C@slew& (0+255),w,b
  6419  0041A8  12C7               	iorwf	4039,f,c	;volatile
  6420                           
  6421                           ; BSR set to: 2
  6422                           ;i2c.c: 20: TRISCbits.TRISC3 = 1;
  6423  0041AA  8694               	bsf	3988,3,c	;volatile
  6424                           
  6425                           ; BSR set to: 2
  6426                           ;i2c.c: 21: TRISCbits.TRISC4 = 1;
  6427  0041AC  8894               	bsf	3988,4,c	;volatile
  6428                           
  6429                           ; BSR set to: 2
  6430                           ;i2c.c: 22: SSPCON1 |= 0b00100000;
  6431  0041AE  8AC6               	bsf	4038,5,c	;volatile
  6432                           
  6433                           ; BSR set to: 2
  6434  0041B0  0012               	return		;funcret
  6435  0041B2                     __end_of_OpenI2C:
  6436                           	opt stack 0
  6437                           tosu	equ	0xFFF
  6438                           tosh	equ	0xFFE
  6439                           tosl	equ	0xFFD
  6440                           pclath	equ	0xFFA
  6441                           tblptru	equ	0xFF8
  6442                           tblptrh	equ	0xFF7
  6443                           tblptrl	equ	0xFF6
  6444                           tablat	equ	0xFF5
  6445                           prodh	equ	0xFF4
  6446                           prodl	equ	0xFF3
  6447                           intcon	equ	0xFF2
  6448                           indf0	equ	0xFEF
  6449                           postinc0	equ	0xFEE
  6450                           fsr0h	equ	0xFEA
  6451                           fsr0l	equ	0xFE9
  6452                           wreg	equ	0xFE8
  6453                           postdec1	equ	0xFE5
  6454                           fsr1l	equ	0xFE1
  6455                           indf2	equ	0xFDF
  6456                           postinc2	equ	0xFDE
  6457                           postdec2	equ	0xFDD
  6458                           fsr2h	equ	0xFDA
  6459                           fsr2l	equ	0xFD9
  6460                           status	equ	0xFD8
  6461                           
  6462 ;; *************** function _RBO_init *****************
  6463 ;; Defined at:
  6464 ;;		line 904 in file "main.c"
  6465 ;; Parameters:    Size  Location     Type
  6466 ;;		None
  6467 ;; Auto vars:     Size  Location     Type
  6468 ;;		None
  6469 ;; Return value:  Size  Location     Type
  6470 ;;                  1    wreg      void 
  6471 ;; Registers used:
  6472 ;;		None
  6473 ;; Tracked objects:
  6474 ;;		On entry : 0/0
  6475 ;;		On exit  : 0/0
  6476 ;;		Unchanged: 0/0
  6477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6478 ;;      Params:         0       0       0       0       0       0       0
  6479 ;;      Locals:         0       0       0       0       0       0       0
  6480 ;;      Temps:          0       0       0       0       0       0       0
  6481 ;;      Totals:         0       0       0       0       0       0       0
  6482 ;;Total ram usage:        0 bytes
  6483 ;; Hardware stack levels used:    1
  6484 ;; Hardware stack levels required when called:    7
  6485 ;; This function calls:
  6486 ;;		Nothing
  6487 ;; This function is called by:
  6488 ;;		_main
  6489 ;; This function uses a non-reentrant model
  6490 ;;
  6491                           
  6492                           	psect	text24
  6493  004336                     __ptext24:
  6494                           	opt stack 0
  6495  004336                     _RBO_init:
  6496                           	opt stack 23
  6497                           
  6498                           ;main.c: 905: INTCONbits.INT0IF=0;
  6499                           
  6500                           ; BSR set to: 2
  6501                           ;incstack = 0
  6502  004336  92F2               	bcf	intcon,1,c	;volatile
  6503                           
  6504                           ;main.c: 906: INTCON2bits.INTEDG0=0;
  6505  004338  9CF1               	bcf	intcon2,6,c	;volatile
  6506                           
  6507                           ;main.c: 907: INTCON2bits.RBPU=0;
  6508  00433A  9EF1               	bcf	intcon2,7,c	;volatile
  6509                           
  6510                           ;main.c: 908: TRISBbits.TRISB0=1;
  6511  00433C  8093               	bsf	3987,0,c	;volatile
  6512                           
  6513                           ;main.c: 909: INTCONbits.INT0IE=1;
  6514  00433E  88F2               	bsf	intcon,4,c	;volatile
  6515  004340  0012               	return		;funcret
  6516  004342                     __end_of_RBO_init:
  6517                           	opt stack 0
  6518                           tosu	equ	0xFFF
  6519                           tosh	equ	0xFFE
  6520                           tosl	equ	0xFFD
  6521                           pclath	equ	0xFFA
  6522                           tblptru	equ	0xFF8
  6523                           tblptrh	equ	0xFF7
  6524                           tblptrl	equ	0xFF6
  6525                           tablat	equ	0xFF5
  6526                           prodh	equ	0xFF4
  6527                           prodl	equ	0xFF3
  6528                           intcon	equ	0xFF2
  6529                           intcon2	equ	0xFF1
  6530                           indf0	equ	0xFEF
  6531                           postinc0	equ	0xFEE
  6532                           fsr0h	equ	0xFEA
  6533                           fsr0l	equ	0xFE9
  6534                           wreg	equ	0xFE8
  6535                           postdec1	equ	0xFE5
  6536                           fsr1l	equ	0xFE1
  6537                           indf2	equ	0xFDF
  6538                           postinc2	equ	0xFDE
  6539                           postdec2	equ	0xFDD
  6540                           fsr2h	equ	0xFDA
  6541                           fsr2l	equ	0xFD9
  6542                           status	equ	0xFD8
  6543                           
  6544 ;; *************** function _RA4_init *****************
  6545 ;; Defined at:
  6546 ;;		line 912 in file "main.c"
  6547 ;; Parameters:    Size  Location     Type
  6548 ;;		None
  6549 ;; Auto vars:     Size  Location     Type
  6550 ;;		None
  6551 ;; Return value:  Size  Location     Type
  6552 ;;                  1    wreg      void 
  6553 ;; Registers used:
  6554 ;;		None
  6555 ;; Tracked objects:
  6556 ;;		On entry : 0/0
  6557 ;;		On exit  : 0/0
  6558 ;;		Unchanged: 0/0
  6559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6560 ;;      Params:         0       0       0       0       0       0       0
  6561 ;;      Locals:         0       0       0       0       0       0       0
  6562 ;;      Temps:          0       0       0       0       0       0       0
  6563 ;;      Totals:         0       0       0       0       0       0       0
  6564 ;;Total ram usage:        0 bytes
  6565 ;; Hardware stack levels used:    1
  6566 ;; Hardware stack levels required when called:    7
  6567 ;; This function calls:
  6568 ;;		Nothing
  6569 ;; This function is called by:
  6570 ;;		_main
  6571 ;; This function uses a non-reentrant model
  6572 ;;
  6573                           
  6574                           	psect	text25
  6575  004380                     __ptext25:
  6576                           	opt stack 0
  6577  004380                     _RA4_init:
  6578                           	opt stack 23
  6579                           
  6580                           ;main.c: 914: TRISAbits.TRISA4=1;
  6581                           
  6582                           ;incstack = 0
  6583  004380  8892               	bsf	3986,4,c	;volatile
  6584  004382  0012               	return		;funcret
  6585  004384                     __end_of_RA4_init:
  6586                           	opt stack 0
  6587                           tosu	equ	0xFFF
  6588                           tosh	equ	0xFFE
  6589                           tosl	equ	0xFFD
  6590                           pclath	equ	0xFFA
  6591                           tblptru	equ	0xFF8
  6592                           tblptrh	equ	0xFF7
  6593                           tblptrl	equ	0xFF6
  6594                           tablat	equ	0xFF5
  6595                           prodh	equ	0xFF4
  6596                           prodl	equ	0xFF3
  6597                           intcon	equ	0xFF2
  6598                           intcon2	equ	0xFF1
  6599                           indf0	equ	0xFEF
  6600                           postinc0	equ	0xFEE
  6601                           fsr0h	equ	0xFEA
  6602                           fsr0l	equ	0xFE9
  6603                           wreg	equ	0xFE8
  6604                           postdec1	equ	0xFE5
  6605                           fsr1l	equ	0xFE1
  6606                           indf2	equ	0xFDF
  6607                           postinc2	equ	0xFDE
  6608                           postdec2	equ	0xFDD
  6609                           fsr2h	equ	0xFDA
  6610                           fsr2l	equ	0xFD9
  6611                           status	equ	0xFD8
  6612                           
  6613 ;; *************** function _LCD_init *****************
  6614 ;; Defined at:
  6615 ;;		line 895 in file "main.c"
  6616 ;; Parameters:    Size  Location     Type
  6617 ;;		None
  6618 ;; Auto vars:     Size  Location     Type
  6619 ;;		None
  6620 ;; Return value:  Size  Location     Type
  6621 ;;                  1    wreg      void 
  6622 ;; Registers used:
  6623 ;;		wreg, status,2, status,0, cstack
  6624 ;; Tracked objects:
  6625 ;;		On entry : 0/0
  6626 ;;		On exit  : 0/0
  6627 ;;		Unchanged: 0/0
  6628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6629 ;;      Params:         0       0       0       0       0       0       0
  6630 ;;      Locals:         0       0       0       0       0       0       0
  6631 ;;      Temps:          0       0       0       0       0       0       0
  6632 ;;      Totals:         0       0       0       0       0       0       0
  6633 ;;Total ram usage:        0 bytes
  6634 ;; Hardware stack levels used:    1
  6635 ;; Hardware stack levels required when called:   11
  6636 ;; This function calls:
  6637 ;;		_OpenXLCD
  6638 ;; This function is called by:
  6639 ;;		_main
  6640 ;; This function uses a non-reentrant model
  6641 ;;
  6642                           
  6643                           	psect	text26
  6644  004318                     __ptext26:
  6645                           	opt stack 0
  6646  004318                     _LCD_init:
  6647                           	opt stack 19
  6648                           
  6649                           ;main.c: 897: ADCON1 = 0x0E;
  6650                           
  6651                           ;incstack = 0
  6652  004318  0E0E               	movlw	14
  6653  00431A  6EC1               	movwf	4033,c	;volatile
  6654                           
  6655                           ;main.c: 898: LATDbits.LATD7 = 1;
  6656  00431C  8E8C               	bsf	3980,7,c	;volatile
  6657                           
  6658                           ;main.c: 899: TRISDbits.TRISD7 = 0;
  6659  00431E  9E95               	bcf	3989,7,c	;volatile
  6660                           
  6661                           ;main.c: 900: OpenXLCD( 0b00101100 & 0b00111000);
  6662  004320  0E28               	movlw	40
  6663  004322  ECAA  F018         	call	_OpenXLCD
  6664  004326  0012               	return		;funcret
  6665  004328                     __end_of_LCD_init:
  6666                           	opt stack 0
  6667                           tosu	equ	0xFFF
  6668                           tosh	equ	0xFFE
  6669                           tosl	equ	0xFFD
  6670                           pclath	equ	0xFFA
  6671                           tblptru	equ	0xFF8
  6672                           tblptrh	equ	0xFF7
  6673                           tblptrl	equ	0xFF6
  6674                           tablat	equ	0xFF5
  6675                           prodh	equ	0xFF4
  6676                           prodl	equ	0xFF3
  6677                           intcon	equ	0xFF2
  6678                           intcon2	equ	0xFF1
  6679                           indf0	equ	0xFEF
  6680                           postinc0	equ	0xFEE
  6681                           fsr0h	equ	0xFEA
  6682                           fsr0l	equ	0xFE9
  6683                           wreg	equ	0xFE8
  6684                           postdec1	equ	0xFE5
  6685                           fsr1l	equ	0xFE1
  6686                           indf2	equ	0xFDF
  6687                           postinc2	equ	0xFDE
  6688                           postdec2	equ	0xFDD
  6689                           fsr2h	equ	0xFDA
  6690                           fsr2l	equ	0xFD9
  6691                           status	equ	0xFD8
  6692                           
  6693 ;; *************** function _OpenXLCD *****************
  6694 ;; Defined at:
  6695 ;;		line 21 in file "XLCD/openxlcd.c"
  6696 ;; Parameters:    Size  Location     Type
  6697 ;;  lcdtype         1    wreg     unsigned char 
  6698 ;; Auto vars:     Size  Location     Type
  6699 ;;  lcdtype         1   20[BANK2 ] unsigned char 
  6700 ;; Return value:  Size  Location     Type
  6701 ;;                  1    wreg      void 
  6702 ;; Registers used:
  6703 ;;		wreg, status,2, status,0, cstack
  6704 ;; Tracked objects:
  6705 ;;		On entry : 0/0
  6706 ;;		On exit  : 0/0
  6707 ;;		Unchanged: 0/0
  6708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6709 ;;      Params:         0       0       0       0       0       0       0
  6710 ;;      Locals:         0       0       0       1       0       0       0
  6711 ;;      Temps:          0       0       0       0       0       0       0
  6712 ;;      Totals:         0       0       0       1       0       0       0
  6713 ;;Total ram usage:        1 bytes
  6714 ;; Hardware stack levels used:    1
  6715 ;; Hardware stack levels required when called:   10
  6716 ;; This function calls:
  6717 ;;		_BusyXLCD
  6718 ;;		_DelayFor18TCY
  6719 ;;		_DelayPORXLCD
  6720 ;;		_DelayXLCD
  6721 ;;		_SetDDRamAddr
  6722 ;;		_WriteCmdXLCD
  6723 ;; This function is called by:
  6724 ;;		_LCD_init
  6725 ;; This function uses a non-reentrant model
  6726 ;;
  6727                           
  6728                           	psect	text27
  6729  003154                     __ptext27:
  6730                           	opt stack 0
  6731  003154                     _OpenXLCD:
  6732                           	opt stack 19
  6733                           
  6734                           ;incstack = 0
  6735                           ;OpenXLCD@lcdtype stored from wreg
  6736  003154  0102               	movlb	2	; () banked
  6737  003156  6F50               	movwf	OpenXLCD@lcdtype& (0+255),b
  6738                           
  6739                           ;openxlcd.c: 33: PORTD &= 0xf0;
  6740  003158  0EF0               	movlw	240
  6741  00315A  1683               	andwf	3971,f,c	;volatile
  6742                           
  6743                           ;openxlcd.c: 34: TRISD |= 0x0f;
  6744  00315C  0E0F               	movlw	15
  6745  00315E  1295               	iorwf	3989,f,c	;volatile
  6746                           
  6747                           ;openxlcd.c: 37: TRISDbits.TRISD5 = 0;
  6748  003160  9A95               	bcf	3989,5,c	;volatile
  6749                           
  6750                           ;openxlcd.c: 38: TRISDbits.TRISD4 = 0;
  6751  003162  9895               	bcf	3989,4,c	;volatile
  6752                           
  6753                           ;openxlcd.c: 39: TRISDbits.TRISD6 = 0;
  6754  003164  9C95               	bcf	3989,6,c	;volatile
  6755                           
  6756                           ;openxlcd.c: 40: LATDbits.LATD5 = 0;
  6757  003166  9A8C               	bcf	3980,5,c	;volatile
  6758                           
  6759                           ;openxlcd.c: 41: LATDbits.LATD4 = 0;
  6760  003168  988C               	bcf	3980,4,c	;volatile
  6761                           
  6762                           ;openxlcd.c: 42: LATDbits.LATD6 = 0;
  6763  00316A  9C8C               	bcf	3980,6,c	;volatile
  6764                           
  6765                           ;openxlcd.c: 45: DelayPORXLCD();
  6766  00316C  EC47  F021         	call	_DelayPORXLCD	;wreg free
  6767                           
  6768                           ;openxlcd.c: 57: TRISD &= 0xf0;
  6769  003170  0EF0               	movlw	240
  6770  003172  1695               	andwf	3989,f,c	;volatile
  6771                           
  6772                           ;openxlcd.c: 58: PORTD &= 0xf0;
  6773  003174  0EF0               	movlw	240
  6774  003176  1683               	andwf	3971,f,c	;volatile
  6775                           
  6776                           ;openxlcd.c: 60: PORTD |= 0b00000011;
  6777  003178  0E03               	movlw	3
  6778  00317A  1283               	iorwf	3971,f,c	;volatile
  6779                           
  6780                           ;openxlcd.c: 63: LATDbits.LATD6 = 1;
  6781  00317C  8C8C               	bsf	3980,6,c	;volatile
  6782                           
  6783                           ;openxlcd.c: 64: DelayFor18TCY();
  6784  00317E  EC15  F021         	call	_DelayFor18TCY	;wreg free
  6785                           
  6786                           ;openxlcd.c: 65: LATDbits.LATD6 = 0;
  6787  003182  9C8C               	bcf	3980,6,c	;volatile
  6788                           
  6789                           ;openxlcd.c: 68: DelayXLCD();
  6790  003184  EC3B  F021         	call	_DelayXLCD	;wreg free
  6791                           
  6792                           ;openxlcd.c: 78: PORTD &= 0xf0;
  6793  003188  0EF0               	movlw	240
  6794  00318A  1683               	andwf	3971,f,c	;volatile
  6795                           
  6796                           ;openxlcd.c: 80: PORTD |= 0b00000011;
  6797  00318C  0E03               	movlw	3
  6798  00318E  1283               	iorwf	3971,f,c	;volatile
  6799                           
  6800                           ;openxlcd.c: 83: LATDbits.LATD6 = 1;
  6801  003190  8C8C               	bsf	3980,6,c	;volatile
  6802                           
  6803                           ;openxlcd.c: 84: DelayFor18TCY();
  6804  003192  EC15  F021         	call	_DelayFor18TCY	;wreg free
  6805                           
  6806                           ;openxlcd.c: 85: LATDbits.LATD6 = 0;
  6807  003196  9C8C               	bcf	3980,6,c	;volatile
  6808                           
  6809                           ;openxlcd.c: 88: DelayXLCD();
  6810  003198  EC3B  F021         	call	_DelayXLCD	;wreg free
  6811                           
  6812                           ;openxlcd.c: 98: PORTD &= 0xf0;
  6813  00319C  0EF0               	movlw	240
  6814  00319E  1683               	andwf	3971,f,c	;volatile
  6815                           
  6816                           ;openxlcd.c: 100: PORTD |= 0b00000011;
  6817  0031A0  0E03               	movlw	3
  6818  0031A2  1283               	iorwf	3971,f,c	;volatile
  6819                           
  6820                           ;openxlcd.c: 103: LATDbits.LATD6 = 1;
  6821  0031A4  8C8C               	bsf	3980,6,c	;volatile
  6822                           
  6823                           ;openxlcd.c: 104: DelayFor18TCY();
  6824  0031A6  EC15  F021         	call	_DelayFor18TCY	;wreg free
  6825                           
  6826                           ;openxlcd.c: 105: LATDbits.LATD6 = 0;
  6827  0031AA  9C8C               	bcf	3980,6,c	;volatile
  6828                           
  6829                           ;openxlcd.c: 109: DelayXLCD();
  6830  0031AC  EC3B  F021         	call	_DelayXLCD	;wreg free
  6831                           
  6832                           ;openxlcd.c: 119: PORTD &= 0xf0;
  6833  0031B0  0EF0               	movlw	240
  6834  0031B2  1683               	andwf	3971,f,c	;volatile
  6835                           
  6836                           ;openxlcd.c: 120: PORTD |= 0b00000010;
  6837  0031B4  8283               	bsf	3971,1,c	;volatile
  6838                           
  6839                           ;openxlcd.c: 123: LATDbits.LATD6 = 1;
  6840  0031B6  8C8C               	bsf	3980,6,c	;volatile
  6841                           
  6842                           ;openxlcd.c: 124: DelayFor18TCY();
  6843  0031B8  EC15  F021         	call	_DelayFor18TCY	;wreg free
  6844                           
  6845                           ;openxlcd.c: 125: LATDbits.LATD6 = 0;
  6846  0031BC  9C8C               	bcf	3980,6,c	;volatile
  6847                           
  6848                           ;openxlcd.c: 134: TRISD |= 0x0f;
  6849  0031BE  0E0F               	movlw	15
  6850  0031C0  1295               	iorwf	3989,f,c	;volatile
  6851  0031C2                     l5260:
  6852  0031C2  EC8A  F01F         	call	_BusyXLCD	;wreg free
  6853  0031C6  0900               	iorlw	0
  6854  0031C8  A4D8               	btfss	status,2,c
  6855  0031CA  D7FB               	goto	l5260
  6856                           
  6857                           ;openxlcd.c: 140: WriteCmdXLCD(lcdtype);
  6858  0031CC  0102               	movlb	2	; () banked
  6859  0031CE  5150               	movf	OpenXLCD@lcdtype& (0+255),w,b
  6860  0031D0  ECEA  F01E         	call	_WriteCmdXLCD
  6861  0031D4                     l5264:
  6862  0031D4  EC8A  F01F         	call	_BusyXLCD	;wreg free
  6863  0031D8  0900               	iorlw	0
  6864  0031DA  A4D8               	btfss	status,2,c
  6865  0031DC  D7FB               	goto	l5264
  6866                           
  6867                           ;openxlcd.c: 145: WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  6868  0031DE  0E08               	movlw	8
  6869  0031E0  ECEA  F01E         	call	_WriteCmdXLCD
  6870  0031E4                     l5268:
  6871  0031E4  EC8A  F01F         	call	_BusyXLCD	;wreg free
  6872  0031E8  0900               	iorlw	0
  6873  0031EA  A4D8               	btfss	status,2,c
  6874  0031EC  D7FB               	goto	l5268
  6875                           
  6876                           ;openxlcd.c: 147: WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  6877  0031EE  0E0F               	movlw	15
  6878  0031F0  ECEA  F01E         	call	_WriteCmdXLCD
  6879  0031F4                     l5272:
  6880  0031F4  EC8A  F01F         	call	_BusyXLCD	;wreg free
  6881  0031F8  0900               	iorlw	0
  6882  0031FA  A4D8               	btfss	status,2,c
  6883  0031FC  D7FB               	goto	l5272
  6884                           
  6885                           ;openxlcd.c: 151: WriteCmdXLCD(0x01);
  6886  0031FE  0E01               	movlw	1
  6887  003200  ECEA  F01E         	call	_WriteCmdXLCD
  6888  003204                     l5276:
  6889  003204  EC8A  F01F         	call	_BusyXLCD	;wreg free
  6890  003208  0900               	iorlw	0
  6891  00320A  A4D8               	btfss	status,2,c
  6892  00320C  D7FB               	goto	l5276
  6893                           
  6894                           ;openxlcd.c: 156: WriteCmdXLCD(0x06);
  6895  00320E  0E06               	movlw	6
  6896  003210  ECEA  F01E         	call	_WriteCmdXLCD
  6897  003214                     l5280:
  6898  003214  EC8A  F01F         	call	_BusyXLCD	;wreg free
  6899  003218  0900               	iorlw	0
  6900  00321A  A4D8               	btfss	status,2,c
  6901  00321C  D7FB               	goto	l5280
  6902                           
  6903                           ;openxlcd.c: 160: SetDDRamAddr(0);
  6904  00321E  0E00               	movlw	0
  6905  003220  EC88  F01D         	call	_SetDDRamAddr
  6906  003224  0012               	return	
  6907  003226                     __end_of_OpenXLCD:
  6908                           	opt stack 0
  6909                           tosu	equ	0xFFF
  6910                           tosh	equ	0xFFE
  6911                           tosl	equ	0xFFD
  6912                           pclath	equ	0xFFA
  6913                           tblptru	equ	0xFF8
  6914                           tblptrh	equ	0xFF7
  6915                           tblptrl	equ	0xFF6
  6916                           tablat	equ	0xFF5
  6917                           prodh	equ	0xFF4
  6918                           prodl	equ	0xFF3
  6919                           intcon	equ	0xFF2
  6920                           intcon2	equ	0xFF1
  6921                           indf0	equ	0xFEF
  6922                           postinc0	equ	0xFEE
  6923                           fsr0h	equ	0xFEA
  6924                           fsr0l	equ	0xFE9
  6925                           wreg	equ	0xFE8
  6926                           postdec1	equ	0xFE5
  6927                           fsr1l	equ	0xFE1
  6928                           indf2	equ	0xFDF
  6929                           postinc2	equ	0xFDE
  6930                           postdec2	equ	0xFDD
  6931                           fsr2h	equ	0xFDA
  6932                           fsr2l	equ	0xFD9
  6933                           status	equ	0xFD8
  6934                           
  6935 ;; *************** function _WriteCmdXLCD *****************
  6936 ;; Defined at:
  6937 ;;		line 15 in file "XLCD/wcmdxlcd.c"
  6938 ;; Parameters:    Size  Location     Type
  6939 ;;  cmd             1    wreg     unsigned char 
  6940 ;; Auto vars:     Size  Location     Type
  6941 ;;  cmd             1    0[BANK2 ] unsigned char 
  6942 ;; Return value:  Size  Location     Type
  6943 ;;                  1    wreg      void 
  6944 ;; Registers used:
  6945 ;;		wreg, status,2, status,0, cstack
  6946 ;; Tracked objects:
  6947 ;;		On entry : 0/0
  6948 ;;		On exit  : 0/0
  6949 ;;		Unchanged: 0/0
  6950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6951 ;;      Params:         0       0       0       0       0       0       0
  6952 ;;      Locals:         0       0       0       1       0       0       0
  6953 ;;      Temps:          0       0       0       0       0       0       0
  6954 ;;      Totals:         0       0       0       1       0       0       0
  6955 ;;Total ram usage:        1 bytes
  6956 ;; Hardware stack levels used:    1
  6957 ;; Hardware stack levels required when called:    8
  6958 ;; This function calls:
  6959 ;;		_DelayFor18TCY
  6960 ;; This function is called by:
  6961 ;;		_OpenXLCD
  6962 ;;		_displayInterface
  6963 ;;		_main
  6964 ;; This function uses a non-reentrant model
  6965 ;;
  6966                           
  6967                           	psect	text28
  6968  003DD4                     __ptext28:
  6969                           	opt stack 0
  6970  003DD4                     _WriteCmdXLCD:
  6971                           	opt stack 21
  6972                           
  6973                           ;incstack = 0
  6974                           ;WriteCmdXLCD@cmd stored from wreg
  6975  003DD4  0102               	movlb	2	; () banked
  6976  003DD6  6F3C               	movwf	WriteCmdXLCD@cmd& (0+255),b
  6977                           
  6978                           ;wcmdxlcd.c: 34: TRISD &= 0xf0;
  6979  003DD8  0EF0               	movlw	240
  6980  003DDA  1695               	andwf	3989,f,c	;volatile
  6981                           
  6982                           ;wcmdxlcd.c: 35: PORTD &= 0xf0;
  6983  003DDC  0EF0               	movlw	240
  6984  003DDE  1683               	andwf	3971,f,c	;volatile
  6985                           
  6986                           ;wcmdxlcd.c: 36: PORTD |= (cmd>>4)&0x0f;
  6987  003DE0  0102               	movlb	2	; () banked
  6988  003DE2  393C               	swapf	WriteCmdXLCD@cmd& (0+255),w,b
  6989  003DE4  0B0F               	andlw	15
  6990  003DE6  0B0F               	andlw	15
  6991  003DE8  1283               	iorwf	3971,f,c	;volatile
  6992                           
  6993                           ; BSR set to: 2
  6994                           ;wcmdxlcd.c: 38: LATDbits.LATD5 = 0;
  6995  003DEA  9A8C               	bcf	3980,5,c	;volatile
  6996                           
  6997                           ; BSR set to: 2
  6998                           ;wcmdxlcd.c: 39: LATDbits.LATD4 = 0;
  6999  003DEC  988C               	bcf	3980,4,c	;volatile
  7000                           
  7001                           ; BSR set to: 2
  7002                           ;wcmdxlcd.c: 40: DelayFor18TCY();
  7003  003DEE  EC15  F021         	call	_DelayFor18TCY	;wreg free
  7004                           
  7005                           ;wcmdxlcd.c: 41: LATDbits.LATD6 = 1;
  7006  003DF2  8C8C               	bsf	3980,6,c	;volatile
  7007                           
  7008                           ;wcmdxlcd.c: 42: DelayFor18TCY();
  7009  003DF4  EC15  F021         	call	_DelayFor18TCY	;wreg free
  7010                           
  7011                           ;wcmdxlcd.c: 43: LATDbits.LATD6 = 0;
  7012  003DF8  9C8C               	bcf	3980,6,c	;volatile
  7013                           
  7014                           ;wcmdxlcd.c: 48: PORTD &= 0xf0;
  7015  003DFA  0EF0               	movlw	240
  7016  003DFC  1683               	andwf	3971,f,c	;volatile
  7017                           
  7018                           ;wcmdxlcd.c: 49: PORTD |= cmd&0x0f;
  7019  003DFE  0102               	movlb	2	; () banked
  7020  003E00  513C               	movf	WriteCmdXLCD@cmd& (0+255),w,b
  7021  003E02  0B0F               	andlw	15
  7022  003E04  1283               	iorwf	3971,f,c	;volatile
  7023                           
  7024                           ; BSR set to: 2
  7025                           ;wcmdxlcd.c: 51: DelayFor18TCY();
  7026  003E06  EC15  F021         	call	_DelayFor18TCY	;wreg free
  7027                           
  7028                           ;wcmdxlcd.c: 52: LATDbits.LATD6 = 1;
  7029  003E0A  8C8C               	bsf	3980,6,c	;volatile
  7030                           
  7031                           ;wcmdxlcd.c: 53: DelayFor18TCY();
  7032  003E0C  EC15  F021         	call	_DelayFor18TCY	;wreg free
  7033                           
  7034                           ;wcmdxlcd.c: 54: LATDbits.LATD6 = 0;
  7035  003E10  9C8C               	bcf	3980,6,c	;volatile
  7036                           
  7037                           ;wcmdxlcd.c: 58: TRISD |= 0x0f;
  7038  003E12  0E0F               	movlw	15
  7039  003E14  1295               	iorwf	3989,f,c	;volatile
  7040  003E16  0012               	return	
  7041  003E18                     __end_of_WriteCmdXLCD:
  7042                           	opt stack 0
  7043                           tosu	equ	0xFFF
  7044                           tosh	equ	0xFFE
  7045                           tosl	equ	0xFFD
  7046                           pclath	equ	0xFFA
  7047                           tblptru	equ	0xFF8
  7048                           tblptrh	equ	0xFF7
  7049                           tblptrl	equ	0xFF6
  7050                           tablat	equ	0xFF5
  7051                           prodh	equ	0xFF4
  7052                           prodl	equ	0xFF3
  7053                           intcon	equ	0xFF2
  7054                           intcon2	equ	0xFF1
  7055                           indf0	equ	0xFEF
  7056                           postinc0	equ	0xFEE
  7057                           fsr0h	equ	0xFEA
  7058                           fsr0l	equ	0xFE9
  7059                           wreg	equ	0xFE8
  7060                           postdec1	equ	0xFE5
  7061                           fsr1l	equ	0xFE1
  7062                           indf2	equ	0xFDF
  7063                           postinc2	equ	0xFDE
  7064                           postdec2	equ	0xFDD
  7065                           fsr2h	equ	0xFDA
  7066                           fsr2l	equ	0xFD9
  7067                           status	equ	0xFD8
  7068                           
  7069 ;; *************** function _SetDDRamAddr *****************
  7070 ;; Defined at:
  7071 ;;		line 15 in file "XLCD/setddram.c"
  7072 ;; Parameters:    Size  Location     Type
  7073 ;;  DDaddr          1    wreg     unsigned char 
  7074 ;; Auto vars:     Size  Location     Type
  7075 ;;  DDaddr          1    3[BANK2 ] unsigned char 
  7076 ;; Return value:  Size  Location     Type
  7077 ;;                  1    wreg      void 
  7078 ;; Registers used:
  7079 ;;		wreg, status,2, status,0, cstack
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/0
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7085 ;;      Params:         0       0       0       0       0       0       0
  7086 ;;      Locals:         0       0       0       1       0       0       0
  7087 ;;      Temps:          0       0       0       3       0       0       0
  7088 ;;      Totals:         0       0       0       4       0       0       0
  7089 ;;Total ram usage:        4 bytes
  7090 ;; Hardware stack levels used:    1
  7091 ;; Hardware stack levels required when called:    8
  7092 ;; This function calls:
  7093 ;;		_DelayFor18TCY
  7094 ;; This function is called by:
  7095 ;;		_OpenXLCD
  7096 ;;		_displayInterface
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           	psect	text29
  7101  003B10                     __ptext29:
  7102                           	opt stack 0
  7103  003B10                     _SetDDRamAddr:
  7104                           	opt stack 21
  7105                           
  7106                           ;incstack = 0
  7107                           ;SetDDRamAddr@DDaddr stored from wreg
  7108  003B10  0102               	movlb	2	; () banked
  7109  003B12  6F3F               	movwf	SetDDRamAddr@DDaddr& (0+255),b
  7110                           
  7111                           ;setddram.c: 34: TRISD &= 0xf0;
  7112  003B14  0EF0               	movlw	240
  7113  003B16  1695               	andwf	3989,f,c	;volatile
  7114                           
  7115                           ;setddram.c: 35: PORTD &= 0xf0;
  7116  003B18  0EF0               	movlw	240
  7117  003B1A  1683               	andwf	3971,f,c	;volatile
  7118                           
  7119                           ;setddram.c: 36: PORTD |= (((DDaddr | 0b10000000)>>4) & 0x0f);
  7120  003B1C  0102               	movlb	2	; () banked
  7121  003B1E  513F               	movf	SetDDRamAddr@DDaddr& (0+255),w,b
  7122  003B20  0102               	movlb	2	; () banked
  7123  003B22  6F3C               	movwf	??_SetDDRamAddr& (0+255),b
  7124  003B24  6B3D               	clrf	(??_SetDDRamAddr+1)& (0+255),b
  7125  003B26  0102               	movlb	2	; () banked
  7126  003B28  8F3C               	bsf	??_SetDDRamAddr& (0+255),7,b
  7127  003B2A  0E04               	movlw	4
  7128  003B2C  0102               	movlb	2	; () banked
  7129  003B2E  6F3E               	movwf	(??_SetDDRamAddr+2)& (0+255),b
  7130  003B30                     u5135:
  7131  003B30  0102               	movlb	2	; () banked
  7132  003B32  353D               	rlcf	(??_SetDDRamAddr+1)& (0+255),w,b
  7133  003B34  333D               	rrcf	(??_SetDDRamAddr+1)& (0+255),f,b
  7134  003B36  333C               	rrcf	??_SetDDRamAddr& (0+255),f,b
  7135  003B38  0102               	movlb	2	; () banked
  7136  003B3A  2F3E               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,b
  7137  003B3C  D7F9               	goto	u5135
  7138  003B3E  0102               	movlb	2	; () banked
  7139  003B40  513C               	movf	??_SetDDRamAddr& (0+255),w,b
  7140  003B42  0B0F               	andlw	15
  7141  003B44  1283               	iorwf	3971,f,c	;volatile
  7142                           
  7143                           ; BSR set to: 2
  7144                           ;setddram.c: 38: LATDbits.LATD5 = 0;
  7145  003B46  9A8C               	bcf	3980,5,c	;volatile
  7146                           
  7147                           ; BSR set to: 2
  7148                           ;setddram.c: 39: LATDbits.LATD4 = 0;
  7149  003B48  988C               	bcf	3980,4,c	;volatile
  7150                           
  7151                           ; BSR set to: 2
  7152                           ;setddram.c: 40: DelayFor18TCY();
  7153  003B4A  EC15  F021         	call	_DelayFor18TCY	;wreg free
  7154                           
  7155                           ;setddram.c: 41: LATDbits.LATD6 = 1;
  7156  003B4E  8C8C               	bsf	3980,6,c	;volatile
  7157                           
  7158                           ;setddram.c: 42: DelayFor18TCY();
  7159  003B50  EC15  F021         	call	_DelayFor18TCY	;wreg free
  7160                           
  7161                           ;setddram.c: 43: LATDbits.LATD6 = 0;
  7162  003B54  9C8C               	bcf	3980,6,c	;volatile
  7163                           
  7164                           ;setddram.c: 48: PORTD &= 0xf0;
  7165  003B56  0EF0               	movlw	240
  7166  003B58  1683               	andwf	3971,f,c	;volatile
  7167                           
  7168                           ;setddram.c: 49: PORTD |= (DDaddr&0x0f);
  7169  003B5A  0102               	movlb	2	; () banked
  7170  003B5C  513F               	movf	SetDDRamAddr@DDaddr& (0+255),w,b
  7171  003B5E  0B0F               	andlw	15
  7172  003B60  1283               	iorwf	3971,f,c	;volatile
  7173                           
  7174                           ; BSR set to: 2
  7175                           ;setddram.c: 51: DelayFor18TCY();
  7176  003B62  EC15  F021         	call	_DelayFor18TCY	;wreg free
  7177                           
  7178                           ;setddram.c: 52: LATDbits.LATD6 = 1;
  7179  003B66  8C8C               	bsf	3980,6,c	;volatile
  7180                           
  7181                           ;setddram.c: 53: DelayFor18TCY();
  7182  003B68  EC15  F021         	call	_DelayFor18TCY	;wreg free
  7183                           
  7184                           ;setddram.c: 54: LATDbits.LATD6 = 0;
  7185  003B6C  9C8C               	bcf	3980,6,c	;volatile
  7186                           
  7187                           ;setddram.c: 58: TRISD |= 0x0f;
  7188  003B6E  0E0F               	movlw	15
  7189  003B70  1295               	iorwf	3989,f,c	;volatile
  7190  003B72  0012               	return	
  7191  003B74                     __end_of_SetDDRamAddr:
  7192                           	opt stack 0
  7193                           tosu	equ	0xFFF
  7194                           tosh	equ	0xFFE
  7195                           tosl	equ	0xFFD
  7196                           pclath	equ	0xFFA
  7197                           tblptru	equ	0xFF8
  7198                           tblptrh	equ	0xFF7
  7199                           tblptrl	equ	0xFF6
  7200                           tablat	equ	0xFF5
  7201                           prodh	equ	0xFF4
  7202                           prodl	equ	0xFF3
  7203                           intcon	equ	0xFF2
  7204                           intcon2	equ	0xFF1
  7205                           indf0	equ	0xFEF
  7206                           postinc0	equ	0xFEE
  7207                           fsr0h	equ	0xFEA
  7208                           fsr0l	equ	0xFE9
  7209                           wreg	equ	0xFE8
  7210                           postdec1	equ	0xFE5
  7211                           fsr1l	equ	0xFE1
  7212                           indf2	equ	0xFDF
  7213                           postinc2	equ	0xFDE
  7214                           postdec2	equ	0xFDD
  7215                           fsr2h	equ	0xFDA
  7216                           fsr2l	equ	0xFD9
  7217                           status	equ	0xFD8
  7218                           
  7219 ;; *************** function _DelayXLCD *****************
  7220 ;; Defined at:
  7221 ;;		line 158 in file "main.c"
  7222 ;; Parameters:    Size  Location     Type
  7223 ;;		None
  7224 ;; Auto vars:     Size  Location     Type
  7225 ;;		None
  7226 ;; Return value:  Size  Location     Type
  7227 ;;                  1    wreg      void 
  7228 ;; Registers used:
  7229 ;;		wreg, status,2, status,0, cstack
  7230 ;; Tracked objects:
  7231 ;;		On entry : 0/0
  7232 ;;		On exit  : 0/0
  7233 ;;		Unchanged: 0/0
  7234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7235 ;;      Params:         0       0       0       0       0       0       0
  7236 ;;      Locals:         0       0       0       0       0       0       0
  7237 ;;      Temps:          0       0       0       0       0       0       0
  7238 ;;      Totals:         0       0       0       0       0       0       0
  7239 ;;Total ram usage:        0 bytes
  7240 ;; Hardware stack levels used:    1
  7241 ;; Hardware stack levels required when called:    9
  7242 ;; This function calls:
  7243 ;;		_Delay1KTCYx
  7244 ;; This function is called by:
  7245 ;;		_OpenXLCD
  7246 ;; This function uses a non-reentrant model
  7247 ;;
  7248                           
  7249                           	psect	text30
  7250  004276                     __ptext30:
  7251                           	opt stack 0
  7252  004276                     _DelayXLCD:
  7253                           	opt stack 19
  7254                           
  7255                           ;main.c: 160: Delay1KTCYx(20);
  7256                           
  7257                           ;incstack = 0
  7258  004276  0E14               	movlw	20
  7259  004278  0102               	movlb	2	; () banked
  7260  00427A  6F48               	movwf	Delay1KTCYx@n& (0+255),b
  7261  00427C  0E00               	movlw	0
  7262  00427E  6F49               	movwf	(Delay1KTCYx@n+1)& (0+255),b
  7263  004280  0E00               	movlw	0
  7264  004282  6F4A               	movwf	(Delay1KTCYx@n+2)& (0+255),b
  7265  004284  0E00               	movlw	0
  7266  004286  6F4B               	movwf	(Delay1KTCYx@n+3)& (0+255),b
  7267  004288  EC4A  F01E         	call	_Delay1KTCYx	;wreg free
  7268  00428C  0012               	return	
  7269  00428E                     __end_of_DelayXLCD:
  7270                           	opt stack 0
  7271                           tosu	equ	0xFFF
  7272                           tosh	equ	0xFFE
  7273                           tosl	equ	0xFFD
  7274                           pclath	equ	0xFFA
  7275                           tblptru	equ	0xFF8
  7276                           tblptrh	equ	0xFF7
  7277                           tblptrl	equ	0xFF6
  7278                           tablat	equ	0xFF5
  7279                           prodh	equ	0xFF4
  7280                           prodl	equ	0xFF3
  7281                           intcon	equ	0xFF2
  7282                           intcon2	equ	0xFF1
  7283                           indf0	equ	0xFEF
  7284                           postinc0	equ	0xFEE
  7285                           fsr0h	equ	0xFEA
  7286                           fsr0l	equ	0xFE9
  7287                           wreg	equ	0xFE8
  7288                           postdec1	equ	0xFE5
  7289                           fsr1l	equ	0xFE1
  7290                           indf2	equ	0xFDF
  7291                           postinc2	equ	0xFDE
  7292                           postdec2	equ	0xFDD
  7293                           fsr2h	equ	0xFDA
  7294                           fsr2l	equ	0xFD9
  7295                           status	equ	0xFD8
  7296                           
  7297 ;; *************** function _DelayPORXLCD *****************
  7298 ;; Defined at:
  7299 ;;		line 152 in file "main.c"
  7300 ;; Parameters:    Size  Location     Type
  7301 ;;		None
  7302 ;; Auto vars:     Size  Location     Type
  7303 ;;		None
  7304 ;; Return value:  Size  Location     Type
  7305 ;;                  1    wreg      void 
  7306 ;; Registers used:
  7307 ;;		wreg, status,2, status,0, cstack
  7308 ;; Tracked objects:
  7309 ;;		On entry : 0/0
  7310 ;;		On exit  : 0/0
  7311 ;;		Unchanged: 0/0
  7312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7313 ;;      Params:         0       0       0       0       0       0       0
  7314 ;;      Locals:         0       0       0       0       0       0       0
  7315 ;;      Temps:          0       0       0       0       0       0       0
  7316 ;;      Totals:         0       0       0       0       0       0       0
  7317 ;;Total ram usage:        0 bytes
  7318 ;; Hardware stack levels used:    1
  7319 ;; Hardware stack levels required when called:    9
  7320 ;; This function calls:
  7321 ;;		_Delay1KTCYx
  7322 ;; This function is called by:
  7323 ;;		_OpenXLCD
  7324 ;; This function uses a non-reentrant model
  7325 ;;
  7326                           
  7327                           	psect	text31
  7328  00428E                     __ptext31:
  7329                           	opt stack 0
  7330  00428E                     _DelayPORXLCD:
  7331                           	opt stack 19
  7332                           
  7333                           ;main.c: 154: Delay1KTCYx(60);
  7334                           
  7335                           ;incstack = 0
  7336  00428E  0E3C               	movlw	60
  7337  004290  0102               	movlb	2	; () banked
  7338  004292  6F48               	movwf	Delay1KTCYx@n& (0+255),b
  7339  004294  0E00               	movlw	0
  7340  004296  6F49               	movwf	(Delay1KTCYx@n+1)& (0+255),b
  7341  004298  0E00               	movlw	0
  7342  00429A  6F4A               	movwf	(Delay1KTCYx@n+2)& (0+255),b
  7343  00429C  0E00               	movlw	0
  7344  00429E  6F4B               	movwf	(Delay1KTCYx@n+3)& (0+255),b
  7345  0042A0  EC4A  F01E         	call	_Delay1KTCYx	;wreg free
  7346  0042A4  0012               	return	
  7347  0042A6                     __end_of_DelayPORXLCD:
  7348                           	opt stack 0
  7349                           tosu	equ	0xFFF
  7350                           tosh	equ	0xFFE
  7351                           tosl	equ	0xFFD
  7352                           pclath	equ	0xFFA
  7353                           tblptru	equ	0xFF8
  7354                           tblptrh	equ	0xFF7
  7355                           tblptrl	equ	0xFF6
  7356                           tablat	equ	0xFF5
  7357                           prodh	equ	0xFF4
  7358                           prodl	equ	0xFF3
  7359                           intcon	equ	0xFF2
  7360                           intcon2	equ	0xFF1
  7361                           indf0	equ	0xFEF
  7362                           postinc0	equ	0xFEE
  7363                           fsr0h	equ	0xFEA
  7364                           fsr0l	equ	0xFE9
  7365                           wreg	equ	0xFE8
  7366                           postdec1	equ	0xFE5
  7367                           fsr1l	equ	0xFE1
  7368                           indf2	equ	0xFDF
  7369                           postinc2	equ	0xFDE
  7370                           postdec2	equ	0xFDD
  7371                           fsr2h	equ	0xFDA
  7372                           fsr2l	equ	0xFD9
  7373                           status	equ	0xFD8
  7374                           
  7375 ;; *************** function _Delay1KTCYx *****************
  7376 ;; Defined at:
  7377 ;;		line 123 in file "main.c"
  7378 ;; Parameters:    Size  Location     Type
  7379 ;;  n               4   12[BANK2 ] unsigned long 
  7380 ;; Auto vars:     Size  Location     Type
  7381 ;;		None
  7382 ;; Return value:  Size  Location     Type
  7383 ;;                  1    wreg      void 
  7384 ;; Registers used:
  7385 ;;		wreg, status,2, status,0, cstack
  7386 ;; Tracked objects:
  7387 ;;		On entry : 0/0
  7388 ;;		On exit  : 0/0
  7389 ;;		Unchanged: 0/0
  7390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7391 ;;      Params:         0       0       0       4       0       0       0
  7392 ;;      Locals:         0       0       0       0       0       0       0
  7393 ;;      Temps:          0       0       0       4       0       0       0
  7394 ;;      Totals:         0       0       0       8       0       0       0
  7395 ;;Total ram usage:        8 bytes
  7396 ;; Hardware stack levels used:    1
  7397 ;; Hardware stack levels required when called:    8
  7398 ;; This function calls:
  7399 ;;		___lmul
  7400 ;; This function is called by:
  7401 ;;		_DelayPORXLCD
  7402 ;;		_DelayXLCD
  7403 ;; This function uses a non-reentrant model
  7404 ;;
  7405                           
  7406                           	psect	text32
  7407  003C94                     __ptext32:
  7408                           	opt stack 0
  7409  003C94                     _Delay1KTCYx:
  7410                           	opt stack 19
  7411  003C94                     l4428:
  7412  003C94  C248  F24C         	movff	Delay1KTCYx@n,??_Delay1KTCYx
  7413  003C98  C249  F24D         	movff	Delay1KTCYx@n+1,??_Delay1KTCYx+1
  7414  003C9C  C24A  F24E         	movff	Delay1KTCYx@n+2,??_Delay1KTCYx+2
  7415  003CA0  C24B  F24F         	movff	Delay1KTCYx@n+3,??_Delay1KTCYx+3
  7416  003CA4  0102               	movlb	2	; () banked
  7417  003CA6  0748               	decf	Delay1KTCYx@n& (0+255),f,b
  7418  003CA8  0E00               	movlw	0
  7419  003CAA  5B49               	subwfb	(Delay1KTCYx@n+1)& (0+255),f,b
  7420  003CAC  5B4A               	subwfb	(Delay1KTCYx@n+2)& (0+255),f,b
  7421  003CAE  5B4B               	subwfb	(Delay1KTCYx@n+3)& (0+255),f,b
  7422  003CB0  C24C  F23C         	movff	??_Delay1KTCYx,___lmul@multiplier
  7423  003CB4  C24D  F23D         	movff	??_Delay1KTCYx+1,___lmul@multiplier+1
  7424  003CB8  C24E  F23E         	movff	??_Delay1KTCYx+2,___lmul@multiplier+2
  7425  003CBC  C24F  F23F         	movff	??_Delay1KTCYx+3,___lmul@multiplier+3
  7426  003CC0  0EE8               	movlw	232
  7427  003CC2  0102               	movlb	2	; () banked
  7428  003CC4  6F40               	movwf	___lmul@multiplicand& (0+255),b
  7429  003CC6  0E03               	movlw	3
  7430  003CC8  6F41               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7431  003CCA  0E00               	movlw	0
  7432  003CCC  6F42               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7433  003CCE  0E00               	movlw	0
  7434  003CD0  6F43               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7435  003CD2  ECA7  F01C         	call	___lmul	;wreg free
  7436  003CD6  0102               	movlb	2	; () banked
  7437  003CD8  513C               	movf	?___lmul& (0+255),w,b
  7438  003CDA  0102               	movlb	2	; () banked
  7439  003CDC  113D               	iorwf	(?___lmul+1)& (0+255),w,b
  7440  003CDE  0102               	movlb	2	; () banked
  7441  003CE0  113E               	iorwf	(?___lmul+2)& (0+255),w,b
  7442  003CE2  0102               	movlb	2	; () banked
  7443  003CE4  113F               	iorwf	(?___lmul+3)& (0+255),w,b
  7444  003CE6  B4D8               	btfsc	status,2,c
  7445  003CE8  0012               	return	
  7446  003CEA  D7D4               	goto	l4428
  7447  003CEC                     __end_of_Delay1KTCYx:
  7448                           	opt stack 0
  7449                           tosu	equ	0xFFF
  7450                           tosh	equ	0xFFE
  7451                           tosl	equ	0xFFD
  7452                           pclath	equ	0xFFA
  7453                           tblptru	equ	0xFF8
  7454                           tblptrh	equ	0xFF7
  7455                           tblptrl	equ	0xFF6
  7456                           tablat	equ	0xFF5
  7457                           prodh	equ	0xFF4
  7458                           prodl	equ	0xFF3
  7459                           intcon	equ	0xFF2
  7460                           intcon2	equ	0xFF1
  7461                           indf0	equ	0xFEF
  7462                           postinc0	equ	0xFEE
  7463                           fsr0h	equ	0xFEA
  7464                           fsr0l	equ	0xFE9
  7465                           wreg	equ	0xFE8
  7466                           postdec1	equ	0xFE5
  7467                           fsr1l	equ	0xFE1
  7468                           indf2	equ	0xFDF
  7469                           postinc2	equ	0xFDE
  7470                           postdec2	equ	0xFDD
  7471                           fsr2h	equ	0xFDA
  7472                           fsr2l	equ	0xFD9
  7473                           status	equ	0xFD8
  7474                           
  7475 ;; *************** function ___lmul *****************
  7476 ;; Defined at:
  7477 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul32.c"
  7478 ;; Parameters:    Size  Location     Type
  7479 ;;  multiplier      4    0[BANK2 ] unsigned long 
  7480 ;;  multiplicand    4    4[BANK2 ] unsigned long 
  7481 ;; Auto vars:     Size  Location     Type
  7482 ;;  product         4    8[BANK2 ] unsigned long 
  7483 ;; Return value:  Size  Location     Type
  7484 ;;                  4    0[BANK2 ] unsigned long 
  7485 ;; Registers used:
  7486 ;;		wreg, status,2, status,0
  7487 ;; Tracked objects:
  7488 ;;		On entry : 0/0
  7489 ;;		On exit  : 0/0
  7490 ;;		Unchanged: 0/0
  7491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7492 ;;      Params:         0       0       0       8       0       0       0
  7493 ;;      Locals:         0       0       0       4       0       0       0
  7494 ;;      Temps:          0       0       0       0       0       0       0
  7495 ;;      Totals:         0       0       0      12       0       0       0
  7496 ;;Total ram usage:       12 bytes
  7497 ;; Hardware stack levels used:    1
  7498 ;; Hardware stack levels required when called:    7
  7499 ;; This function calls:
  7500 ;;		Nothing
  7501 ;; This function is called by:
  7502 ;;		_Delay1KTCYx
  7503 ;; This function uses a non-reentrant model
  7504 ;;
  7505                           
  7506                           	psect	text33
  7507  00394E                     __ptext33:
  7508                           	opt stack 0
  7509  00394E                     ___lmul:
  7510                           	opt stack 19
  7511                           
  7512                           ; BSR set to: 2
  7513                           ;incstack = 0
  7514  00394E  0E00               	movlw	0
  7515  003950  0102               	movlb	2	; () banked
  7516  003952  6F44               	movwf	___lmul@product& (0+255),b
  7517  003954  0E00               	movlw	0
  7518  003956  6F45               	movwf	(___lmul@product+1)& (0+255),b
  7519  003958  0E00               	movlw	0
  7520  00395A  6F46               	movwf	(___lmul@product+2)& (0+255),b
  7521  00395C  0E00               	movlw	0
  7522  00395E  6F47               	movwf	(___lmul@product+3)& (0+255),b
  7523  003960                     l4290:
  7524                           
  7525                           ; BSR set to: 2
  7526  003960  0102               	movlb	2	; () banked
  7527  003962  A13C               	btfss	___lmul@multiplier& (0+255),0,b
  7528  003964  D010               	goto	l4294
  7529                           
  7530                           ; BSR set to: 2
  7531  003966  0102               	movlb	2	; () banked
  7532  003968  5140               	movf	___lmul@multiplicand& (0+255),w,b
  7533  00396A  0102               	movlb	2	; () banked
  7534  00396C  2744               	addwf	___lmul@product& (0+255),f,b
  7535  00396E  0102               	movlb	2	; () banked
  7536  003970  5141               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  7537  003972  0102               	movlb	2	; () banked
  7538  003974  2345               	addwfc	(___lmul@product+1)& (0+255),f,b
  7539  003976  0102               	movlb	2	; () banked
  7540  003978  5142               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  7541  00397A  0102               	movlb	2	; () banked
  7542  00397C  2346               	addwfc	(___lmul@product+2)& (0+255),f,b
  7543  00397E  0102               	movlb	2	; () banked
  7544  003980  5143               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  7545  003982  0102               	movlb	2	; () banked
  7546  003984  2347               	addwfc	(___lmul@product+3)& (0+255),f,b
  7547  003986                     l4294:
  7548                           
  7549                           ; BSR set to: 2
  7550  003986  0102               	movlb	2	; () banked
  7551  003988  90D8               	bcf	status,0,c
  7552  00398A  3740               	rlcf	___lmul@multiplicand& (0+255),f,b
  7553  00398C  3741               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  7554  00398E  3742               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  7555  003990  3743               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  7556                           
  7557                           ; BSR set to: 2
  7558  003992  0102               	movlb	2	; () banked
  7559  003994  90D8               	bcf	status,0,c
  7560  003996  333F               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  7561  003998  333E               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  7562  00399A  333D               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  7563  00399C  333C               	rrcf	___lmul@multiplier& (0+255),f,b
  7564  00399E  0102               	movlb	2	; () banked
  7565  0039A0  513C               	movf	___lmul@multiplier& (0+255),w,b
  7566  0039A2  0102               	movlb	2	; () banked
  7567  0039A4  113D               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  7568  0039A6  0102               	movlb	2	; () banked
  7569  0039A8  113E               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  7570  0039AA  0102               	movlb	2	; () banked
  7571  0039AC  113F               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  7572  0039AE  A4D8               	btfss	status,2,c
  7573  0039B0  D7D7               	goto	l4290
  7574                           
  7575                           ; BSR set to: 2
  7576  0039B2  C244  F23C         	movff	___lmul@product,?___lmul
  7577  0039B6  C245  F23D         	movff	___lmul@product+1,?___lmul+1
  7578  0039BA  C246  F23E         	movff	___lmul@product+2,?___lmul+2
  7579  0039BE  C247  F23F         	movff	___lmul@product+3,?___lmul+3
  7580                           
  7581                           ; BSR set to: 2
  7582  0039C2  0012               	return		;funcret
  7583  0039C4                     __end_of___lmul:
  7584                           	opt stack 0
  7585                           tosu	equ	0xFFF
  7586                           tosh	equ	0xFFE
  7587                           tosl	equ	0xFFD
  7588                           pclath	equ	0xFFA
  7589                           tblptru	equ	0xFF8
  7590                           tblptrh	equ	0xFF7
  7591                           tblptrl	equ	0xFF6
  7592                           tablat	equ	0xFF5
  7593                           prodh	equ	0xFF4
  7594                           prodl	equ	0xFF3
  7595                           intcon	equ	0xFF2
  7596                           intcon2	equ	0xFF1
  7597                           indf0	equ	0xFEF
  7598                           postinc0	equ	0xFEE
  7599                           fsr0h	equ	0xFEA
  7600                           fsr0l	equ	0xFE9
  7601                           wreg	equ	0xFE8
  7602                           postdec1	equ	0xFE5
  7603                           fsr1l	equ	0xFE1
  7604                           indf2	equ	0xFDF
  7605                           postinc2	equ	0xFDE
  7606                           postdec2	equ	0xFDD
  7607                           fsr2h	equ	0xFDA
  7608                           fsr2l	equ	0xFD9
  7609                           status	equ	0xFD8
  7610                           
  7611 ;; *************** function _BusyXLCD *****************
  7612 ;; Defined at:
  7613 ;;		line 13 in file "XLCD/busyxlcd.c"
  7614 ;; Parameters:    Size  Location     Type
  7615 ;;		None
  7616 ;; Auto vars:     Size  Location     Type
  7617 ;;		None
  7618 ;; Return value:  Size  Location     Type
  7619 ;;                  1    wreg      unsigned char 
  7620 ;; Registers used:
  7621 ;;		wreg, cstack
  7622 ;; Tracked objects:
  7623 ;;		On entry : 0/0
  7624 ;;		On exit  : 0/0
  7625 ;;		Unchanged: 0/0
  7626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7627 ;;      Params:         0       0       0       0       0       0       0
  7628 ;;      Locals:         0       0       0       0       0       0       0
  7629 ;;      Temps:          0       0       0       0       0       0       0
  7630 ;;      Totals:         0       0       0       0       0       0       0
  7631 ;;Total ram usage:        0 bytes
  7632 ;; Hardware stack levels used:    1
  7633 ;; Hardware stack levels required when called:    8
  7634 ;; This function calls:
  7635 ;;		_DelayFor18TCY
  7636 ;; This function is called by:
  7637 ;;		_OpenXLCD
  7638 ;;		_putrsXLCD
  7639 ;;		_putsXLCD
  7640 ;;		_displayInterface
  7641 ;;		_main
  7642 ;; This function uses a non-reentrant model
  7643 ;;
  7644                           
  7645                           	psect	text34
  7646  003F14                     __ptext34:
  7647                           	opt stack 0
  7648  003F14                     _BusyXLCD:
  7649                           	opt stack 20
  7650                           
  7651                           ;busyxlcd.c: 15: LATDbits.LATD5 = 1;
  7652                           
  7653                           ; BSR set to: 2
  7654                           ;incstack = 0
  7655  003F14  8A8C               	bsf	3980,5,c	;volatile
  7656                           
  7657                           ;busyxlcd.c: 16: LATDbits.LATD4 = 0;
  7658  003F16  988C               	bcf	3980,4,c	;volatile
  7659                           
  7660                           ;busyxlcd.c: 17: DelayFor18TCY();
  7661  003F18  EC15  F021         	call	_DelayFor18TCY	;wreg free
  7662                           
  7663                           ;busyxlcd.c: 18: LATDbits.LATD6 = 1;
  7664  003F1C  8C8C               	bsf	3980,6,c	;volatile
  7665                           
  7666                           ;busyxlcd.c: 19: DelayFor18TCY();
  7667  003F1E  EC15  F021         	call	_DelayFor18TCY	;wreg free
  7668                           
  7669                           ;busyxlcd.c: 37: if(PORTD&0x08)
  7670  003F22  A683               	btfss	3971,3,c	;volatile
  7671  003F24  D00A               	goto	l192
  7672                           
  7673                           ;busyxlcd.c: 39: {
  7674                           ;busyxlcd.c: 40: LATDbits.LATD6 = 0;
  7675  003F26  9C8C               	bcf	3980,6,c	;volatile
  7676                           
  7677                           ;busyxlcd.c: 41: DelayFor18TCY();
  7678  003F28  EC15  F021         	call	_DelayFor18TCY	;wreg free
  7679                           
  7680                           ;busyxlcd.c: 42: LATDbits.LATD6 = 1;
  7681  003F2C  8C8C               	bsf	3980,6,c	;volatile
  7682                           
  7683                           ;busyxlcd.c: 43: DelayFor18TCY();
  7684  003F2E  EC15  F021         	call	_DelayFor18TCY	;wreg free
  7685                           
  7686                           ;busyxlcd.c: 44: LATDbits.LATD6 = 0;
  7687  003F32  9C8C               	bcf	3980,6,c	;volatile
  7688                           
  7689                           ;busyxlcd.c: 45: LATDbits.LATD5 = 0;
  7690  003F34  9A8C               	bcf	3980,5,c	;volatile
  7691                           
  7692                           ;busyxlcd.c: 46: return 1;
  7693  003F36  0E01               	movlw	1
  7694                           
  7695                           ;busyxlcd.c: 47: }
  7696  003F38  0012               	return	
  7697  003F3A                     l192:
  7698                           
  7699                           ;busyxlcd.c: 48: else
  7700                           ;busyxlcd.c: 49: {
  7701                           ;busyxlcd.c: 50: LATDbits.LATD6 = 0;
  7702  003F3A  9C8C               	bcf	3980,6,c	;volatile
  7703                           
  7704                           ;busyxlcd.c: 51: DelayFor18TCY();
  7705  003F3C  EC15  F021         	call	_DelayFor18TCY	;wreg free
  7706                           
  7707                           ;busyxlcd.c: 52: LATDbits.LATD6 = 1;
  7708  003F40  8C8C               	bsf	3980,6,c	;volatile
  7709                           
  7710                           ;busyxlcd.c: 53: DelayFor18TCY();
  7711  003F42  EC15  F021         	call	_DelayFor18TCY	;wreg free
  7712                           
  7713                           ;busyxlcd.c: 54: LATDbits.LATD6 = 0;
  7714  003F46  9C8C               	bcf	3980,6,c	;volatile
  7715                           
  7716                           ;busyxlcd.c: 55: LATDbits.LATD5 = 0;
  7717  003F48  9A8C               	bcf	3980,5,c	;volatile
  7718                           
  7719                           ;busyxlcd.c: 56: return 0;
  7720  003F4A  0E00               	movlw	0
  7721  003F4C  0012               	return	
  7722  003F4E                     __end_of_BusyXLCD:
  7723                           	opt stack 0
  7724                           tosu	equ	0xFFF
  7725                           tosh	equ	0xFFE
  7726                           tosl	equ	0xFFD
  7727                           pclath	equ	0xFFA
  7728                           tblptru	equ	0xFF8
  7729                           tblptrh	equ	0xFF7
  7730                           tblptrl	equ	0xFF6
  7731                           tablat	equ	0xFF5
  7732                           prodh	equ	0xFF4
  7733                           prodl	equ	0xFF3
  7734                           intcon	equ	0xFF2
  7735                           intcon2	equ	0xFF1
  7736                           indf0	equ	0xFEF
  7737                           postinc0	equ	0xFEE
  7738                           fsr0h	equ	0xFEA
  7739                           fsr0l	equ	0xFE9
  7740                           wreg	equ	0xFE8
  7741                           postdec1	equ	0xFE5
  7742                           fsr1l	equ	0xFE1
  7743                           indf2	equ	0xFDF
  7744                           postinc2	equ	0xFDE
  7745                           postdec2	equ	0xFDD
  7746                           fsr2h	equ	0xFDA
  7747                           fsr2l	equ	0xFD9
  7748                           status	equ	0xFD8
  7749                           
  7750 ;; *************** function _DelayExternalEEPROM *****************
  7751 ;; Defined at:
  7752 ;;		line 145 in file "main.c"
  7753 ;; Parameters:    Size  Location     Type
  7754 ;;		None
  7755 ;; Auto vars:     Size  Location     Type
  7756 ;;  i               2    0[BANK2 ] int 
  7757 ;; Return value:  Size  Location     Type
  7758 ;;                  1    wreg      void 
  7759 ;; Registers used:
  7760 ;;		wreg, status,2, status,0, cstack
  7761 ;; Tracked objects:
  7762 ;;		On entry : 0/0
  7763 ;;		On exit  : 0/0
  7764 ;;		Unchanged: 0/0
  7765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7766 ;;      Params:         0       0       0       0       0       0       0
  7767 ;;      Locals:         0       0       0       2       0       0       0
  7768 ;;      Temps:          0       0       0       0       0       0       0
  7769 ;;      Totals:         0       0       0       2       0       0       0
  7770 ;;Total ram usage:        2 bytes
  7771 ;; Hardware stack levels used:    1
  7772 ;; Hardware stack levels required when called:    8
  7773 ;; This function calls:
  7774 ;;		_DelayFor18TCY
  7775 ;; This function is called by:
  7776 ;;		_main
  7777 ;; This function uses a non-reentrant model
  7778 ;;
  7779                           
  7780                           	psect	text35
  7781  0040C0                     __ptext35:
  7782                           	opt stack 0
  7783  0040C0                     _DelayExternalEEPROM:
  7784                           	opt stack 22
  7785                           
  7786                           ;main.c: 146: int i;
  7787                           ;main.c: 147: for(i=0;i<1000;i++){
  7788                           
  7789                           ;incstack = 0
  7790  0040C0  0E00               	movlw	0
  7791  0040C2  0102               	movlb	2	; () banked
  7792  0040C4  6F3D               	movwf	(DelayExternalEEPROM@i+1)& (0+255),b
  7793  0040C6  0E00               	movlw	0
  7794  0040C8  6F3C               	movwf	DelayExternalEEPROM@i& (0+255),b
  7795  0040CA                     l5578:
  7796                           
  7797                           ; BSR set to: 2
  7798  0040CA  0102               	movlb	2	; () banked
  7799  0040CC  BF3D               	btfsc	(DelayExternalEEPROM@i+1)& (0+255),7,b
  7800  0040CE  D008               	goto	l5582
  7801  0040D0  0EE8               	movlw	232
  7802  0040D2  0102               	movlb	2	; () banked
  7803  0040D4  5D3C               	subwf	DelayExternalEEPROM@i& (0+255),w,b
  7804  0040D6  0E03               	movlw	3
  7805  0040D8  0102               	movlb	2	; () banked
  7806  0040DA  593D               	subwfb	(DelayExternalEEPROM@i+1)& (0+255),w,b
  7807  0040DC  B0D8               	btfsc	status,0,c
  7808  0040DE  0012               	return	
  7809  0040E0                     l5582:
  7810                           
  7811                           ; BSR set to: 2
  7812                           ;main.c: 148: DelayFor18TCY();
  7813  0040E0  EC15  F021         	call	_DelayFor18TCY	;wreg free
  7814  0040E4  0102               	movlb	2	; () banked
  7815  0040E6  4B3C               	infsnz	DelayExternalEEPROM@i& (0+255),f,b
  7816  0040E8  2B3D               	incf	(DelayExternalEEPROM@i+1)& (0+255),f,b
  7817  0040EA  D7EF               	goto	l5578
  7818  0040EC                     __end_of_DelayExternalEEPROM:
  7819                           	opt stack 0
  7820                           tosu	equ	0xFFF
  7821                           tosh	equ	0xFFE
  7822                           tosl	equ	0xFFD
  7823                           pclath	equ	0xFFA
  7824                           tblptru	equ	0xFF8
  7825                           tblptrh	equ	0xFF7
  7826                           tblptrl	equ	0xFF6
  7827                           tablat	equ	0xFF5
  7828                           prodh	equ	0xFF4
  7829                           prodl	equ	0xFF3
  7830                           intcon	equ	0xFF2
  7831                           intcon2	equ	0xFF1
  7832                           indf0	equ	0xFEF
  7833                           postinc0	equ	0xFEE
  7834                           fsr0h	equ	0xFEA
  7835                           fsr0l	equ	0xFE9
  7836                           wreg	equ	0xFE8
  7837                           postdec1	equ	0xFE5
  7838                           fsr1l	equ	0xFE1
  7839                           indf2	equ	0xFDF
  7840                           postinc2	equ	0xFDE
  7841                           postdec2	equ	0xFDD
  7842                           fsr2h	equ	0xFDA
  7843                           fsr2l	equ	0xFD9
  7844                           status	equ	0xFD8
  7845                           
  7846 ;; *************** function _DelayFor18TCY *****************
  7847 ;; Defined at:
  7848 ;;		line 129 in file "main.c"
  7849 ;; Parameters:    Size  Location     Type
  7850 ;;		None
  7851 ;; Auto vars:     Size  Location     Type
  7852 ;;		None
  7853 ;; Return value:  Size  Location     Type
  7854 ;;                  1    wreg      void 
  7855 ;; Registers used:
  7856 ;;		None
  7857 ;; Tracked objects:
  7858 ;;		On entry : 0/0
  7859 ;;		On exit  : 0/0
  7860 ;;		Unchanged: 0/0
  7861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7862 ;;      Params:         0       0       0       0       0       0       0
  7863 ;;      Locals:         0       0       0       0       0       0       0
  7864 ;;      Temps:          0       0       0       0       0       0       0
  7865 ;;      Totals:         0       0       0       0       0       0       0
  7866 ;;Total ram usage:        0 bytes
  7867 ;; Hardware stack levels used:    1
  7868 ;; Hardware stack levels required when called:    7
  7869 ;; This function calls:
  7870 ;;		Nothing
  7871 ;; This function is called by:
  7872 ;;		_BusyXLCD
  7873 ;;		_OpenXLCD
  7874 ;;		_SetDDRamAddr
  7875 ;;		_WriteCmdXLCD
  7876 ;;		_WriteDataXLCD
  7877 ;;		_DelayExternalEEPROM
  7878 ;;		_ReadAddrXLCD
  7879 ;;		_ReadDataXLCD
  7880 ;;		_SetCGRamAddr
  7881 ;; This function uses a non-reentrant model
  7882 ;;
  7883                           
  7884                           	psect	text36
  7885  00422A                     __ptext36:
  7886                           	opt stack 0
  7887  00422A                     _DelayFor18TCY:
  7888                           	opt stack 20
  7889                           
  7890                           ;main.c: 131: __nop();
  7891                           
  7892                           ; BSR set to: 2
  7893                           ;incstack = 0
  7894  00422A  F000               	nop	
  7895                           
  7896                           ;main.c: 132: __nop();
  7897  00422C  F000               	nop	
  7898                           
  7899                           ;main.c: 133: __nop();
  7900  00422E  F000               	nop	
  7901                           
  7902                           ;main.c: 134: __nop();
  7903  004230  F000               	nop	
  7904                           
  7905                           ;main.c: 135: __nop();
  7906  004232  F000               	nop	
  7907                           
  7908                           ;main.c: 136: __nop();
  7909  004234  F000               	nop	
  7910                           
  7911                           ;main.c: 137: __nop();
  7912  004236  F000               	nop	
  7913                           
  7914                           ;main.c: 138: __nop();
  7915  004238  F000               	nop	
  7916                           
  7917                           ;main.c: 139: __nop();
  7918  00423A  F000               	nop	
  7919                           
  7920                           ;main.c: 140: __nop();
  7921  00423C  F000               	nop	
  7922                           
  7923                           ;main.c: 141: __nop();
  7924  00423E  F000               	nop	
  7925                           
  7926                           ;main.c: 142: __nop();
  7927  004240  F000               	nop	
  7928  004242  0012               	return		;funcret
  7929  004244                     __end_of_DelayFor18TCY:
  7930                           	opt stack 0
  7931                           tosu	equ	0xFFF
  7932                           tosh	equ	0xFFE
  7933                           tosl	equ	0xFFD
  7934                           pclath	equ	0xFFA
  7935                           tblptru	equ	0xFF8
  7936                           tblptrh	equ	0xFF7
  7937                           tblptrl	equ	0xFF6
  7938                           tablat	equ	0xFF5
  7939                           prodh	equ	0xFF4
  7940                           prodl	equ	0xFF3
  7941                           intcon	equ	0xFF2
  7942                           intcon2	equ	0xFF1
  7943                           indf0	equ	0xFEF
  7944                           postinc0	equ	0xFEE
  7945                           fsr0h	equ	0xFEA
  7946                           fsr0l	equ	0xFE9
  7947                           wreg	equ	0xFE8
  7948                           postdec1	equ	0xFE5
  7949                           fsr1l	equ	0xFE1
  7950                           indf2	equ	0xFDF
  7951                           postinc2	equ	0xFDE
  7952                           postdec2	equ	0xFDD
  7953                           fsr2h	equ	0xFDA
  7954                           fsr2l	equ	0xFD9
  7955                           status	equ	0xFD8
  7956                           
  7957 ;; *************** function _ISR *****************
  7958 ;; Defined at:
  7959 ;;		line 877 in file "main.c"
  7960 ;; Parameters:    Size  Location     Type
  7961 ;;		None
  7962 ;; Auto vars:     Size  Location     Type
  7963 ;;		None
  7964 ;; Return value:  Size  Location     Type
  7965 ;;                  1    wreg      void 
  7966 ;; Registers used:
  7967 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  7968 ;; Tracked objects:
  7969 ;;		On entry : 0/0
  7970 ;;		On exit  : 0/0
  7971 ;;		Unchanged: 0/0
  7972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7973 ;;      Params:         0       0       0       0       0       0       0
  7974 ;;      Locals:         0       0       0       0       0       0       0
  7975 ;;      Temps:         14       0       0       0       0       0       0
  7976 ;;      Totals:        14       0       0       0       0       0       0
  7977 ;;Total ram usage:       14 bytes
  7978 ;; Hardware stack levels used:    1
  7979 ;; Hardware stack levels required when called:    6
  7980 ;; This function calls:
  7981 ;;		_ra4_isr
  7982 ;;		_rb0_isr
  7983 ;;		_syn_serial_commun_isr
  7984 ;;		_timer1_isr
  7985 ;; This function is called by:
  7986 ;;		Interrupt level 2
  7987 ;; This function uses a non-reentrant model
  7988 ;;
  7989                           
  7990                           	psect	intcode
  7991  000008                     __pintcode:
  7992                           	opt stack 0
  7993  000008                     _ISR:
  7994                           	opt stack 19
  7995                           
  7996                           ;incstack = 0
  7997  000008  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7998  00000A  EDD2  F01A         	call	int_func,f	;refresh shadow registers
  7999                           tosu	equ	0xFFF
  8000                           tosh	equ	0xFFE
  8001                           tosl	equ	0xFFD
  8002                           pclath	equ	0xFFA
  8003                           tblptru	equ	0xFF8
  8004                           tblptrh	equ	0xFF7
  8005                           tblptrl	equ	0xFF6
  8006                           tablat	equ	0xFF5
  8007                           prodh	equ	0xFF4
  8008                           prodl	equ	0xFF3
  8009                           intcon	equ	0xFF2
  8010                           intcon2	equ	0xFF1
  8011                           indf0	equ	0xFEF
  8012                           postinc0	equ	0xFEE
  8013                           fsr0h	equ	0xFEA
  8014                           fsr0l	equ	0xFE9
  8015                           wreg	equ	0xFE8
  8016                           postdec1	equ	0xFE5
  8017                           fsr1l	equ	0xFE1
  8018                           indf2	equ	0xFDF
  8019                           postinc2	equ	0xFDE
  8020                           postdec2	equ	0xFDD
  8021                           fsr2h	equ	0xFDA
  8022                           fsr2l	equ	0xFD9
  8023                           status	equ	0xFD8
  8024                           
  8025                           	psect	intcode_body
  8026  0035A4                     __pintcode_body:
  8027                           	opt stack 19
  8028  0035A4                     int_func:
  8029                           	opt stack 19
  8030  0035A4  0006               	pop		; remove dummy address from shadow register refresh
  8031  0035A6  CFFA F06D          	movff	pclath,??_ISR
  8032  0035AA  CFFB F06E          	movff	pclatu,??_ISR+1
  8033  0035AE  CFE9 F06F          	movff	fsr0l,??_ISR+2
  8034  0035B2  CFEA F070          	movff	fsr0h,??_ISR+3
  8035  0035B6  CFE1 F071          	movff	fsr1l,??_ISR+4
  8036  0035BA  CFE2 F072          	movff	fsr1h,??_ISR+5
  8037  0035BE  CFD9 F073          	movff	fsr2l,??_ISR+6
  8038  0035C2  CFDA F074          	movff	fsr2h,??_ISR+7
  8039  0035C6  CFF3 F075          	movff	prodl,??_ISR+8
  8040  0035CA  CFF4 F076          	movff	prodh,??_ISR+9
  8041  0035CE  CFF6 F077          	movff	tblptrl,??_ISR+10
  8042  0035D2  CFF7 F078          	movff	tblptrh,??_ISR+11
  8043  0035D6  CFF8 F079          	movff	tblptru,??_ISR+12
  8044  0035DA  CFF5 F07A          	movff	tablat,??_ISR+13
  8045                           
  8046                           ;main.c: 879: if(PIR1bits.TMR1IF){timer1_isr();}
  8047  0035DE  A09E               	btfss	3998,0,c	;volatile
  8048  0035E0  D003               	goto	i2l961
  8049  0035E2  EC7A  F00C         	call	_timer1_isr	;wreg free
  8050  0035E6  D00D               	goto	i2l968
  8051  0035E8                     i2l961:
  8052                           
  8053                           ;main.c: 880: else if(INTCONbits.INT0IF){rb0_isr();}
  8054  0035E8  A2F2               	btfss	intcon,1,c	;volatile
  8055  0035EA  D003               	goto	i2l963
  8056  0035EC  EC1F  F01B         	call	_rb0_isr	;wreg free
  8057  0035F0  D008               	goto	i2l968
  8058  0035F2                     i2l963:
  8059                           
  8060                           ;main.c: 881: else if(INTCONbits.TMR0IF){ra4_isr();}
  8061  0035F2  A4F2               	btfss	intcon,2,c	;volatile
  8062  0035F4  D003               	goto	i2l965
  8063  0035F6  ECF0  F014         	call	_ra4_isr	;wreg free
  8064  0035FA  D003               	goto	i2l968
  8065  0035FC                     i2l965:
  8066                           
  8067                           ;main.c: 882: else if(PIR1bits.RCIF){syn_serial_commun_isr();}
  8068  0035FC  BA9E               	btfsc	3998,5,c	;volatile
  8069  0035FE  ECAA  F009         	call	_syn_serial_commun_isr	;wreg free
  8070  003602                     i2l968:
  8071  003602  C07A  FFF5         	movff	??_ISR+13,tablat
  8072  003606  C079  FFF8         	movff	??_ISR+12,tblptru
  8073  00360A  C078  FFF7         	movff	??_ISR+11,tblptrh
  8074  00360E  C077  FFF6         	movff	??_ISR+10,tblptrl
  8075  003612  C076  FFF4         	movff	??_ISR+9,prodh
  8076  003616  C075  FFF3         	movff	??_ISR+8,prodl
  8077  00361A  C074  FFDA         	movff	??_ISR+7,fsr2h
  8078  00361E  C073  FFD9         	movff	??_ISR+6,fsr2l
  8079  003622  C072  FFE2         	movff	??_ISR+5,fsr1h
  8080  003626  C071  FFE1         	movff	??_ISR+4,fsr1l
  8081  00362A  C070  FFEA         	movff	??_ISR+3,fsr0h
  8082  00362E  C06F  FFE9         	movff	??_ISR+2,fsr0l
  8083  003632  C06E  FFFB         	movff	??_ISR+1,pclatu
  8084  003636  C06D  FFFA         	movff	??_ISR,pclath
  8085  00363A  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8086  00363C  0011               	retfie		f
  8087  00363E                     __end_of_ISR:
  8088                           	opt stack 0
  8089                           tosu	equ	0xFFF
  8090                           tosh	equ	0xFFE
  8091                           tosl	equ	0xFFD
  8092                           pclatu	equ	0xFFB
  8093                           pclath	equ	0xFFA
  8094                           tblptru	equ	0xFF8
  8095                           tblptrh	equ	0xFF7
  8096                           tblptrl	equ	0xFF6
  8097                           tablat	equ	0xFF5
  8098                           prodh	equ	0xFF4
  8099                           prodl	equ	0xFF3
  8100                           intcon	equ	0xFF2
  8101                           intcon2	equ	0xFF1
  8102                           indf0	equ	0xFEF
  8103                           postinc0	equ	0xFEE
  8104                           fsr0h	equ	0xFEA
  8105                           fsr0l	equ	0xFE9
  8106                           wreg	equ	0xFE8
  8107                           postdec1	equ	0xFE5
  8108                           fsr1h	equ	0xFE2
  8109                           fsr1l	equ	0xFE1
  8110                           indf2	equ	0xFDF
  8111                           postinc2	equ	0xFDE
  8112                           postdec2	equ	0xFDD
  8113                           fsr2h	equ	0xFDA
  8114                           fsr2l	equ	0xFD9
  8115                           status	equ	0xFD8
  8116                           
  8117 ;; *************** function _timer1_isr *****************
  8118 ;; Defined at:
  8119 ;;		line 519 in file "main.c"
  8120 ;; Parameters:    Size  Location     Type
  8121 ;;		None
  8122 ;; Auto vars:     Size  Location     Type
  8123 ;;  k               2  106[COMRAM] int 
  8124 ;; Return value:  Size  Location     Type
  8125 ;;                  1    wreg      void 
  8126 ;; Registers used:
  8127 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  8128 ;; Tracked objects:
  8129 ;;		On entry : 0/0
  8130 ;;		On exit  : 0/0
  8131 ;;		Unchanged: 0/0
  8132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8133 ;;      Params:         0       0       0       0       0       0       0
  8134 ;;      Locals:         2       0       0       0       0       0       0
  8135 ;;      Temps:          2       0       0       0       0       0       0
  8136 ;;      Totals:         4       0       0       0       0       0       0
  8137 ;;Total ram usage:        4 bytes
  8138 ;; Hardware stack levels used:    1
  8139 ;; Hardware stack levels required when called:    5
  8140 ;; This function calls:
  8141 ;;		_OffBuffer
  8142 ;;		_OnBuffer
  8143 ;;		_assync_serial_commun
  8144 ;;		_getLuminosity
  8145 ;;		_getTemperature
  8146 ;;		i2___wmul
  8147 ;; This function is called by:
  8148 ;;		_ISR
  8149 ;; This function uses a non-reentrant model
  8150 ;;
  8151                           
  8152                           	psect	text38
  8153  0018F4                     __ptext38:
  8154                           	opt stack 0
  8155  0018F4                     _timer1_isr:
  8156                           	opt stack 19
  8157                           
  8158                           ;main.c: 521: int k;
  8159                           ;main.c: 524: TMR1H=0x80;
  8160                           
  8161                           ;incstack = 0
  8162  0018F4  0E80               	movlw	128
  8163  0018F6  6ECF               	movwf	4047,c	;volatile
  8164                           
  8165                           ;main.c: 525: TMR1L=0;
  8166  0018F8  0E00               	movlw	0
  8167  0018FA  6ECE               	movwf	4046,c	;volatile
  8168                           
  8169                           ;main.c: 526: PIR1bits.TMR1IF = 0;
  8170  0018FC  909E               	bcf	3998,0,c	;volatile
  8171                           
  8172                           ;main.c: 529: for(k=0;k<4;k++){updateExternalEEPROM[k]=0;}
  8173  0018FE  0E00               	movlw	0
  8174  001900  6E6C               	movwf	timer1_isr@k+1,c
  8175  001902  0E00               	movlw	0
  8176  001904  6E6B               	movwf	timer1_isr@k,c
  8177  001906                     i2l10380:
  8178  001906  BE6C               	btfsc	timer1_isr@k+1,7,c
  8179  001908  D006               	goto	i2l10384
  8180  00190A  506C               	movf	timer1_isr@k+1,w,c
  8181  00190C  E114               	bnz	i2l10390
  8182  00190E  0E04               	movlw	4
  8183  001910  5C6B               	subwf	timer1_isr@k,w,c
  8184  001912  B0D8               	btfsc	status,0,c
  8185  001914  D010               	goto	i2l10390
  8186  001916                     i2l10384:
  8187  001916  90D8               	bcf	status,0,c
  8188  001918  346B               	rlcf	timer1_isr@k,w,c
  8189  00191A  6ED9               	movwf	fsr2l,c
  8190  00191C  346C               	rlcf	timer1_isr@k+1,w,c
  8191  00191E  6EDA               	movwf	fsr2h,c
  8192  001920  0E89               	movlw	low _updateExternalEEPROM
  8193  001922  26D9               	addwf	fsr2l,f,c
  8194  001924  0E02               	movlw	high _updateExternalEEPROM
  8195  001926  22DA               	addwfc	fsr2h,f,c
  8196  001928  0E00               	movlw	0
  8197  00192A  6EDE               	movwf	postinc2,c
  8198  00192C  0E00               	movlw	0
  8199  00192E  6EDD               	movwf	postdec2,c
  8200  001930  4A6B               	infsnz	timer1_isr@k,f,c
  8201  001932  2A6C               	incf	timer1_isr@k+1,f,c
  8202  001934  D7E8               	goto	i2l10380
  8203  001936                     i2l10390:
  8204                           
  8205                           ;main.c: 532: countClock ++;
  8206  001936  0101               	movlb	1	; () banked
  8207  001938  4BFA               	infsnz	_countClock& (0+255),f,b	;volatile
  8208  00193A  2BFB               	incf	(_countClock+1)& (0+255),f,b	;volatile
  8209                           
  8210                           ;main.c: 533: countMonitor ++;
  8211  00193C  0100               	movlb	0	; () banked
  8212  00193E  4BEB               	infsnz	_countMonitor& (0+255),f,b	;volatile
  8213  001940  2BEC               	incf	(_countMonitor+1)& (0+255),f,b	;volatile
  8214                           
  8215                           ;main.c: 534: countTINA ++;
  8216  001942  0100               	movlb	0	; () banked
  8217  001944  4BF5               	infsnz	_countTINA& (0+255),f,b	;volatile
  8218  001946  2BF6               	incf	(_countTINA+1)& (0+255),f,b	;volatile
  8219                           
  8220                           ;main.c: 535: countSaveTime++;
  8221  001948  0100               	movlb	0	; () banked
  8222  00194A  4BF3               	infsnz	_countSaveTime& (0+255),f,b	;volatile
  8223  00194C  2BF4               	incf	(_countSaveTime+1)& (0+255),f,b	;volatile
  8224                           
  8225                           ; BSR set to: 0
  8226                           ;main.c: 536: if(countAlarmTemperature>-1){countAlarmTemperature ++;}
  8227  00194E  0101               	movlb	1	; () banked
  8228  001950  BFF9               	btfsc	(_countAlarmTemperature+1)& (0+255),7,b	;volatile
  8229  001952  D003               	goto	i2l10396
  8230                           
  8231                           ; BSR set to: 1
  8232  001954  0101               	movlb	1	; () banked
  8233  001956  4BF8               	infsnz	_countAlarmTemperature& (0+255),f,b	;volatile
  8234  001958  2BF9               	incf	(_countAlarmTemperature+1)& (0+255),f,b	;volatile
  8235  00195A                     i2l10396:
  8236                           
  8237                           ; BSR set to: 1
  8238                           ;main.c: 537: if(countAlarmLuminosity>-1){countAlarmLuminosity ++;}
  8239  00195A  0100               	movlb	0	; () banked
  8240  00195C  BFEA               	btfsc	(_countAlarmLuminosity+1)& (0+255),7,b	;volatile
  8241  00195E  D003               	goto	i2l10400
  8242                           
  8243                           ; BSR set to: 0
  8244  001960  0100               	movlb	0	; () banked
  8245  001962  4BE9               	infsnz	_countAlarmLuminosity& (0+255),f,b	;volatile
  8246  001964  2BEA               	incf	(_countAlarmLuminosity+1)& (0+255),f,b	;volatile
  8247  001966                     i2l10400:
  8248                           
  8249                           ; BSR set to: 0
  8250                           ;main.c: 540: seconds = countClock;
  8251  001966  C1FA  F232         	movff	_countClock,_seconds	;volatile
  8252  00196A  C1FB  F233         	movff	_countClock+1,_seconds+1	;volatile
  8253                           
  8254                           ; BSR set to: 0
  8255                           ;main.c: 541: if(seconds>=60){seconds=countClock=0;minutes++;};
  8256  00196E  0102               	movlb	2	; () banked
  8257  001970  BF33               	btfsc	(_seconds+1)& (0+255),7,b	;volatile
  8258  001972  D014               	goto	i2l10408
  8259  001974  0102               	movlb	2	; () banked
  8260  001976  5133               	movf	(_seconds+1)& (0+255),w,b	;volatile
  8261  001978  E105               	bnz	i2u1348_40
  8262  00197A  0E3C               	movlw	60
  8263  00197C  0102               	movlb	2	; () banked
  8264  00197E  5D32               	subwf	_seconds& (0+255),w,b	;volatile
  8265  001980  A0D8               	btfss	status,0,c
  8266  001982  D00C               	goto	i2l10408
  8267  001984                     i2u1348_40:
  8268                           
  8269                           ; BSR set to: 2
  8270  001984  0E00               	movlw	0
  8271  001986  0101               	movlb	1	; () banked
  8272  001988  6FFB               	movwf	(_countClock+1)& (0+255),b	;volatile
  8273  00198A  0E00               	movlw	0
  8274  00198C  6FFA               	movwf	_countClock& (0+255),b	;volatile
  8275  00198E  C1FA  F232         	movff	_countClock,_seconds	;volatile
  8276  001992  C1FB  F233         	movff	_countClock+1,_seconds+1	;volatile
  8277                           
  8278                           ; BSR set to: 1
  8279  001996  0102               	movlb	2	; () banked
  8280  001998  4B34               	infsnz	_minutes& (0+255),f,b	;volatile
  8281  00199A  2B35               	incf	(_minutes+1)& (0+255),f,b	;volatile
  8282  00199C                     i2l10408:
  8283                           
  8284                           ; BSR set to: 2
  8285                           ;main.c: 542: if(minutes>=60){minutes=0;hours++;}
  8286  00199C  0102               	movlb	2	; () banked
  8287  00199E  BF35               	btfsc	(_minutes+1)& (0+255),7,b	;volatile
  8288  0019A0  D010               	goto	i2l10414
  8289  0019A2  0102               	movlb	2	; () banked
  8290  0019A4  5135               	movf	(_minutes+1)& (0+255),w,b	;volatile
  8291  0019A6  E105               	bnz	i2u1349_40
  8292  0019A8  0E3C               	movlw	60
  8293  0019AA  0102               	movlb	2	; () banked
  8294  0019AC  5D34               	subwf	_minutes& (0+255),w,b	;volatile
  8295  0019AE  A0D8               	btfss	status,0,c
  8296  0019B0  D008               	goto	i2l10414
  8297  0019B2                     i2u1349_40:
  8298                           
  8299                           ; BSR set to: 2
  8300  0019B2  0E00               	movlw	0
  8301  0019B4  0102               	movlb	2	; () banked
  8302  0019B6  6F35               	movwf	(_minutes+1)& (0+255),b	;volatile
  8303  0019B8  0E00               	movlw	0
  8304  0019BA  6F34               	movwf	_minutes& (0+255),b	;volatile
  8305                           
  8306                           ; BSR set to: 2
  8307  0019BC  0102               	movlb	2	; () banked
  8308  0019BE  4B36               	infsnz	_hours& (0+255),f,b	;volatile
  8309  0019C0  2B37               	incf	(_hours+1)& (0+255),f,b	;volatile
  8310  0019C2                     i2l10414:
  8311                           
  8312                           ; BSR set to: 2
  8313                           ;main.c: 543: if(hours>=24){hours=0;}
  8314  0019C2  0102               	movlb	2	; () banked
  8315  0019C4  BF37               	btfsc	(_hours+1)& (0+255),7,b	;volatile
  8316  0019C6  D00D               	goto	i2l10418
  8317  0019C8  0102               	movlb	2	; () banked
  8318  0019CA  5137               	movf	(_hours+1)& (0+255),w,b	;volatile
  8319  0019CC  E105               	bnz	i2u1350_40
  8320  0019CE  0E18               	movlw	24
  8321  0019D0  0102               	movlb	2	; () banked
  8322  0019D2  5D36               	subwf	_hours& (0+255),w,b	;volatile
  8323  0019D4  A0D8               	btfss	status,0,c
  8324  0019D6  D005               	goto	i2l10418
  8325  0019D8                     i2u1350_40:
  8326                           
  8327                           ; BSR set to: 2
  8328  0019D8  0E00               	movlw	0
  8329  0019DA  0102               	movlb	2	; () banked
  8330  0019DC  6F37               	movwf	(_hours+1)& (0+255),b	;volatile
  8331  0019DE  0E00               	movlw	0
  8332  0019E0  6F36               	movwf	_hours& (0+255),b	;volatile
  8333  0019E2                     i2l10418:
  8334                           
  8335                           ; BSR set to: 2
  8336                           ;main.c: 546: if(countMonitor==PMON){
  8337  0019E2  0101               	movlb	1	; () banked
  8338  0019E4  51FE               	movf	_PMON& (0+255),w,b	;volatile
  8339  0019E6  0100               	movlb	0	; () banked
  8340  0019E8  19EB               	xorwf	_countMonitor& (0+255),w,b	;volatile
  8341  0019EA  E105               	bnz	i2u1351_41
  8342  0019EC  0101               	movlb	1	; () banked
  8343  0019EE  51FF               	movf	(_PMON+1)& (0+255),w,b	;volatile
  8344  0019F0  0100               	movlb	0	; () banked
  8345  0019F2  19EC               	xorwf	(_countMonitor+1)& (0+255),w,b	;volatile
  8346  0019F4  A4D8               	btfss	status,2,c
  8347  0019F6                     i2u1351_41:
  8348  0019F6  D0FA               	goto	i2l10462
  8349                           
  8350                           ; BSR set to: 0
  8351                           ;main.c: 548: temperature = (int) getTemperature();
  8352  0019F8  EC32  F012         	call	_getTemperature	;wreg free
  8353  0019FC  6E69               	movwf	??_timer1_isr& (0+255),c
  8354  0019FE  5069               	movf	??_timer1_isr,w,c
  8355  001A00  0102               	movlb	2	; () banked
  8356  001A02  6FA3               	movwf	_temperature& (0+255),b	;volatile
  8357  001A04  6BA4               	clrf	(_temperature+1)& (0+255),b	;volatile
  8358                           
  8359                           ; BSR set to: 2
  8360                           ;main.c: 550: luminosity = getLuminosity();
  8361  001A06  EC2C  F01A         	call	_getLuminosity	;wreg free
  8362  001A0A  C022  F2A1         	movff	?_getLuminosity,_luminosity	;volatile
  8363  001A0E  C023  F2A2         	movff	?_getLuminosity+1,_luminosity+1	;volatile
  8364                           
  8365                           ;main.c: 551: countMonitor=0;
  8366  001A12  0E00               	movlw	0
  8367  001A14  0100               	movlb	0	; () banked
  8368  001A16  6FEC               	movwf	(_countMonitor+1)& (0+255),b	;volatile
  8369  001A18  0E00               	movlw	0
  8370  001A1A  6FEB               	movwf	_countMonitor& (0+255),b	;volatile
  8371                           
  8372                           ; BSR set to: 0
  8373                           ;main.c: 553: if(temperature>maxTemperature){
  8374  001A1C  0102               	movlb	2	; () banked
  8375  001A1E  51A3               	movf	_temperature& (0+255),w,b	;volatile
  8376  001A20  0102               	movlb	2	; () banked
  8377  001A22  5D30               	subwf	_maxTemperature& (0+255),w,b	;volatile
  8378  001A24  0102               	movlb	2	; () banked
  8379  001A26  5131               	movf	(_maxTemperature+1)& (0+255),w,b	;volatile
  8380  001A28  0A80               	xorlw	128
  8381  001A2A  6E69               	movwf	??_timer1_isr& (0+255),c
  8382  001A2C  0102               	movlb	2	; () banked
  8383  001A2E  51A4               	movf	(_temperature+1)& (0+255),w,b	;volatile
  8384  001A30  0A80               	xorlw	128
  8385  001A32  5869               	subwfb	??_timer1_isr& (0+255),w,c
  8386  001A34  B0D8               	btfsc	status,0,c
  8387  001A36  D009               	goto	i2l10432
  8388                           
  8389                           ; BSR set to: 2
  8390                           ;main.c: 554: updateExternalEEPROM[0]=1;
  8391  001A38  0E00               	movlw	0
  8392  001A3A  0102               	movlb	2	; () banked
  8393  001A3C  6F8A               	movwf	(_updateExternalEEPROM+1)& (0+255),b	;volatile
  8394  001A3E  0E01               	movlw	1
  8395  001A40  6F89               	movwf	_updateExternalEEPROM& (0+255),b	;volatile
  8396                           
  8397                           ; BSR set to: 2
  8398                           ;main.c: 555: maxTemperature=temperature;}
  8399  001A42  C2A3  F230         	movff	_temperature,_maxTemperature	;volatile
  8400  001A46  C2A4  F231         	movff	_temperature+1,_maxTemperature+1	;volatile
  8401  001A4A                     i2l10432:
  8402                           
  8403                           ; BSR set to: 2
  8404                           ;main.c: 556: if(temperature<minTemperature){
  8405  001A4A  0102               	movlb	2	; () banked
  8406  001A4C  512C               	movf	_minTemperature& (0+255),w,b	;volatile
  8407  001A4E  0102               	movlb	2	; () banked
  8408  001A50  5DA3               	subwf	_temperature& (0+255),w,b	;volatile
  8409  001A52  0102               	movlb	2	; () banked
  8410  001A54  51A4               	movf	(_temperature+1)& (0+255),w,b	;volatile
  8411  001A56  0A80               	xorlw	128
  8412  001A58  6E69               	movwf	??_timer1_isr& (0+255),c
  8413  001A5A  0102               	movlb	2	; () banked
  8414  001A5C  512D               	movf	(_minTemperature+1)& (0+255),w,b	;volatile
  8415  001A5E  0A80               	xorlw	128
  8416  001A60  5869               	subwfb	??_timer1_isr& (0+255),w,c
  8417  001A62  B0D8               	btfsc	status,0,c
  8418  001A64  D009               	goto	i2l10438
  8419                           
  8420                           ; BSR set to: 2
  8421                           ;main.c: 557: updateExternalEEPROM[1]=1;
  8422  001A66  0E00               	movlw	0
  8423  001A68  0102               	movlb	2	; () banked
  8424  001A6A  6F8C               	movwf	(_updateExternalEEPROM+3)& (0+255),b	;volatile
  8425  001A6C  0E01               	movlw	1
  8426  001A6E  6F8B               	movwf	(_updateExternalEEPROM+2)& (0+255),b	;volatile
  8427                           
  8428                           ; BSR set to: 2
  8429                           ;main.c: 558: minTemperature=temperature;}
  8430  001A70  C2A3  F22C         	movff	_temperature,_minTemperature	;volatile
  8431  001A74  C2A4  F22D         	movff	_temperature+1,_minTemperature+1	;volatile
  8432  001A78                     i2l10438:
  8433                           
  8434                           ; BSR set to: 2
  8435                           ;main.c: 559: if(luminosity>maxLuminosity){
  8436  001A78  0102               	movlb	2	; () banked
  8437  001A7A  51A1               	movf	_luminosity& (0+255),w,b	;volatile
  8438  001A7C  0102               	movlb	2	; () banked
  8439  001A7E  5D2E               	subwf	_maxLuminosity& (0+255),w,b	;volatile
  8440  001A80  0102               	movlb	2	; () banked
  8441  001A82  512F               	movf	(_maxLuminosity+1)& (0+255),w,b	;volatile
  8442  001A84  0A80               	xorlw	128
  8443  001A86  6E69               	movwf	??_timer1_isr& (0+255),c
  8444  001A88  0102               	movlb	2	; () banked
  8445  001A8A  51A2               	movf	(_luminosity+1)& (0+255),w,b	;volatile
  8446  001A8C  0A80               	xorlw	128
  8447  001A8E  5869               	subwfb	??_timer1_isr& (0+255),w,c
  8448  001A90  B0D8               	btfsc	status,0,c
  8449  001A92  D009               	goto	i2l10444
  8450                           
  8451                           ; BSR set to: 2
  8452                           ;main.c: 560: updateExternalEEPROM[2]=1;
  8453  001A94  0E00               	movlw	0
  8454  001A96  0102               	movlb	2	; () banked
  8455  001A98  6F8E               	movwf	(_updateExternalEEPROM+5)& (0+255),b	;volatile
  8456  001A9A  0E01               	movlw	1
  8457  001A9C  6F8D               	movwf	(_updateExternalEEPROM+4)& (0+255),b	;volatile
  8458                           
  8459                           ; BSR set to: 2
  8460                           ;main.c: 561: maxLuminosity=luminosity;}
  8461  001A9E  C2A1  F22E         	movff	_luminosity,_maxLuminosity	;volatile
  8462  001AA2  C2A2  F22F         	movff	_luminosity+1,_maxLuminosity+1	;volatile
  8463  001AA6                     i2l10444:
  8464                           
  8465                           ; BSR set to: 2
  8466                           ;main.c: 562: if(luminosity<minLuminosity){
  8467  001AA6  0102               	movlb	2	; () banked
  8468  001AA8  512A               	movf	_minLuminosity& (0+255),w,b	;volatile
  8469  001AAA  0102               	movlb	2	; () banked
  8470  001AAC  5DA1               	subwf	_luminosity& (0+255),w,b	;volatile
  8471  001AAE  0102               	movlb	2	; () banked
  8472  001AB0  51A2               	movf	(_luminosity+1)& (0+255),w,b	;volatile
  8473  001AB2  0A80               	xorlw	128
  8474  001AB4  6E69               	movwf	??_timer1_isr& (0+255),c
  8475  001AB6  0102               	movlb	2	; () banked
  8476  001AB8  512B               	movf	(_minLuminosity+1)& (0+255),w,b	;volatile
  8477  001ABA  0A80               	xorlw	128
  8478  001ABC  5869               	subwfb	??_timer1_isr& (0+255),w,c
  8479  001ABE  B0D8               	btfsc	status,0,c
  8480  001AC0  D009               	goto	i2l841
  8481                           
  8482                           ; BSR set to: 2
  8483                           ;main.c: 563: updateExternalEEPROM[3]=1;
  8484  001AC2  0E00               	movlw	0
  8485  001AC4  0102               	movlb	2	; () banked
  8486  001AC6  6F90               	movwf	(_updateExternalEEPROM+7)& (0+255),b	;volatile
  8487  001AC8  0E01               	movlw	1
  8488  001ACA  6F8F               	movwf	(_updateExternalEEPROM+6)& (0+255),b	;volatile
  8489                           
  8490                           ; BSR set to: 2
  8491                           ;main.c: 564: minLuminosity=luminosity;
  8492  001ACC  C2A1  F22A         	movff	_luminosity,_minLuminosity	;volatile
  8493  001AD0  C2A2  F22B         	movff	_luminosity+1,_minLuminosity+1	;volatile
  8494  001AD4                     i2l841:
  8495                           
  8496                           ; BSR set to: 2
  8497                           ;main.c: 565: }
  8498                           ;main.c: 567: for(k=0;k<5;k++){
  8499  001AD4  0E00               	movlw	0
  8500  001AD6  6E6C               	movwf	timer1_isr@k+1,c
  8501  001AD8  0E00               	movlw	0
  8502  001ADA  6E6B               	movwf	timer1_isr@k,c
  8503                           
  8504                           ; BSR set to: 2
  8505  001ADC  BE6C               	btfsc	timer1_isr@k+1,7,c
  8506  001ADE  D008               	goto	i2l10454
  8507  001AE0  506C               	movf	timer1_isr@k+1,w,c
  8508  001AE2  E105               	bnz	i2u1356_40
  8509  001AE4  0E05               	movlw	5
  8510  001AE6  5C6B               	subwf	timer1_isr@k,w,c
  8511  001AE8  B0D8               	btfsc	status,0,c
  8512  001AEA  D080               	goto	i2l10462
  8513  001AEC  D001               	goto	i2l10454
  8514  001AEE                     i2u1356_40:
  8515                           
  8516                           ; BSR set to: 2
  8517  001AEE  D07E               	goto	i2l10462
  8518  001AF0                     i2l10454:
  8519                           
  8520                           ;main.c: 568: if(updateExternalEEPROM[k]){
  8521  001AF0  90D8               	bcf	status,0,c
  8522  001AF2  346B               	rlcf	timer1_isr@k,w,c
  8523  001AF4  6ED9               	movwf	fsr2l,c
  8524  001AF6  346C               	rlcf	timer1_isr@k+1,w,c
  8525  001AF8  6EDA               	movwf	fsr2h,c
  8526  001AFA  0E89               	movlw	low _updateExternalEEPROM
  8527  001AFC  26D9               	addwf	fsr2l,f,c
  8528  001AFE  0E02               	movlw	high _updateExternalEEPROM
  8529  001B00  22DA               	addwfc	fsr2h,f,c
  8530  001B02  50DE               	movf	postinc2,w,c
  8531  001B04  10DE               	iorwf	postinc2,w,c
  8532  001B06  B4D8               	btfsc	status,2,c
  8533  001B08  D06A               	goto	i2l10458
  8534                           
  8535                           ;main.c: 569: dataInEEEPROM[k][0] = (unsigned char) hours;
  8536  001B0A  C06B  F001         	movff	timer1_isr@k,i2___wmul@multiplier
  8537  001B0E  C06C  F002         	movff	timer1_isr@k+1,i2___wmul@multiplier+1
  8538  001B12  0E00               	movlw	0
  8539  001B14  6E04               	movwf	i2___wmul@multiplicand+1,c
  8540  001B16  0E05               	movlw	5
  8541  001B18  6E03               	movwf	i2___wmul@multiplicand,c
  8542  001B1A  ECB4  F020         	call	i2___wmul	;wreg free
  8543  001B1E  0E75               	movlw	low _dataInEEEPROM
  8544  001B20  2401               	addwf	?i2___wmul,w,c
  8545  001B22  6ED9               	movwf	fsr2l,c
  8546  001B24  0E02               	movlw	high _dataInEEEPROM
  8547  001B26  2002               	addwfc	?i2___wmul+1,w,c
  8548  001B28  6EDA               	movwf	fsr2h,c
  8549  001B2A  C236  FFDF         	movff	_hours,indf2	;volatile
  8550                           
  8551                           ;main.c: 570: dataInEEEPROM[k][1] = (unsigned char) minutes;
  8552  001B2E  C06B  F001         	movff	timer1_isr@k,i2___wmul@multiplier
  8553  001B32  C06C  F002         	movff	timer1_isr@k+1,i2___wmul@multiplier+1
  8554  001B36  0E00               	movlw	0
  8555  001B38  6E04               	movwf	i2___wmul@multiplicand+1,c
  8556  001B3A  0E05               	movlw	5
  8557  001B3C  6E03               	movwf	i2___wmul@multiplicand,c
  8558  001B3E  ECB4  F020         	call	i2___wmul	;wreg free
  8559  001B42  0E01               	movlw	1
  8560  001B44  2601               	addwf	?i2___wmul,f,c
  8561  001B46  0E00               	movlw	0
  8562  001B48  2202               	addwfc	?i2___wmul+1,f,c
  8563  001B4A  0E75               	movlw	low _dataInEEEPROM
  8564  001B4C  2401               	addwf	?i2___wmul,w,c
  8565  001B4E  6ED9               	movwf	fsr2l,c
  8566  001B50  0E02               	movlw	high _dataInEEEPROM
  8567  001B52  2002               	addwfc	?i2___wmul+1,w,c
  8568  001B54  6EDA               	movwf	fsr2h,c
  8569  001B56  C234  FFDF         	movff	_minutes,indf2	;volatile
  8570                           
  8571                           ;main.c: 571: dataInEEEPROM[k][2] = (unsigned char) seconds;
  8572  001B5A  C06B  F001         	movff	timer1_isr@k,i2___wmul@multiplier
  8573  001B5E  C06C  F002         	movff	timer1_isr@k+1,i2___wmul@multiplier+1
  8574  001B62  0E00               	movlw	0
  8575  001B64  6E04               	movwf	i2___wmul@multiplicand+1,c
  8576  001B66  0E05               	movlw	5
  8577  001B68  6E03               	movwf	i2___wmul@multiplicand,c
  8578  001B6A  ECB4  F020         	call	i2___wmul	;wreg free
  8579  001B6E  0E02               	movlw	2
  8580  001B70  2601               	addwf	?i2___wmul,f,c
  8581  001B72  0E00               	movlw	0
  8582  001B74  2202               	addwfc	?i2___wmul+1,f,c
  8583  001B76  0E75               	movlw	low _dataInEEEPROM
  8584  001B78  2401               	addwf	?i2___wmul,w,c
  8585  001B7A  6ED9               	movwf	fsr2l,c
  8586  001B7C  0E02               	movlw	high _dataInEEEPROM
  8587  001B7E  2002               	addwfc	?i2___wmul+1,w,c
  8588  001B80  6EDA               	movwf	fsr2h,c
  8589  001B82  C232  FFDF         	movff	_seconds,indf2	;volatile
  8590                           
  8591                           ;main.c: 572: dataInEEEPROM[k][3] = (unsigned char) temperature;
  8592  001B86  C06B  F001         	movff	timer1_isr@k,i2___wmul@multiplier
  8593  001B8A  C06C  F002         	movff	timer1_isr@k+1,i2___wmul@multiplier+1
  8594  001B8E  0E00               	movlw	0
  8595  001B90  6E04               	movwf	i2___wmul@multiplicand+1,c
  8596  001B92  0E05               	movlw	5
  8597  001B94  6E03               	movwf	i2___wmul@multiplicand,c
  8598  001B96  ECB4  F020         	call	i2___wmul	;wreg free
  8599  001B9A  0E03               	movlw	3
  8600  001B9C  2601               	addwf	?i2___wmul,f,c
  8601  001B9E  0E00               	movlw	0
  8602  001BA0  2202               	addwfc	?i2___wmul+1,f,c
  8603  001BA2  0E75               	movlw	low _dataInEEEPROM
  8604  001BA4  2401               	addwf	?i2___wmul,w,c
  8605  001BA6  6ED9               	movwf	fsr2l,c
  8606  001BA8  0E02               	movlw	high _dataInEEEPROM
  8607  001BAA  2002               	addwfc	?i2___wmul+1,w,c
  8608  001BAC  6EDA               	movwf	fsr2h,c
  8609  001BAE  C2A3  FFDF         	movff	_temperature,indf2	;volatile
  8610                           
  8611                           ;main.c: 573: dataInEEEPROM[k][4] = (unsigned char) luminosity;
  8612  001BB2  C06B  F001         	movff	timer1_isr@k,i2___wmul@multiplier
  8613  001BB6  C06C  F002         	movff	timer1_isr@k+1,i2___wmul@multiplier+1
  8614  001BBA  0E00               	movlw	0
  8615  001BBC  6E04               	movwf	i2___wmul@multiplicand+1,c
  8616  001BBE  0E05               	movlw	5
  8617  001BC0  6E03               	movwf	i2___wmul@multiplicand,c
  8618  001BC2  ECB4  F020         	call	i2___wmul	;wreg free
  8619  001BC6  0E04               	movlw	4
  8620  001BC8  2601               	addwf	?i2___wmul,f,c
  8621  001BCA  0E00               	movlw	0
  8622  001BCC  2202               	addwfc	?i2___wmul+1,f,c
  8623  001BCE  0E75               	movlw	low _dataInEEEPROM
  8624  001BD0  2401               	addwf	?i2___wmul,w,c
  8625  001BD2  6ED9               	movwf	fsr2l,c
  8626  001BD4  0E02               	movlw	high _dataInEEEPROM
  8627  001BD6  2002               	addwfc	?i2___wmul+1,w,c
  8628  001BD8  6EDA               	movwf	fsr2h,c
  8629  001BDA  C2A1  FFDF         	movff	_luminosity,indf2	;volatile
  8630  001BDE                     i2l10458:
  8631  001BDE  4A6B               	infsnz	timer1_isr@k,f,c
  8632  001BE0  2A6C               	incf	timer1_isr@k+1,f,c
  8633  001BE2  BE6C               	btfsc	timer1_isr@k+1,7,c
  8634  001BE4  D785               	goto	i2l10454
  8635  001BE6  506C               	movf	timer1_isr@k+1,w,c
  8636  001BE8  E101               	bnz	i2l10462
  8637  001BEA  D77C               	goto	L4
  8638  001BEC                     i2l10462:
  8639                           
  8640                           ;main.c: 574: }
  8641                           ;main.c: 575: }
  8642                           ;main.c: 576: }
  8643                           ;main.c: 579: if(ALAF && mode==0){
  8644  001BEC  0102               	movlb	2	; () banked
  8645  001BEE  51AB               	movf	_ALAF& (0+255),w,b	;volatile
  8646  001BF0  0102               	movlb	2	; () banked
  8647  001BF2  11AC               	iorwf	(_ALAF+1)& (0+255),w,b	;volatile
  8648  001BF4  B4D8               	btfsc	status,2,c
  8649  001BF6  D05A               	goto	i2l10486
  8650                           
  8651                           ; BSR set to: 2
  8652  001BF8  507B               	movf	_mode,w,c	;volatile
  8653  001BFA  107C               	iorwf	_mode+1,w,c	;volatile
  8654  001BFC  A4D8               	btfss	status,2,c
  8655  001BFE  D056               	goto	i2l10486
  8656                           
  8657                           ; BSR set to: 2
  8658                           ;main.c: 581: if(temperature>=ALAT){
  8659  001C00  0102               	movlb	2	; () banked
  8660  001C02  513A               	movf	_ALAT& (0+255),w,b	;volatile
  8661  001C04  0102               	movlb	2	; () banked
  8662  001C06  5DA3               	subwf	_temperature& (0+255),w,b	;volatile
  8663  001C08  0102               	movlb	2	; () banked
  8664  001C0A  51A4               	movf	(_temperature+1)& (0+255),w,b	;volatile
  8665  001C0C  0A80               	xorlw	128
  8666  001C0E  6E69               	movwf	??_timer1_isr& (0+255),c
  8667  001C10  0102               	movlb	2	; () banked
  8668  001C12  513B               	movf	(_ALAT+1)& (0+255),w,b	;volatile
  8669  001C14  0A80               	xorlw	128
  8670  001C16  5869               	subwfb	??_timer1_isr& (0+255),w,c
  8671  001C18  A0D8               	btfss	status,0,c
  8672  001C1A  D01D               	goto	i2l10476
  8673                           
  8674                           ; BSR set to: 2
  8675                           ;main.c: 583: goToSleep=0;
  8676  001C1C  0E00               	movlw	0
  8677  001C1E  0102               	movlb	2	; () banked
  8678  001C20  6F94               	movwf	(_goToSleep+1)& (0+255),b	;volatile
  8679  001C22  0E00               	movlw	0
  8680  001C24  6F93               	movwf	_goToSleep& (0+255),b	;volatile
  8681                           
  8682                           ;main.c: 584: countTINA=0;
  8683  001C26  0E00               	movlw	0
  8684  001C28  0100               	movlb	0	; () banked
  8685  001C2A  6FF6               	movwf	(_countTINA+1)& (0+255),b	;volatile
  8686  001C2C  0E00               	movlw	0
  8687  001C2E  6FF5               	movwf	_countTINA& (0+255),b	;volatile
  8688                           
  8689                           ;main.c: 585: iALTON=1;wALTON=1;
  8690  001C30  0E00               	movlw	0
  8691  001C32  0100               	movlb	0	; () banked
  8692  001C34  6FF2               	movwf	(_iALTON+1)& (0+255),b	;volatile
  8693  001C36  0E01               	movlw	1
  8694  001C38  6FF1               	movwf	_iALTON& (0+255),b	;volatile
  8695  001C3A  0E00               	movlw	0
  8696  001C3C  0102               	movlb	2	; () banked
  8697  001C3E  6F9C               	movwf	(_wALTON+1)& (0+255),b	;volatile
  8698  001C40  0E01               	movlw	1
  8699  001C42  6F9B               	movwf	_wALTON& (0+255),b	;volatile
  8700                           
  8701                           ; BSR set to: 2
  8702                           ;main.c: 587: assync_serial_commun();
  8703  001C44  EC7A  F019         	call	_assync_serial_commun	;wreg free
  8704                           
  8705                           ;main.c: 589: OnBuffer(); countAlarmTemperature=0;}
  8706  001C48  ECBA  F021         	call	_OnBuffer	;wreg free
  8707  001C4C  0E00               	movlw	0
  8708  001C4E  0101               	movlb	1	; () banked
  8709  001C50  6FF9               	movwf	(_countAlarmTemperature+1)& (0+255),b	;volatile
  8710  001C52  0E00               	movlw	0
  8711  001C54  6FF8               	movwf	_countAlarmTemperature& (0+255),b	;volatile
  8712  001C56                     i2l10476:
  8713                           
  8714                           ;main.c: 590: if(luminosity>=ALAL){
  8715  001C56  0102               	movlb	2	; () banked
  8716  001C58  5138               	movf	_ALAL& (0+255),w,b	;volatile
  8717  001C5A  0102               	movlb	2	; () banked
  8718  001C5C  5DA1               	subwf	_luminosity& (0+255),w,b	;volatile
  8719  001C5E  0102               	movlb	2	; () banked
  8720  001C60  51A2               	movf	(_luminosity+1)& (0+255),w,b	;volatile
  8721  001C62  0A80               	xorlw	128
  8722  001C64  6E69               	movwf	??_timer1_isr& (0+255),c
  8723  001C66  0102               	movlb	2	; () banked
  8724  001C68  5139               	movf	(_ALAL+1)& (0+255),w,b	;volatile
  8725  001C6A  0A80               	xorlw	128
  8726  001C6C  5869               	subwfb	??_timer1_isr& (0+255),w,c
  8727  001C6E  A0D8               	btfss	status,0,c
  8728  001C70  D01D               	goto	i2l10486
  8729                           
  8730                           ; BSR set to: 2
  8731                           ;main.c: 592: goToSleep=0;
  8732  001C72  0E00               	movlw	0
  8733  001C74  0102               	movlb	2	; () banked
  8734  001C76  6F94               	movwf	(_goToSleep+1)& (0+255),b	;volatile
  8735  001C78  0E00               	movlw	0
  8736  001C7A  6F93               	movwf	_goToSleep& (0+255),b	;volatile
  8737                           
  8738                           ;main.c: 593: countTINA=0;
  8739  001C7C  0E00               	movlw	0
  8740  001C7E  0100               	movlb	0	; () banked
  8741  001C80  6FF6               	movwf	(_countTINA+1)& (0+255),b	;volatile
  8742  001C82  0E00               	movlw	0
  8743  001C84  6FF5               	movwf	_countTINA& (0+255),b	;volatile
  8744                           
  8745                           ;main.c: 594: iALLON=1;wALLON=1;
  8746  001C86  0E00               	movlw	0
  8747  001C88  0100               	movlb	0	; () banked
  8748  001C8A  6FF0               	movwf	(_iALLON+1)& (0+255),b	;volatile
  8749  001C8C  0E01               	movlw	1
  8750  001C8E  6FEF               	movwf	_iALLON& (0+255),b	;volatile
  8751  001C90  0E00               	movlw	0
  8752  001C92  0102               	movlb	2	; () banked
  8753  001C94  6F9A               	movwf	(_wALLON+1)& (0+255),b	;volatile
  8754  001C96  0E01               	movlw	1
  8755  001C98  6F99               	movwf	_wALLON& (0+255),b	;volatile
  8756                           
  8757                           ; BSR set to: 2
  8758                           ;main.c: 596: assync_serial_commun();
  8759  001C9A  EC7A  F019         	call	_assync_serial_commun	;wreg free
  8760                           
  8761                           ;main.c: 598: OnBuffer(); countAlarmLuminosity=0;}
  8762  001C9E  ECBA  F021         	call	_OnBuffer	;wreg free
  8763  001CA2  0E00               	movlw	0
  8764  001CA4  0100               	movlb	0	; () banked
  8765  001CA6  6FEA               	movwf	(_countAlarmLuminosity+1)& (0+255),b	;volatile
  8766  001CA8  0E00               	movlw	0
  8767  001CAA  6FE9               	movwf	_countAlarmLuminosity& (0+255),b	;volatile
  8768  001CAC                     i2l10486:
  8769                           
  8770                           ;main.c: 599: }
  8771                           ;main.c: 602: if(countAlarmLuminosity==TSOM){
  8772  001CAC  507D               	movf	_TSOM,w,c	;volatile
  8773  001CAE  0100               	movlb	0	; () banked
  8774  001CB0  19E9               	xorwf	_countAlarmLuminosity& (0+255),w,b	;volatile
  8775  001CB2  E114               	bnz	i2l10496
  8776  001CB4  507E               	movf	_TSOM+1,w,c	;volatile
  8777  001CB6  0100               	movlb	0	; () banked
  8778  001CB8  19EA               	xorwf	(_countAlarmLuminosity+1)& (0+255),w,b	;volatile
  8779  001CBA  A4D8               	btfss	status,2,c
  8780  001CBC  D00F               	goto	i2l10496
  8781                           
  8782                           ; BSR set to: 0
  8783                           ;main.c: 604: if(!iALTON){OffBuffer();};
  8784  001CBE  0100               	movlb	0	; () banked
  8785  001CC0  51F1               	movf	_iALTON& (0+255),w,b	;volatile
  8786  001CC2  0100               	movlb	0	; () banked
  8787  001CC4  11F2               	iorwf	(_iALTON+1)& (0+255),w,b	;volatile
  8788  001CC6  B4D8               	btfsc	status,2,c
  8789                           
  8790                           ; BSR set to: 0
  8791  001CC8  ECA7  F021         	call	_OffBuffer	;wreg free
  8792                           
  8793                           ;main.c: 605: countAlarmLuminosity = -1;
  8794  001CCC  0100               	movlb	0	; () banked
  8795  001CCE  69E9               	setf	_countAlarmLuminosity& (0+255),b	;volatile
  8796  001CD0  69EA               	setf	(_countAlarmLuminosity+1)& (0+255),b	;volatile
  8797                           
  8798                           ; BSR set to: 0
  8799                           ;main.c: 606: iALLON=0;
  8800  001CD2  0E00               	movlw	0
  8801  001CD4  0100               	movlb	0	; () banked
  8802  001CD6  6FF0               	movwf	(_iALLON+1)& (0+255),b	;volatile
  8803  001CD8  0E00               	movlw	0
  8804  001CDA  6FEF               	movwf	_iALLON& (0+255),b	;volatile
  8805  001CDC                     i2l10496:
  8806                           
  8807                           ; BSR set to: 0
  8808                           ;main.c: 607: }
  8809                           ;main.c: 608: if(countAlarmTemperature==TSOM){
  8810  001CDC  507D               	movf	_TSOM,w,c	;volatile
  8811  001CDE  0101               	movlb	1	; () banked
  8812  001CE0  19F8               	xorwf	_countAlarmTemperature& (0+255),w,b	;volatile
  8813  001CE2  E114               	bnz	i2l10506
  8814  001CE4  507E               	movf	_TSOM+1,w,c	;volatile
  8815  001CE6  0101               	movlb	1	; () banked
  8816  001CE8  19F9               	xorwf	(_countAlarmTemperature+1)& (0+255),w,b	;volatile
  8817  001CEA  A4D8               	btfss	status,2,c
  8818  001CEC  D00F               	goto	i2l10506
  8819                           
  8820                           ; BSR set to: 1
  8821                           ;main.c: 610: if(!iALLON){OffBuffer();};
  8822  001CEE  0100               	movlb	0	; () banked
  8823  001CF0  51EF               	movf	_iALLON& (0+255),w,b	;volatile
  8824  001CF2  0100               	movlb	0	; () banked
  8825  001CF4  11F0               	iorwf	(_iALLON+1)& (0+255),w,b	;volatile
  8826  001CF6  B4D8               	btfsc	status,2,c
  8827                           
  8828                           ; BSR set to: 0
  8829  001CF8  ECA7  F021         	call	_OffBuffer	;wreg free
  8830                           
  8831                           ;main.c: 611: countAlarmTemperature = -1;
  8832  001CFC  0101               	movlb	1	; () banked
  8833  001CFE  69F8               	setf	_countAlarmTemperature& (0+255),b	;volatile
  8834  001D00  69F9               	setf	(_countAlarmTemperature+1)& (0+255),b	;volatile
  8835                           
  8836                           ; BSR set to: 1
  8837                           ;main.c: 612: iALTON=0;
  8838  001D02  0E00               	movlw	0
  8839  001D04  0100               	movlb	0	; () banked
  8840  001D06  6FF2               	movwf	(_iALTON+1)& (0+255),b	;volatile
  8841  001D08  0E00               	movlw	0
  8842  001D0A  6FF1               	movwf	_iALTON& (0+255),b	;volatile
  8843  001D0C                     i2l10506:
  8844                           
  8845                           ;main.c: 613: }
  8846                           ;main.c: 616: if(countSaveTime==15){
  8847  001D0C  0E0F               	movlw	15
  8848  001D0E  0100               	movlb	0	; () banked
  8849  001D10  19F3               	xorwf	_countSaveTime& (0+255),w,b	;volatile
  8850  001D12  0100               	movlb	0	; () banked
  8851  001D14  11F4               	iorwf	(_countSaveTime+1)& (0+255),w,b	;volatile
  8852  001D16  A4D8               	btfss	status,2,c
  8853  001D18  D00A               	goto	i2l10510
  8854                           
  8855                           ; BSR set to: 0
  8856                           ;main.c: 617: updateIEEPROM=1;
  8857  001D1A  0E00               	movlw	0
  8858  001D1C  0102               	movlb	2	; () banked
  8859  001D1E  6F96               	movwf	(_updateIEEPROM+1)& (0+255),b	;volatile
  8860  001D20  0E01               	movlw	1
  8861  001D22  6F95               	movwf	_updateIEEPROM& (0+255),b	;volatile
  8862                           
  8863                           ;main.c: 618: countSaveTime=0;
  8864  001D24  0E00               	movlw	0
  8865  001D26  0100               	movlb	0	; () banked
  8866  001D28  6FF4               	movwf	(_countSaveTime+1)& (0+255),b	;volatile
  8867  001D2A  0E00               	movlw	0
  8868  001D2C  6FF3               	movwf	_countSaveTime& (0+255),b	;volatile
  8869  001D2E                     i2l10510:
  8870                           
  8871                           ; BSR set to: 0
  8872                           ;main.c: 619: }
  8873                           ;main.c: 622: if(countTINA==TINA){
  8874  001D2E  0101               	movlb	1	; () banked
  8875  001D30  51FC               	movf	_TINA& (0+255),w,b	;volatile
  8876  001D32  0100               	movlb	0	; () banked
  8877  001D34  19F5               	xorwf	_countTINA& (0+255),w,b	;volatile
  8878  001D36  E10B               	bnz	i2l853
  8879  001D38  0101               	movlb	1	; () banked
  8880  001D3A  51FD               	movf	(_TINA+1)& (0+255),w,b	;volatile
  8881  001D3C  0100               	movlb	0	; () banked
  8882  001D3E  19F6               	xorwf	(_countTINA+1)& (0+255),w,b	;volatile
  8883  001D40  A4D8               	btfss	status,2,c
  8884  001D42  D005               	goto	i2l853
  8885                           
  8886                           ; BSR set to: 0
  8887                           ;main.c: 623: goToSleep=1;
  8888  001D44  0E00               	movlw	0
  8889  001D46  0102               	movlb	2	; () banked
  8890  001D48  6F94               	movwf	(_goToSleep+1)& (0+255),b	;volatile
  8891  001D4A  0E01               	movlw	1
  8892  001D4C  6F93               	movwf	_goToSleep& (0+255),b	;volatile
  8893  001D4E                     i2l853:
  8894                           
  8895                           ;main.c: 624: }
  8896                           ;main.c: 627: updateDisplay = 1;
  8897  001D4E  0E00               	movlw	0
  8898  001D50  0102               	movlb	2	; () banked
  8899  001D52  6F98               	movwf	(_updateDisplay+1)& (0+255),b	;volatile
  8900  001D54  0E01               	movlw	1
  8901  001D56  6F97               	movwf	_updateDisplay& (0+255),b	;volatile
  8902                           
  8903                           ; BSR set to: 2
  8904  001D58  0012               	return		;funcret
  8905  001D5A                     __end_of_timer1_isr:
  8906                           	opt stack 0
  8907                           tosu	equ	0xFFF
  8908                           tosh	equ	0xFFE
  8909                           tosl	equ	0xFFD
  8910                           pclatu	equ	0xFFB
  8911                           pclath	equ	0xFFA
  8912                           tblptru	equ	0xFF8
  8913                           tblptrh	equ	0xFF7
  8914                           tblptrl	equ	0xFF6
  8915                           tablat	equ	0xFF5
  8916                           prodh	equ	0xFF4
  8917                           prodl	equ	0xFF3
  8918                           intcon	equ	0xFF2
  8919                           intcon2	equ	0xFF1
  8920                           indf0	equ	0xFEF
  8921                           postinc0	equ	0xFEE
  8922                           fsr0h	equ	0xFEA
  8923                           fsr0l	equ	0xFE9
  8924                           wreg	equ	0xFE8
  8925                           postdec1	equ	0xFE5
  8926                           fsr1h	equ	0xFE2
  8927                           fsr1l	equ	0xFE1
  8928                           indf2	equ	0xFDF
  8929                           postinc2	equ	0xFDE
  8930                           postdec2	equ	0xFDD
  8931                           fsr2h	equ	0xFDA
  8932                           fsr2l	equ	0xFD9
  8933                           status	equ	0xFD8
  8934                           
  8935 ;; *************** function _getTemperature *****************
  8936 ;; Defined at:
  8937 ;;		line 387 in file "main.c"
  8938 ;; Parameters:    Size  Location     Type
  8939 ;;		None
  8940 ;; Auto vars:     Size  Location     Type
  8941 ;;  value           1    3[COMRAM] unsigned char 
  8942 ;; Return value:  Size  Location     Type
  8943 ;;                  1    wreg      unsigned char 
  8944 ;; Registers used:
  8945 ;;		wreg, status,2, status,0, cstack
  8946 ;; Tracked objects:
  8947 ;;		On entry : 0/0
  8948 ;;		On exit  : 0/0
  8949 ;;		Unchanged: 0/0
  8950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8951 ;;      Params:         0       0       0       0       0       0       0
  8952 ;;      Locals:         1       0       0       0       0       0       0
  8953 ;;      Temps:          1       0       0       0       0       0       0
  8954 ;;      Totals:         2       0       0       0       0       0       0
  8955 ;;Total ram usage:        2 bytes
  8956 ;; Hardware stack levels used:    1
  8957 ;; Hardware stack levels required when called:    1
  8958 ;; This function calls:
  8959 ;;		i2_ReadI2C
  8960 ;;		i2_WriteI2C
  8961 ;; This function is called by:
  8962 ;;		_timer1_isr
  8963 ;; This function uses a non-reentrant model
  8964 ;;
  8965                           
  8966                           	psect	text39
  8967  002464                     __ptext39:
  8968                           	opt stack 0
  8969  002464                     _getTemperature:
  8970                           	opt stack 22
  8971  002464                     i2l5330:
  8972  002464  A4C7               	btfss	4039,2,c	;volatile
  8973  002466  D003               	goto	i2u588_40
  8974  002468  6A03               	clrf	??_getTemperature& (0+255),c
  8975  00246A  2A03               	incf	??_getTemperature& (0+255),f,c
  8976  00246C  D001               	goto	i2u588_48
  8977  00246E                     i2u588_40:
  8978  00246E  6A03               	clrf	??_getTemperature& (0+255),c
  8979  002470                     i2u588_48:
  8980  002470  50C5               	movf	4037,w,c	;volatile
  8981  002472  0B1F               	andlw	31
  8982  002474  1003               	iorwf	??_getTemperature,w,c
  8983  002476  0900               	iorlw	0
  8984  002478  A4D8               	btfss	status,2,c
  8985  00247A  D7F4               	goto	i2l5330
  8986                           
  8987                           ;main.c: 392: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN); while ((SSPCON2 & 0x1F) | (SSPST
      +                          ATbits.R_W));
  8988  00247C  80C5               	bsf	4037,0,c	;volatile
  8989  00247E                     i2l671:
  8990  00247E  B0C5               	btfsc	4037,0,c	;volatile
  8991  002480  D7FE               	goto	i2l671
  8992  002482                     i2l5332:
  8993  002482  A4C7               	btfss	4039,2,c	;volatile
  8994  002484  D003               	goto	i2u591_40
  8995  002486  6A03               	clrf	??_getTemperature& (0+255),c
  8996  002488  2A03               	incf	??_getTemperature& (0+255),f,c
  8997  00248A  D001               	goto	i2u591_48
  8998  00248C                     i2u591_40:
  8999  00248C  6A03               	clrf	??_getTemperature& (0+255),c
  9000  00248E                     i2u591_48:
  9001  00248E  50C5               	movf	4037,w,c	;volatile
  9002  002490  0B1F               	andlw	31
  9003  002492  1003               	iorwf	??_getTemperature,w,c
  9004  002494  0900               	iorlw	0
  9005  002496  A4D8               	btfss	status,2,c
  9006  002498  D7F4               	goto	i2l5332
  9007                           
  9008                           ;main.c: 393: WriteI2C(0x9a); while ((SSPCON2 & 0x1F) | (SSPSTATbits.R_W));
  9009  00249A  0E9A               	movlw	154
  9010  00249C  ECEB  F01D         	call	i2_WriteI2C
  9011  0024A0                     i2l5336:
  9012  0024A0  A4C7               	btfss	4039,2,c	;volatile
  9013  0024A2  D003               	goto	i2u593_40
  9014  0024A4  6A03               	clrf	??_getTemperature& (0+255),c
  9015  0024A6  2A03               	incf	??_getTemperature& (0+255),f,c
  9016  0024A8  D001               	goto	i2u593_48
  9017  0024AA                     i2u593_40:
  9018  0024AA  6A03               	clrf	??_getTemperature& (0+255),c
  9019  0024AC                     i2u593_48:
  9020  0024AC  50C5               	movf	4037,w,c	;volatile
  9021  0024AE  0B1F               	andlw	31
  9022  0024B0  1003               	iorwf	??_getTemperature,w,c
  9023  0024B2  0900               	iorlw	0
  9024  0024B4  A4D8               	btfss	status,2,c
  9025  0024B6  D7F4               	goto	i2l5336
  9026                           
  9027                           ;main.c: 394: WriteI2C(0x01); while ((SSPCON2 & 0x1F) | (SSPSTATbits.R_W));
  9028  0024B8  0E01               	movlw	1
  9029  0024BA  ECEB  F01D         	call	i2_WriteI2C
  9030  0024BE                     i2l5340:
  9031  0024BE  A4C7               	btfss	4039,2,c	;volatile
  9032  0024C0  D003               	goto	i2u595_40
  9033  0024C2  6A03               	clrf	??_getTemperature& (0+255),c
  9034  0024C4  2A03               	incf	??_getTemperature& (0+255),f,c
  9035  0024C6  D001               	goto	i2u595_48
  9036  0024C8                     i2u595_40:
  9037  0024C8  6A03               	clrf	??_getTemperature& (0+255),c
  9038  0024CA                     i2u595_48:
  9039  0024CA  50C5               	movf	4037,w,c	;volatile
  9040  0024CC  0B1F               	andlw	31
  9041  0024CE  1003               	iorwf	??_getTemperature,w,c
  9042  0024D0  0900               	iorlw	0
  9043  0024D2  A4D8               	btfss	status,2,c
  9044  0024D4  D7F4               	goto	i2l5340
  9045                           
  9046                           ;main.c: 395: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN); while ((SSPCON2 & 0x1F) | (SSP
      +                          STATbits.R_W));
  9047  0024D6  82C5               	bsf	4037,1,c	;volatile
  9048  0024D8                     i2l683:
  9049  0024D8  B2C5               	btfsc	4037,1,c	;volatile
  9050  0024DA  D7FE               	goto	i2l683
  9051  0024DC                     i2l5342:
  9052  0024DC  A4C7               	btfss	4039,2,c	;volatile
  9053  0024DE  D003               	goto	i2u598_40
  9054  0024E0  6A03               	clrf	??_getTemperature& (0+255),c
  9055  0024E2  2A03               	incf	??_getTemperature& (0+255),f,c
  9056  0024E4  D001               	goto	i2u598_48
  9057  0024E6                     i2u598_40:
  9058  0024E6  6A03               	clrf	??_getTemperature& (0+255),c
  9059  0024E8                     i2u598_48:
  9060  0024E8  50C5               	movf	4037,w,c	;volatile
  9061  0024EA  0B1F               	andlw	31
  9062  0024EC  1003               	iorwf	??_getTemperature,w,c
  9063  0024EE  0900               	iorlw	0
  9064  0024F0  A4D8               	btfss	status,2,c
  9065  0024F2  D7F4               	goto	i2l5342
  9066                           
  9067                           ;main.c: 396: WriteI2C(0x9a | 0x01); while ((SSPCON2 & 0x1F) | (SSPSTATbits.R_W));
  9068  0024F4  0E9B               	movlw	155
  9069  0024F6  ECEB  F01D         	call	i2_WriteI2C
  9070  0024FA                     i2l5346:
  9071  0024FA  A4C7               	btfss	4039,2,c	;volatile
  9072  0024FC  D003               	goto	i2u600_40
  9073  0024FE  6A03               	clrf	??_getTemperature& (0+255),c
  9074  002500  2A03               	incf	??_getTemperature& (0+255),f,c
  9075  002502  D001               	goto	i2u600_48
  9076  002504                     i2u600_40:
  9077  002504  6A03               	clrf	??_getTemperature& (0+255),c
  9078  002506                     i2u600_48:
  9079  002506  50C5               	movf	4037,w,c	;volatile
  9080  002508  0B1F               	andlw	31
  9081  00250A  1003               	iorwf	??_getTemperature,w,c
  9082  00250C  0900               	iorlw	0
  9083  00250E  A4D8               	btfss	status,2,c
  9084  002510  D7F4               	goto	i2l5346
  9085                           
  9086                           ;main.c: 397: value = ReadI2C(); while ((SSPCON2 & 0x1F) | (SSPSTATbits.R_W));
  9087  002512  EC07  F021         	call	i2_ReadI2C	;wreg free
  9088  002516  6E04               	movwf	getTemperature@value,c
  9089  002518                     i2l5350:
  9090  002518  A4C7               	btfss	4039,2,c	;volatile
  9091  00251A  D003               	goto	i2u602_40
  9092  00251C  6A03               	clrf	??_getTemperature& (0+255),c
  9093  00251E  2A03               	incf	??_getTemperature& (0+255),f,c
  9094  002520  D001               	goto	i2u602_48
  9095  002522                     i2u602_40:
  9096  002522  6A03               	clrf	??_getTemperature& (0+255),c
  9097  002524                     i2u602_48:
  9098  002524  50C5               	movf	4037,w,c	;volatile
  9099  002526  0B1F               	andlw	31
  9100  002528  1003               	iorwf	??_getTemperature,w,c
  9101  00252A  0900               	iorlw	0
  9102  00252C  A4D8               	btfss	status,2,c
  9103  00252E  D7F4               	goto	i2l5350
  9104                           
  9105                           ;main.c: 398: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN); while ((
      +                          SSPCON2 & 0x1F) | (SSPSTATbits.R_W));
  9106  002530  8AC5               	bsf	4037,5,c	;volatile
  9107  002532  88C5               	bsf	4037,4,c	;volatile
  9108  002534                     i2l695:
  9109  002534  B8C5               	btfsc	4037,4,c	;volatile
  9110  002536  D7FE               	goto	i2l695
  9111  002538                     i2l5352:
  9112  002538  A4C7               	btfss	4039,2,c	;volatile
  9113  00253A  D003               	goto	i2u605_40
  9114  00253C  6A03               	clrf	??_getTemperature& (0+255),c
  9115  00253E  2A03               	incf	??_getTemperature& (0+255),f,c
  9116  002540  D001               	goto	i2u605_48
  9117  002542                     i2u605_40:
  9118  002542  6A03               	clrf	??_getTemperature& (0+255),c
  9119  002544                     i2u605_48:
  9120  002544  50C5               	movf	4037,w,c	;volatile
  9121  002546  0B1F               	andlw	31
  9122  002548  1003               	iorwf	??_getTemperature,w,c
  9123  00254A  0900               	iorlw	0
  9124  00254C  A4D8               	btfss	status,2,c
  9125  00254E  D7F4               	goto	i2l5352
  9126                           
  9127                           ;main.c: 399: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  9128  002550  84C5               	bsf	4037,2,c	;volatile
  9129  002552                     i2l701:
  9130  002552  B4C5               	btfsc	4037,2,c	;volatile
  9131  002554  D7FE               	goto	i2l701
  9132                           
  9133                           ;main.c: 400: } while (!(value & 0x40));
  9134  002556  AC04               	btfss	getTemperature@value,6,c
  9135  002558  D785               	goto	i2l5330
  9136  00255A                     i2l5354:
  9137  00255A  A4C7               	btfss	4039,2,c	;volatile
  9138  00255C  D003               	goto	i2u609_40
  9139  00255E  6A03               	clrf	??_getTemperature& (0+255),c
  9140  002560  2A03               	incf	??_getTemperature& (0+255),f,c
  9141  002562  D001               	goto	i2u609_48
  9142  002564                     i2u609_40:
  9143  002564  6A03               	clrf	??_getTemperature& (0+255),c
  9144  002566                     i2u609_48:
  9145  002566  50C5               	movf	4037,w,c	;volatile
  9146  002568  0B1F               	andlw	31
  9147  00256A  1003               	iorwf	??_getTemperature,w,c
  9148  00256C  0900               	iorlw	0
  9149  00256E  A4D8               	btfss	status,2,c
  9150  002570  D7F4               	goto	i2l5354
  9151                           
  9152                           ;main.c: 402: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN); while ((SSPCON2 & 0x1F) | (SSPST
      +                          ATbits.R_W));
  9153  002572  80C5               	bsf	4037,0,c	;volatile
  9154  002574                     i2l708:
  9155  002574  B0C5               	btfsc	4037,0,c	;volatile
  9156  002576  D7FE               	goto	i2l708
  9157  002578                     i2l5356:
  9158  002578  A4C7               	btfss	4039,2,c	;volatile
  9159  00257A  D003               	goto	i2u612_40
  9160  00257C  6A03               	clrf	??_getTemperature& (0+255),c
  9161  00257E  2A03               	incf	??_getTemperature& (0+255),f,c
  9162  002580  D001               	goto	i2u612_48
  9163  002582                     i2u612_40:
  9164  002582  6A03               	clrf	??_getTemperature& (0+255),c
  9165  002584                     i2u612_48:
  9166  002584  50C5               	movf	4037,w,c	;volatile
  9167  002586  0B1F               	andlw	31
  9168  002588  1003               	iorwf	??_getTemperature,w,c
  9169  00258A  0900               	iorlw	0
  9170  00258C  A4D8               	btfss	status,2,c
  9171  00258E  D7F4               	goto	i2l5356
  9172                           
  9173                           ;main.c: 403: WriteI2C(0x9a | 0x00); while ((SSPCON2 & 0x1F) | (SSPSTATbits.R_W));
  9174  002590  0E9A               	movlw	154
  9175  002592  ECEB  F01D         	call	i2_WriteI2C
  9176  002596                     i2l5360:
  9177  002596  A4C7               	btfss	4039,2,c	;volatile
  9178  002598  D003               	goto	i2u614_40
  9179  00259A  6A03               	clrf	??_getTemperature& (0+255),c
  9180  00259C  2A03               	incf	??_getTemperature& (0+255),f,c
  9181  00259E  D001               	goto	i2u614_48
  9182  0025A0                     i2u614_40:
  9183  0025A0  6A03               	clrf	??_getTemperature& (0+255),c
  9184  0025A2                     i2u614_48:
  9185  0025A2  50C5               	movf	4037,w,c	;volatile
  9186  0025A4  0B1F               	andlw	31
  9187  0025A6  1003               	iorwf	??_getTemperature,w,c
  9188  0025A8  0900               	iorlw	0
  9189  0025AA  A4D8               	btfss	status,2,c
  9190  0025AC  D7F4               	goto	i2l5360
  9191                           
  9192                           ;main.c: 404: WriteI2C(0x00); while ((SSPCON2 & 0x1F) | (SSPSTATbits.R_W));
  9193  0025AE  0E00               	movlw	0
  9194  0025B0  ECEB  F01D         	call	i2_WriteI2C
  9195  0025B4                     i2l5364:
  9196  0025B4  A4C7               	btfss	4039,2,c	;volatile
  9197  0025B6  D003               	goto	i2u616_40
  9198  0025B8  6A03               	clrf	??_getTemperature& (0+255),c
  9199  0025BA  2A03               	incf	??_getTemperature& (0+255),f,c
  9200  0025BC  D001               	goto	i2u616_48
  9201  0025BE                     i2u616_40:
  9202  0025BE  6A03               	clrf	??_getTemperature& (0+255),c
  9203  0025C0                     i2u616_48:
  9204  0025C0  50C5               	movf	4037,w,c	;volatile
  9205  0025C2  0B1F               	andlw	31
  9206  0025C4  1003               	iorwf	??_getTemperature,w,c
  9207  0025C6  0900               	iorlw	0
  9208  0025C8  A4D8               	btfss	status,2,c
  9209  0025CA  D7F4               	goto	i2l5364
  9210                           
  9211                           ;main.c: 405: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN); while ((SSPCON2 & 0x1F) | (SSP
      +                          STATbits.R_W));
  9212  0025CC  82C5               	bsf	4037,1,c	;volatile
  9213  0025CE                     i2l720:
  9214  0025CE  B2C5               	btfsc	4037,1,c	;volatile
  9215  0025D0  D7FE               	goto	i2l720
  9216  0025D2                     i2l5366:
  9217  0025D2  A4C7               	btfss	4039,2,c	;volatile
  9218  0025D4  D003               	goto	i2u619_40
  9219  0025D6  6A03               	clrf	??_getTemperature& (0+255),c
  9220  0025D8  2A03               	incf	??_getTemperature& (0+255),f,c
  9221  0025DA  D001               	goto	i2u619_48
  9222  0025DC                     i2u619_40:
  9223  0025DC  6A03               	clrf	??_getTemperature& (0+255),c
  9224  0025DE                     i2u619_48:
  9225  0025DE  50C5               	movf	4037,w,c	;volatile
  9226  0025E0  0B1F               	andlw	31
  9227  0025E2  1003               	iorwf	??_getTemperature,w,c
  9228  0025E4  0900               	iorlw	0
  9229  0025E6  A4D8               	btfss	status,2,c
  9230  0025E8  D7F4               	goto	i2l5366
  9231                           
  9232                           ;main.c: 406: WriteI2C(0x9a | 0x01); while ((SSPCON2 & 0x1F) | (SSPSTATbits.R_W));
  9233  0025EA  0E9B               	movlw	155
  9234  0025EC  ECEB  F01D         	call	i2_WriteI2C
  9235  0025F0                     i2l5370:
  9236  0025F0  A4C7               	btfss	4039,2,c	;volatile
  9237  0025F2  D003               	goto	i2u621_40
  9238  0025F4  6A03               	clrf	??_getTemperature& (0+255),c
  9239  0025F6  2A03               	incf	??_getTemperature& (0+255),f,c
  9240  0025F8  D001               	goto	i2u621_48
  9241  0025FA                     i2u621_40:
  9242  0025FA  6A03               	clrf	??_getTemperature& (0+255),c
  9243  0025FC                     i2u621_48:
  9244  0025FC  50C5               	movf	4037,w,c	;volatile
  9245  0025FE  0B1F               	andlw	31
  9246  002600  1003               	iorwf	??_getTemperature,w,c
  9247  002602  0900               	iorlw	0
  9248  002604  A4D8               	btfss	status,2,c
  9249  002606  D7F4               	goto	i2l5370
  9250                           
  9251                           ;main.c: 407: value = ReadI2C(); while ((SSPCON2 & 0x1F) | (SSPSTATbits.R_W));
  9252  002608  EC07  F021         	call	i2_ReadI2C	;wreg free
  9253  00260C  6E04               	movwf	getTemperature@value,c
  9254  00260E                     i2l5374:
  9255  00260E  A4C7               	btfss	4039,2,c	;volatile
  9256  002610  D003               	goto	i2u623_40
  9257  002612  6A03               	clrf	??_getTemperature& (0+255),c
  9258  002614  2A03               	incf	??_getTemperature& (0+255),f,c
  9259  002616  D001               	goto	i2u623_48
  9260  002618                     i2u623_40:
  9261  002618  6A03               	clrf	??_getTemperature& (0+255),c
  9262  00261A                     i2u623_48:
  9263  00261A  50C5               	movf	4037,w,c	;volatile
  9264  00261C  0B1F               	andlw	31
  9265  00261E  1003               	iorwf	??_getTemperature,w,c
  9266  002620  0900               	iorlw	0
  9267  002622  A4D8               	btfss	status,2,c
  9268  002624  D7F4               	goto	i2l5374
  9269                           
  9270                           ;main.c: 408: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN); while ((
      +                          SSPCON2 & 0x1F) | (SSPSTATbits.R_W));
  9271  002626  8AC5               	bsf	4037,5,c	;volatile
  9272  002628  88C5               	bsf	4037,4,c	;volatile
  9273  00262A                     i2l732:
  9274  00262A  B8C5               	btfsc	4037,4,c	;volatile
  9275  00262C  D7FE               	goto	i2l732
  9276  00262E                     i2l5376:
  9277  00262E  A4C7               	btfss	4039,2,c	;volatile
  9278  002630  D003               	goto	i2u626_40
  9279  002632  6A03               	clrf	??_getTemperature& (0+255),c
  9280  002634  2A03               	incf	??_getTemperature& (0+255),f,c
  9281  002636  D001               	goto	i2u626_48
  9282  002638                     i2u626_40:
  9283  002638  6A03               	clrf	??_getTemperature& (0+255),c
  9284  00263A                     i2u626_48:
  9285  00263A  50C5               	movf	4037,w,c	;volatile
  9286  00263C  0B1F               	andlw	31
  9287  00263E  1003               	iorwf	??_getTemperature,w,c
  9288  002640  0900               	iorlw	0
  9289  002642  A4D8               	btfss	status,2,c
  9290  002644  D7F4               	goto	i2l5376
  9291                           
  9292                           ;main.c: 409: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  9293  002646  84C5               	bsf	4037,2,c	;volatile
  9294  002648                     i2l738:
  9295  002648  B4C5               	btfsc	4037,2,c	;volatile
  9296  00264A  D7FE               	goto	i2l738
  9297                           
  9298                           ;main.c: 411: return value;
  9299  00264C  5004               	movf	getTemperature@value,w,c
  9300  00264E  0012               	return	
  9301  002650                     __end_of_getTemperature:
  9302                           	opt stack 0
  9303                           tosu	equ	0xFFF
  9304                           tosh	equ	0xFFE
  9305                           tosl	equ	0xFFD
  9306                           pclatu	equ	0xFFB
  9307                           pclath	equ	0xFFA
  9308                           tblptru	equ	0xFF8
  9309                           tblptrh	equ	0xFF7
  9310                           tblptrl	equ	0xFF6
  9311                           tablat	equ	0xFF5
  9312                           prodh	equ	0xFF4
  9313                           prodl	equ	0xFF3
  9314                           intcon	equ	0xFF2
  9315                           intcon2	equ	0xFF1
  9316                           indf0	equ	0xFEF
  9317                           postinc0	equ	0xFEE
  9318                           fsr0h	equ	0xFEA
  9319                           fsr0l	equ	0xFE9
  9320                           wreg	equ	0xFE8
  9321                           postdec1	equ	0xFE5
  9322                           fsr1h	equ	0xFE2
  9323                           fsr1l	equ	0xFE1
  9324                           indf2	equ	0xFDF
  9325                           postinc2	equ	0xFDE
  9326                           postdec2	equ	0xFDD
  9327                           fsr2h	equ	0xFDA
  9328                           fsr2l	equ	0xFD9
  9329                           status	equ	0xFD8
  9330                           
  9331 ;; *************** function _getLuminosity *****************
  9332 ;; Defined at:
  9333 ;;		line 368 in file "main.c"
  9334 ;; Parameters:    Size  Location     Type
  9335 ;;		None
  9336 ;; Auto vars:     Size  Location     Type
  9337 ;;  result          3   35[COMRAM] float 
  9338 ;;  read            2   43[COMRAM] int 
  9339 ;;  level           2   41[COMRAM] int 
  9340 ;; Return value:  Size  Location     Type
  9341 ;;                  2   33[COMRAM] int 
  9342 ;; Registers used:
  9343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9344 ;; Tracked objects:
  9345 ;;		On entry : 0/0
  9346 ;;		On exit  : 0/0
  9347 ;;		Unchanged: 0/0
  9348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9349 ;;      Params:         2       0       0       0       0       0       0
  9350 ;;      Locals:        10       0       0       0       0       0       0
  9351 ;;      Temps:          0       0       0       0       0       0       0
  9352 ;;      Totals:        12       0       0       0       0       0       0
  9353 ;;Total ram usage:       12 bytes
  9354 ;; Hardware stack levels used:    1
  9355 ;; Hardware stack levels required when called:    3
  9356 ;; This function calls:
  9357 ;;		_BusyADC
  9358 ;;		_CloseADC
  9359 ;;		_ConvertADC
  9360 ;;		_Delay10TCYx
  9361 ;;		_OpenADC
  9362 ;;		_ReadADC
  9363 ;;		___awdiv
  9364 ;;		___awtoft
  9365 ;;		___fttol
  9366 ;;		_floor
  9367 ;; This function is called by:
  9368 ;;		_timer1_isr
  9369 ;; This function uses a non-reentrant model
  9370 ;;
  9371                           
  9372                           	psect	text40
  9373  003458                     __ptext40:
  9374                           	opt stack 0
  9375  003458                     _getLuminosity:
  9376                           	opt stack 20
  9377                           
  9378                           ;main.c: 370: int level, read;
  9379                           ;main.c: 371: float result;
  9380                           ;main.c: 373: OpenADC( 0b10101111 & 0b11111111 & 0b11111110 & 0b11111011,
  9381                           ;main.c: 374: 0b10000111 & 0b11111100 & 0b01111111, 0x0E );
  9382                           
  9383                           ;incstack = 0
  9384  003458  0E04               	movlw	4
  9385  00345A  6E01               	movwf	OpenADC@config2,c
  9386  00345C  0E0E               	movlw	14
  9387  00345E  6E02               	movwf	OpenADC@portconfig,c
  9388  003460  0EAA               	movlw	170
  9389  003462  EC1B  F01E         	call	_OpenADC
  9390                           
  9391                           ;main.c: 375: Delay10TCYx( 5 );
  9392  003466  0E05               	movlw	5
  9393  003468  6E01               	movwf	Delay10TCYx@n,c
  9394  00346A  0E00               	movlw	0
  9395  00346C  6E02               	movwf	Delay10TCYx@n+1,c
  9396  00346E  0E00               	movlw	0
  9397  003470  6E03               	movwf	Delay10TCYx@n+2,c
  9398  003472  0E00               	movlw	0
  9399  003474  6E04               	movwf	Delay10TCYx@n+3,c
  9400  003476  EC8C  F020         	call	_Delay10TCYx	;wreg free
  9401                           
  9402                           ;main.c: 376: ConvertADC();
  9403  00347A  ECC2  F021         	call	_ConvertADC	;wreg free
  9404  00347E                     i2l5314:
  9405  00347E  ECA1  F021         	call	_BusyADC	;wreg free
  9406  003482  0900               	iorlw	0
  9407  003484  A4D8               	btfss	status,2,c
  9408  003486  D7FB               	goto	i2l5314
  9409                           
  9410                           ;main.c: 378: read = ReadADC();
  9411  003488  EC94  F021         	call	_ReadADC	;wreg free
  9412  00348C  C001  F02C         	movff	?_ReadADC,getLuminosity@read
  9413  003490  C002  F02D         	movff	?_ReadADC+1,getLuminosity@read+1
  9414                           
  9415                           ;main.c: 379: CloseADC();
  9416  003494  ECB7  F021         	call	_CloseADC	;wreg free
  9417                           
  9418                           ;main.c: 381: result = read/171;
  9419  003498  0E00               	movlw	0
  9420  00349A  6E04               	movwf	___awdiv@divisor+1,c
  9421  00349C  0EAB               	movlw	171
  9422  00349E  6E03               	movwf	___awdiv@divisor,c
  9423  0034A0  C02C  F001         	movff	getLuminosity@read,___awdiv@dividend
  9424  0034A4  C02D  F002         	movff	getLuminosity@read+1,___awdiv@dividend+1
  9425  0034A8  ECB1  F01B         	call	___awdiv	;wreg free
  9426  0034AC  C001  F009         	movff	?___awdiv,___awtoft@c
  9427  0034B0  C002  F00A         	movff	?___awdiv+1,___awtoft@c+1
  9428  0034B4  ECC4  F01F         	call	___awtoft	;wreg free
  9429  0034B8  C009  F024         	movff	?___awtoft,getLuminosity@result
  9430  0034BC  C00A  F025         	movff	?___awtoft+1,getLuminosity@result+1
  9431  0034C0  C00B  F026         	movff	?___awtoft+2,getLuminosity@result+2
  9432                           
  9433                           ;main.c: 382: level = floor(result);
  9434  0034C4  C024  F01A         	movff	getLuminosity@result,floor@x
  9435  0034C8  C025  F01B         	movff	getLuminosity@result+1,floor@x+1
  9436  0034CC  C026  F01C         	movff	getLuminosity@result+2,floor@x+2
  9437  0034D0  EC3B  F018         	call	_floor	;wreg free
  9438  0034D4  C01A  F027         	movff	?_floor,_getLuminosity$2787
  9439  0034D8  C01B  F028         	movff	?_floor+1,_getLuminosity$2787+1
  9440  0034DC  C01C  F029         	movff	?_floor+2,_getLuminosity$2787+2
  9441                           
  9442                           ;main.c: 382: level = floor(result);
  9443  0034E0  C027  F001         	movff	_getLuminosity$2787,___fttol@f1
  9444  0034E4  C028  F002         	movff	_getLuminosity$2787+1,___fttol@f1+1
  9445  0034E8  C029  F003         	movff	_getLuminosity$2787+2,___fttol@f1+2
  9446  0034EC  EC4F  F017         	call	___fttol	;wreg free
  9447  0034F0  C001  F02A         	movff	?___fttol,getLuminosity@level
  9448  0034F4  C002  F02B         	movff	?___fttol+1,getLuminosity@level+1
  9449                           
  9450                           ;main.c: 383: return level;
  9451  0034F8  C02A  F022         	movff	getLuminosity@level,?_getLuminosity
  9452  0034FC  C02B  F023         	movff	getLuminosity@level+1,?_getLuminosity+1
  9453  003500  0012               	return	
  9454  003502                     __end_of_getLuminosity:
  9455                           	opt stack 0
  9456                           tosu	equ	0xFFF
  9457                           tosh	equ	0xFFE
  9458                           tosl	equ	0xFFD
  9459                           pclatu	equ	0xFFB
  9460                           pclath	equ	0xFFA
  9461                           tblptru	equ	0xFF8
  9462                           tblptrh	equ	0xFF7
  9463                           tblptrl	equ	0xFF6
  9464                           tablat	equ	0xFF5
  9465                           prodh	equ	0xFF4
  9466                           prodl	equ	0xFF3
  9467                           intcon	equ	0xFF2
  9468                           intcon2	equ	0xFF1
  9469                           indf0	equ	0xFEF
  9470                           postinc0	equ	0xFEE
  9471                           fsr0h	equ	0xFEA
  9472                           fsr0l	equ	0xFE9
  9473                           wreg	equ	0xFE8
  9474                           postdec1	equ	0xFE5
  9475                           fsr1h	equ	0xFE2
  9476                           fsr1l	equ	0xFE1
  9477                           indf2	equ	0xFDF
  9478                           postinc2	equ	0xFDE
  9479                           postdec2	equ	0xFDD
  9480                           fsr2h	equ	0xFDA
  9481                           fsr2l	equ	0xFD9
  9482                           status	equ	0xFD8
  9483                           
  9484 ;; *************** function _floor *****************
  9485 ;; Defined at:
  9486 ;;		line 13 in file "/opt/microchip/xc8/v1.41/sources/common/floor.c"
  9487 ;; Parameters:    Size  Location     Type
  9488 ;;  x               3   25[COMRAM] int 
  9489 ;; Auto vars:     Size  Location     Type
  9490 ;;  i               3   28[COMRAM] int 
  9491 ;;  expon           2   31[COMRAM] int 
  9492 ;; Return value:  Size  Location     Type
  9493 ;;                  3   25[COMRAM] int 
  9494 ;; Registers used:
  9495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9496 ;; Tracked objects:
  9497 ;;		On entry : 0/0
  9498 ;;		On exit  : 0/0
  9499 ;;		Unchanged: 0/0
  9500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9501 ;;      Params:         3       0       0       0       0       0       0
  9502 ;;      Locals:         5       0       0       0       0       0       0
  9503 ;;      Temps:          0       0       0       0       0       0       0
  9504 ;;      Totals:         8       0       0       0       0       0       0
  9505 ;;Total ram usage:        8 bytes
  9506 ;; Hardware stack levels used:    1
  9507 ;; Hardware stack levels required when called:    2
  9508 ;; This function calls:
  9509 ;;		___altoft
  9510 ;;		___ftadd
  9511 ;;		___ftge
  9512 ;;		___fttol
  9513 ;;		_frexp
  9514 ;; This function is called by:
  9515 ;;		_getLuminosity
  9516 ;; This function uses a non-reentrant model
  9517 ;;
  9518                           
  9519                           	psect	text41
  9520  003076                     __ptext41:
  9521                           	opt stack 0
  9522  003076                     _floor:
  9523                           	opt stack 20
  9524                           
  9525                           ;incstack = 0
  9526  003076  C01A  F001         	movff	floor@x,frexp@value
  9527  00307A  C01B  F002         	movff	floor@x+1,frexp@value+1
  9528  00307E  C01C  F003         	movff	floor@x+2,frexp@value+2
  9529  003082  0E20               	movlw	low floor@expon
  9530  003084  6E04               	movwf	frexp@eptr,c
  9531  003086  0E00               	movlw	high floor@expon
  9532  003088  6E05               	movwf	frexp@eptr+1,c
  9533  00308A  EC2F  F01C         	call	_frexp	;wreg free
  9534  00308E  AE21               	btfss	floor@expon+1,7,c
  9535  003090  D010               	goto	i2l4886
  9536  003092  AE1C               	btfss	floor@x+2,7,c
  9537  003094  D007               	goto	i2l4882
  9538  003096  0E00               	movlw	0
  9539  003098  6E1A               	movwf	?_floor,c
  9540  00309A  0E80               	movlw	128
  9541  00309C  6E1B               	movwf	?_floor+1,c
  9542  00309E  0EBF               	movlw	191
  9543  0030A0  6E1C               	movwf	?_floor+2,c
  9544  0030A2  0012               	return	
  9545  0030A4                     i2l4882:
  9546  0030A4  0E00               	movlw	0
  9547  0030A6  6E1A               	movwf	?_floor,c
  9548  0030A8  0E00               	movlw	0
  9549  0030AA  6E1B               	movwf	?_floor+1,c
  9550  0030AC  0E00               	movlw	0
  9551  0030AE  6E1C               	movwf	?_floor+2,c
  9552  0030B0  0012               	return	
  9553  0030B2                     i2l4886:
  9554  0030B2  5021               	movf	floor@expon+1,w,c
  9555  0030B4  E104               	bnz	i2u517_40
  9556  0030B6  0E15               	movlw	21
  9557  0030B8  5C20               	subwf	floor@expon,w,c
  9558  0030BA  A0D8               	btfss	status,0,c
  9559  0030BC  D007               	goto	i2l4890
  9560  0030BE                     i2u517_40:
  9561  0030BE  C01A  F01A         	movff	floor@x,?_floor
  9562  0030C2  C01B  F01B         	movff	floor@x+1,?_floor+1
  9563  0030C6  C01C  F01C         	movff	floor@x+2,?_floor+2
  9564  0030CA  0012               	return	
  9565  0030CC                     i2l4890:
  9566  0030CC  C01A  F001         	movff	floor@x,___fttol@f1
  9567  0030D0  C01B  F002         	movff	floor@x+1,___fttol@f1+1
  9568  0030D4  C01C  F003         	movff	floor@x+2,___fttol@f1+2
  9569  0030D8  EC4F  F017         	call	___fttol	;wreg free
  9570  0030DC  C001  F010         	movff	?___fttol,___altoft@c
  9571  0030E0  C002  F011         	movff	?___fttol+1,___altoft@c+1
  9572  0030E4  C003  F012         	movff	?___fttol+2,___altoft@c+2
  9573  0030E8  C004  F013         	movff	?___fttol+3,___altoft@c+3
  9574  0030EC  EC6B  F01C         	call	___altoft	;wreg free
  9575  0030F0  C010  F01D         	movff	?___altoft,floor@i
  9576  0030F4  C011  F01E         	movff	?___altoft+1,floor@i+1
  9577  0030F8  C012  F01F         	movff	?___altoft+2,floor@i+2
  9578  0030FC  C01A  F001         	movff	floor@x,___ftge@ff1
  9579  003100  C01B  F002         	movff	floor@x+1,___ftge@ff1+1
  9580  003104  C01C  F003         	movff	floor@x+2,___ftge@ff1+2
  9581  003108  C01D  F004         	movff	floor@i,___ftge@ff2
  9582  00310C  C01E  F005         	movff	floor@i+1,___ftge@ff2+1
  9583  003110  C01F  F006         	movff	floor@i+2,___ftge@ff2+2
  9584  003114  EC69  F01B         	call	___ftge	;wreg free
  9585  003118  B0D8               	btfsc	status,0,c
  9586  00311A  D015               	goto	i2l1345
  9587  00311C  C01D  F009         	movff	floor@i,___ftadd@f1
  9588  003120  C01E  F00A         	movff	floor@i+1,___ftadd@f1+1
  9589  003124  C01F  F00B         	movff	floor@i+2,___ftadd@f1+2
  9590  003128  0E00               	movlw	0
  9591  00312A  6E0C               	movwf	___ftadd@f2,c
  9592  00312C  0E80               	movlw	128
  9593  00312E  6E0D               	movwf	___ftadd@f2+1,c
  9594  003130  0EBF               	movlw	191
  9595  003132  6E0E               	movwf	___ftadd@f2+2,c
  9596  003134  EC1A  F014         	call	___ftadd	;wreg free
  9597  003138  C009  F01A         	movff	?___ftadd,?_floor
  9598  00313C  C00A  F01B         	movff	?___ftadd+1,?_floor+1
  9599  003140  C00B  F01C         	movff	?___ftadd+2,?_floor+2
  9600  003144  0012               	return	
  9601  003146                     i2l1345:
  9602  003146  C01D  F01A         	movff	floor@i,?_floor
  9603  00314A  C01E  F01B         	movff	floor@i+1,?_floor+1
  9604  00314E  C01F  F01C         	movff	floor@i+2,?_floor+2
  9605  003152  0012               	return		;funcret
  9606  003154                     __end_of_floor:
  9607                           	opt stack 0
  9608                           tosu	equ	0xFFF
  9609                           tosh	equ	0xFFE
  9610                           tosl	equ	0xFFD
  9611                           pclatu	equ	0xFFB
  9612                           pclath	equ	0xFFA
  9613                           tblptru	equ	0xFF8
  9614                           tblptrh	equ	0xFF7
  9615                           tblptrl	equ	0xFF6
  9616                           tablat	equ	0xFF5
  9617                           prodh	equ	0xFF4
  9618                           prodl	equ	0xFF3
  9619                           intcon	equ	0xFF2
  9620                           intcon2	equ	0xFF1
  9621                           indf0	equ	0xFEF
  9622                           postinc0	equ	0xFEE
  9623                           fsr0h	equ	0xFEA
  9624                           fsr0l	equ	0xFE9
  9625                           wreg	equ	0xFE8
  9626                           postdec1	equ	0xFE5
  9627                           fsr1h	equ	0xFE2
  9628                           fsr1l	equ	0xFE1
  9629                           indf2	equ	0xFDF
  9630                           postinc2	equ	0xFDE
  9631                           postdec2	equ	0xFDD
  9632                           fsr2h	equ	0xFDA
  9633                           fsr2l	equ	0xFD9
  9634                           status	equ	0xFD8
  9635                           
  9636 ;; *************** function _frexp *****************
  9637 ;; Defined at:
  9638 ;;		line 254 in file "/opt/microchip/xc8/v1.41/sources/common/frexp.c"
  9639 ;; Parameters:    Size  Location     Type
  9640 ;;  value           3    0[COMRAM] int 
  9641 ;;  eptr            2    3[COMRAM] PTR int 
  9642 ;;		 -> floor@expon(2), 
  9643 ;; Auto vars:     Size  Location     Type
  9644 ;;		None
  9645 ;; Return value:  Size  Location     Type
  9646 ;;                  3    0[COMRAM] PTR int 
  9647 ;; Registers used:
  9648 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9649 ;; Tracked objects:
  9650 ;;		On entry : 0/0
  9651 ;;		On exit  : 0/0
  9652 ;;		Unchanged: 0/0
  9653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9654 ;;      Params:         5       0       0       0       0       0       0
  9655 ;;      Locals:         0       0       0       0       0       0       0
  9656 ;;      Temps:          2       0       0       0       0       0       0
  9657 ;;      Totals:         7       0       0       0       0       0       0
  9658 ;;Total ram usage:        7 bytes
  9659 ;; Hardware stack levels used:    1
  9660 ;; This function calls:
  9661 ;;		Nothing
  9662 ;; This function is called by:
  9663 ;;		_floor
  9664 ;; This function uses a non-reentrant model
  9665 ;;
  9666                           
  9667                           	psect	text42
  9668  00385E                     __ptext42:
  9669                           	opt stack 0
  9670  00385E                     _frexp:
  9671                           	opt stack 21
  9672                           
  9673                           ;incstack = 0
  9674  00385E  5001               	movf	frexp@value,w,c
  9675  003860  1002               	iorwf	frexp@value+1,w,c
  9676  003862  1003               	iorwf	frexp@value+2,w,c
  9677  003864  A4D8               	btfss	status,2,c
  9678  003866  D009               	goto	i2l4522
  9679  003868  C004  FFD9         	movff	frexp@eptr,fsr2l
  9680  00386C  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  9681  003870  0E00               	movlw	0
  9682  003872  6EDE               	movwf	postinc2,c
  9683  003874  0E00               	movlw	0
  9684  003876  6EDD               	movwf	postdec2,c
  9685                           
  9686                           ;	Return value of _frexp is never used
  9687  003878  0012               	return	
  9688  00387A                     i2l4522:
  9689  00387A  5003               	movf	frexp@value+2,w,c
  9690  00387C  0B7F               	andlw	127
  9691  00387E  6E06               	movwf	??_frexp& (0+255),c
  9692  003880  6A07               	clrf	(??_frexp+1)& (0+255),c
  9693  003882  90D8               	bcf	status,0,c
  9694  003884  3606               	rlcf	??_frexp,f,c
  9695  003886  3607               	rlcf	??_frexp+1,f,c
  9696  003888  C004  FFD9         	movff	frexp@eptr,fsr2l
  9697  00388C  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  9698  003890  C006  FFDE         	movff	??_frexp,postinc2
  9699  003894  C007  FFDD         	movff	??_frexp+1,postdec2
  9700  003898  AE02               	btfss	frexp@value+1,7,c
  9701  00389A  D003               	goto	i2u477_40
  9702  00389C  6A06               	clrf	??_frexp& (0+255),c
  9703  00389E  2A06               	incf	??_frexp& (0+255),f,c
  9704  0038A0  D001               	goto	i2u477_48
  9705  0038A2                     i2u477_40:
  9706  0038A2  6A06               	clrf	??_frexp& (0+255),c
  9707  0038A4                     i2u477_48:
  9708  0038A4  5006               	movf	??_frexp,w,c
  9709  0038A6  C004  FFD9         	movff	frexp@eptr,fsr2l
  9710  0038AA  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  9711  0038AE  12DE               	iorwf	postinc2,f,c
  9712  0038B0  0E00               	movlw	0
  9713  0038B2  12DD               	iorwf	postdec2,f,c
  9714  0038B4  C004  FFD9         	movff	frexp@eptr,fsr2l
  9715  0038B8  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  9716  0038BC  0E82               	movlw	130
  9717  0038BE  26DE               	addwf	postinc2,f,c
  9718  0038C0  0EFF               	movlw	255
  9719  0038C2  22DD               	addwfc	postdec2,f,c
  9720  0038C4  8003               	bsf	frexp@value+2,0,c
  9721  0038C6  8203               	bsf	frexp@value+2,1,c
  9722  0038C8  8403               	bsf	frexp@value+2,2,c
  9723  0038CA  8603               	bsf	frexp@value+2,3,c
  9724  0038CC  8803               	bsf	frexp@value+2,4,c
  9725  0038CE  8A03               	bsf	frexp@value+2,5,c
  9726  0038D0  9C03               	bcf	frexp@value+2,6,c
  9727  0038D2  9E02               	bcf	frexp@value+1,7,c
  9728  0038D4  0012               	return	
  9729  0038D6                     __end_of_frexp:
  9730                           	opt stack 0
  9731                           tosu	equ	0xFFF
  9732                           tosh	equ	0xFFE
  9733                           tosl	equ	0xFFD
  9734                           pclatu	equ	0xFFB
  9735                           pclath	equ	0xFFA
  9736                           tblptru	equ	0xFF8
  9737                           tblptrh	equ	0xFF7
  9738                           tblptrl	equ	0xFF6
  9739                           tablat	equ	0xFF5
  9740                           prodh	equ	0xFF4
  9741                           prodl	equ	0xFF3
  9742                           intcon	equ	0xFF2
  9743                           intcon2	equ	0xFF1
  9744                           indf0	equ	0xFEF
  9745                           postinc0	equ	0xFEE
  9746                           fsr0h	equ	0xFEA
  9747                           fsr0l	equ	0xFE9
  9748                           wreg	equ	0xFE8
  9749                           postdec1	equ	0xFE5
  9750                           fsr1h	equ	0xFE2
  9751                           fsr1l	equ	0xFE1
  9752                           indf2	equ	0xFDF
  9753                           postinc2	equ	0xFDE
  9754                           postdec2	equ	0xFDD
  9755                           fsr2h	equ	0xFDA
  9756                           fsr2l	equ	0xFD9
  9757                           status	equ	0xFD8
  9758                           
  9759 ;; *************** function ___fttol *****************
  9760 ;; Defined at:
  9761 ;;		line 44 in file "/opt/microchip/xc8/v1.41/sources/common/fttol.c"
  9762 ;; Parameters:    Size  Location     Type
  9763 ;;  f1              3    0[COMRAM] float 
  9764 ;; Auto vars:     Size  Location     Type
  9765 ;;  lval            4   10[COMRAM] unsigned long 
  9766 ;;  exp1            1   14[COMRAM] unsigned char 
  9767 ;;  sign1           1    9[COMRAM] unsigned char 
  9768 ;; Return value:  Size  Location     Type
  9769 ;;                  4    0[COMRAM] long 
  9770 ;; Registers used:
  9771 ;;		wreg, status,2, status,0
  9772 ;; Tracked objects:
  9773 ;;		On entry : 0/0
  9774 ;;		On exit  : 0/0
  9775 ;;		Unchanged: 0/0
  9776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9777 ;;      Params:         4       0       0       0       0       0       0
  9778 ;;      Locals:         6       0       0       0       0       0       0
  9779 ;;      Temps:          5       0       0       0       0       0       0
  9780 ;;      Totals:        15       0       0       0       0       0       0
  9781 ;;Total ram usage:       15 bytes
  9782 ;; Hardware stack levels used:    1
  9783 ;; This function calls:
  9784 ;;		Nothing
  9785 ;; This function is called by:
  9786 ;;		_getLuminosity
  9787 ;;		_floor
  9788 ;; This function uses a non-reentrant model
  9789 ;;
  9790                           
  9791                           	psect	text43
  9792  002E9E                     __ptext43:
  9793                           	opt stack 0
  9794  002E9E                     ___fttol:
  9795                           	opt stack 21
  9796                           
  9797                           ;incstack = 0
  9798  002E9E  C003  F005         	movff	___fttol@f1+2,??___fttol
  9799  002EA2  6A06               	clrf	(??___fttol+1)& (0+255),c
  9800  002EA4  6A07               	clrf	(??___fttol+2)& (0+255),c
  9801  002EA6  3402               	rlcf	___fttol@f1+1,w,c
  9802  002EA8  3605               	rlcf	??___fttol& (0+255),f,c
  9803  002EAA  E301               	bnc	u481_41
  9804  002EAC  8006               	bsf	(??___fttol+1)& (0+255),0,c
  9805  002EAE                     u481_41:
  9806  002EAE  5005               	movf	??___fttol,w,c
  9807  002EB0  6E0F               	movwf	___fttol@exp1,c
  9808  002EB2  500F               	movf	___fttol@exp1,w,c
  9809  002EB4  A4D8               	btfss	status,2,c
  9810  002EB6  D009               	goto	i2l4556
  9811  002EB8  0E00               	movlw	0
  9812  002EBA  6E01               	movwf	?___fttol,c
  9813  002EBC  0E00               	movlw	0
  9814  002EBE  6E02               	movwf	?___fttol+1,c
  9815  002EC0  0E00               	movlw	0
  9816  002EC2  6E03               	movwf	?___fttol+2,c
  9817  002EC4  0E00               	movlw	0
  9818  002EC6  6E04               	movwf	?___fttol+3,c
  9819  002EC8  0012               	return	
  9820  002ECA                     i2l4556:
  9821  002ECA  0E17               	movlw	23
  9822  002ECC  6E05               	movwf	??___fttol& (0+255),c
  9823  002ECE  C001  F006         	movff	___fttol@f1,??___fttol+1
  9824  002ED2  C002  F007         	movff	___fttol@f1+1,??___fttol+2
  9825  002ED6  C003  F008         	movff	___fttol@f1+2,??___fttol+3
  9826  002EDA  2805               	incf	??___fttol,w,c
  9827  002EDC  6E09               	movwf	(??___fttol+4)& (0+255),c
  9828  002EDE  D004               	goto	i2u483_40
  9829  002EE0                     i2u483_45:
  9830  002EE0  90D8               	bcf	status,0,c
  9831  002EE2  3208               	rrcf	??___fttol+3,f,c
  9832  002EE4  3207               	rrcf	??___fttol+2,f,c
  9833  002EE6  3206               	rrcf	??___fttol+1,f,c
  9834  002EE8                     i2u483_40:
  9835  002EE8  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
  9836  002EEA  D7FA               	goto	i2u483_45
  9837  002EEC  5006               	movf	??___fttol+1,w,c
  9838  002EEE  6E0A               	movwf	___fttol@sign1,c
  9839  002EF0  8E02               	bsf	___fttol@f1+1,7,c
  9840  002EF2  0EFF               	movlw	255
  9841  002EF4  1601               	andwf	___fttol@f1,f,c
  9842  002EF6  0EFF               	movlw	255
  9843  002EF8  1602               	andwf	___fttol@f1+1,f,c
  9844  002EFA  0E00               	movlw	0
  9845  002EFC  1603               	andwf	___fttol@f1+2,f,c
  9846  002EFE  5001               	movf	___fttol@f1,w,c
  9847  002F00  6E0B               	movwf	___fttol@lval,c
  9848  002F02  5002               	movf	___fttol@f1+1,w,c
  9849  002F04  6E0C               	movwf	___fttol@lval+1,c
  9850  002F06  5003               	movf	___fttol@f1+2,w,c
  9851  002F08  6E0D               	movwf	___fttol@lval+2,c
  9852  002F0A  6A0E               	clrf	___fttol@lval+3,c
  9853  002F0C  0E8E               	movlw	142
  9854  002F0E  5E0F               	subwf	___fttol@exp1,f,c
  9855  002F10  AE0F               	btfss	___fttol@exp1,7,c
  9856  002F12  D016               	goto	i2l4578
  9857  002F14  500F               	movf	___fttol@exp1,w,c
  9858  002F16  0A80               	xorlw	128
  9859  002F18  0F8F               	addlw	143
  9860  002F1A  B0D8               	btfsc	status,0,c
  9861  002F1C  D009               	goto	i2l4574
  9862  002F1E  0E00               	movlw	0
  9863  002F20  6E01               	movwf	?___fttol,c
  9864  002F22  0E00               	movlw	0
  9865  002F24  6E02               	movwf	?___fttol+1,c
  9866  002F26  0E00               	movlw	0
  9867  002F28  6E03               	movwf	?___fttol+2,c
  9868  002F2A  0E00               	movlw	0
  9869  002F2C  6E04               	movwf	?___fttol+3,c
  9870  002F2E  0012               	return	
  9871  002F30                     i2l4574:
  9872  002F30  90D8               	bcf	status,0,c
  9873  002F32  320E               	rrcf	___fttol@lval+3,f,c
  9874  002F34  320D               	rrcf	___fttol@lval+2,f,c
  9875  002F36  320C               	rrcf	___fttol@lval+1,f,c
  9876  002F38  320B               	rrcf	___fttol@lval,f,c
  9877  002F3A  3E0F               	incfsz	___fttol@exp1,f,c
  9878  002F3C  D7F9               	goto	i2l4574
  9879  002F3E  D015               	goto	i2l4588
  9880  002F40                     i2l4578:
  9881  002F40  0E17               	movlw	23
  9882  002F42  640F               	cpfsgt	___fttol@exp1,c
  9883  002F44  D00F               	goto	i2l4586
  9884  002F46  0E00               	movlw	0
  9885  002F48  6E01               	movwf	?___fttol,c
  9886  002F4A  0E00               	movlw	0
  9887  002F4C  6E02               	movwf	?___fttol+1,c
  9888  002F4E  0E00               	movlw	0
  9889  002F50  6E03               	movwf	?___fttol+2,c
  9890  002F52  0E00               	movlw	0
  9891  002F54  6E04               	movwf	?___fttol+3,c
  9892  002F56  0012               	return	
  9893  002F58                     i2l4584:
  9894  002F58  90D8               	bcf	status,0,c
  9895  002F5A  360B               	rlcf	___fttol@lval,f,c
  9896  002F5C  360C               	rlcf	___fttol@lval+1,f,c
  9897  002F5E  360D               	rlcf	___fttol@lval+2,f,c
  9898  002F60  360E               	rlcf	___fttol@lval+3,f,c
  9899  002F62  060F               	decf	___fttol@exp1,f,c
  9900  002F64                     i2l4586:
  9901  002F64  500F               	movf	___fttol@exp1,w,c
  9902  002F66  A4D8               	btfss	status,2,c
  9903  002F68  D7F7               	goto	i2l4584
  9904  002F6A                     i2l4588:
  9905  002F6A  500A               	movf	___fttol@sign1,w,c
  9906  002F6C  B4D8               	btfsc	status,2,c
  9907  002F6E  D008               	goto	i2l4592
  9908  002F70  1E0E               	comf	___fttol@lval+3,f,c
  9909  002F72  1E0D               	comf	___fttol@lval+2,f,c
  9910  002F74  1E0C               	comf	___fttol@lval+1,f,c
  9911  002F76  6C0B               	negf	___fttol@lval,c
  9912  002F78  0E00               	movlw	0
  9913  002F7A  220C               	addwfc	___fttol@lval+1,f,c
  9914  002F7C  220D               	addwfc	___fttol@lval+2,f,c
  9915  002F7E  220E               	addwfc	___fttol@lval+3,f,c
  9916  002F80                     i2l4592:
  9917  002F80  C00B  F001         	movff	___fttol@lval,?___fttol
  9918  002F84  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
  9919  002F88  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
  9920  002F8C  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
  9921  002F90  0012               	return	
  9922  002F92                     __end_of___fttol:
  9923                           	opt stack 0
  9924                           tosu	equ	0xFFF
  9925                           tosh	equ	0xFFE
  9926                           tosl	equ	0xFFD
  9927                           pclatu	equ	0xFFB
  9928                           pclath	equ	0xFFA
  9929                           tblptru	equ	0xFF8
  9930                           tblptrh	equ	0xFF7
  9931                           tblptrl	equ	0xFF6
  9932                           tablat	equ	0xFF5
  9933                           prodh	equ	0xFF4
  9934                           prodl	equ	0xFF3
  9935                           intcon	equ	0xFF2
  9936                           intcon2	equ	0xFF1
  9937                           indf0	equ	0xFEF
  9938                           postinc0	equ	0xFEE
  9939                           fsr0h	equ	0xFEA
  9940                           fsr0l	equ	0xFE9
  9941                           wreg	equ	0xFE8
  9942                           postdec1	equ	0xFE5
  9943                           fsr1h	equ	0xFE2
  9944                           fsr1l	equ	0xFE1
  9945                           indf2	equ	0xFDF
  9946                           postinc2	equ	0xFDE
  9947                           postdec2	equ	0xFDD
  9948                           fsr2h	equ	0xFDA
  9949                           fsr2l	equ	0xFD9
  9950                           status	equ	0xFD8
  9951                           
  9952 ;; *************** function ___ftge *****************
  9953 ;; Defined at:
  9954 ;;		line 4 in file "/opt/microchip/xc8/v1.41/sources/common/ftge.c"
  9955 ;; Parameters:    Size  Location     Type
  9956 ;;  ff1             3    0[COMRAM] float 
  9957 ;;  ff2             3    3[COMRAM] float 
  9958 ;; Auto vars:     Size  Location     Type
  9959 ;;		None
  9960 ;; Return value:  Size  Location     Type
  9961 ;;		None               void
  9962 ;; Registers used:
  9963 ;;		wreg, status,2, status,0
  9964 ;; Tracked objects:
  9965 ;;		On entry : 0/0
  9966 ;;		On exit  : 0/0
  9967 ;;		Unchanged: 0/0
  9968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9969 ;;      Params:         6       0       0       0       0       0       0
  9970 ;;      Locals:         0       0       0       0       0       0       0
  9971 ;;      Temps:          3       0       0       0       0       0       0
  9972 ;;      Totals:         9       0       0       0       0       0       0
  9973 ;;Total ram usage:        9 bytes
  9974 ;; Hardware stack levels used:    1
  9975 ;; This function calls:
  9976 ;;		Nothing
  9977 ;; This function is called by:
  9978 ;;		_floor
  9979 ;; This function uses a non-reentrant model
  9980 ;;
  9981                           
  9982                           	psect	text44
  9983  0036D2                     __ptext44:
  9984                           	opt stack 0
  9985  0036D2                     ___ftge:
  9986                           	opt stack 21
  9987                           
  9988                           ;incstack = 0
  9989  0036D2  AE03               	btfss	___ftge@ff1+2,7,c
  9990  0036D4  D016               	goto	i2l4536
  9991  0036D6  C001  F007         	movff	___ftge@ff1,??___ftge
  9992  0036DA  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  9993  0036DE  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  9994  0036E2  1E07               	comf	??___ftge,f,c
  9995  0036E4  1E08               	comf	??___ftge+1,f,c
  9996  0036E6  1E09               	comf	??___ftge+2,f,c
  9997  0036E8  2A07               	incf	??___ftge,f,c
  9998  0036EA  0E00               	movlw	0
  9999  0036EC  2208               	addwfc	??___ftge+1,f,c
 10000  0036EE  2209               	addwfc	??___ftge+2,f,c
 10001  0036F0  0E00               	movlw	0
 10002  0036F2  2407               	addwf	??___ftge,w,c
 10003  0036F4  6E01               	movwf	___ftge@ff1,c
 10004  0036F6  0E00               	movlw	0
 10005  0036F8  2008               	addwfc	??___ftge+1,w,c
 10006  0036FA  6E02               	movwf	___ftge@ff1+1,c
 10007  0036FC  0E80               	movlw	128
 10008  0036FE  2009               	addwfc	??___ftge+2,w,c
 10009  003700  6E03               	movwf	___ftge@ff1+2,c
 10010  003702                     i2l4536:
 10011  003702  AE06               	btfss	___ftge@ff2+2,7,c
 10012  003704  D016               	goto	i2l4540
 10013  003706  C004  F007         	movff	___ftge@ff2,??___ftge
 10014  00370A  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
 10015  00370E  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
 10016  003712  1E07               	comf	??___ftge,f,c
 10017  003714  1E08               	comf	??___ftge+1,f,c
 10018  003716  1E09               	comf	??___ftge+2,f,c
 10019  003718  2A07               	incf	??___ftge,f,c
 10020  00371A  0E00               	movlw	0
 10021  00371C  2208               	addwfc	??___ftge+1,f,c
 10022  00371E  2209               	addwfc	??___ftge+2,f,c
 10023  003720  0E00               	movlw	0
 10024  003722  2407               	addwf	??___ftge,w,c
 10025  003724  6E04               	movwf	___ftge@ff2,c
 10026  003726  0E00               	movlw	0
 10027  003728  2008               	addwfc	??___ftge+1,w,c
 10028  00372A  6E05               	movwf	___ftge@ff2+1,c
 10029  00372C  0E80               	movlw	128
 10030  00372E  2009               	addwfc	??___ftge+2,w,c
 10031  003730  6E06               	movwf	___ftge@ff2+2,c
 10032  003732                     i2l4540:
 10033  003732  0E00               	movlw	0
 10034  003734  1A01               	xorwf	___ftge@ff1,f,c
 10035  003736  0E00               	movlw	0
 10036  003738  1A02               	xorwf	___ftge@ff1+1,f,c
 10037  00373A  0E80               	movlw	128
 10038  00373C  1A03               	xorwf	___ftge@ff1+2,f,c
 10039  00373E  0E00               	movlw	0
 10040  003740  1A04               	xorwf	___ftge@ff2,f,c
 10041  003742  0E00               	movlw	0
 10042  003744  1A05               	xorwf	___ftge@ff2+1,f,c
 10043  003746  0E80               	movlw	128
 10044  003748  1A06               	xorwf	___ftge@ff2+2,f,c
 10045  00374A  5004               	movf	___ftge@ff2,w,c
 10046  00374C  5C01               	subwf	___ftge@ff1,w,c
 10047  00374E  5005               	movf	___ftge@ff2+1,w,c
 10048  003750  5802               	subwfb	___ftge@ff1+1,w,c
 10049  003752  5006               	movf	___ftge@ff2+2,w,c
 10050  003754  5803               	subwfb	___ftge@ff1+2,w,c
 10051  003756  B0D8               	btfsc	status,0,c
 10052  003758  D002               	goto	i2l4546
 10053  00375A  90D8               	bcf	status,0,c
 10054  00375C  0012               	return	
 10055  00375E                     i2l4546:
 10056  00375E  80D8               	bsf	status,0,c
 10057  003760  0012               	return	
 10058  003762                     __end_of___ftge:
 10059                           	opt stack 0
 10060                           tosu	equ	0xFFF
 10061                           tosh	equ	0xFFE
 10062                           tosl	equ	0xFFD
 10063                           pclatu	equ	0xFFB
 10064                           pclath	equ	0xFFA
 10065                           tblptru	equ	0xFF8
 10066                           tblptrh	equ	0xFF7
 10067                           tblptrl	equ	0xFF6
 10068                           tablat	equ	0xFF5
 10069                           prodh	equ	0xFF4
 10070                           prodl	equ	0xFF3
 10071                           intcon	equ	0xFF2
 10072                           intcon2	equ	0xFF1
 10073                           indf0	equ	0xFEF
 10074                           postinc0	equ	0xFEE
 10075                           fsr0h	equ	0xFEA
 10076                           fsr0l	equ	0xFE9
 10077                           wreg	equ	0xFE8
 10078                           postdec1	equ	0xFE5
 10079                           fsr1h	equ	0xFE2
 10080                           fsr1l	equ	0xFE1
 10081                           indf2	equ	0xFDF
 10082                           postinc2	equ	0xFDE
 10083                           postdec2	equ	0xFDD
 10084                           fsr2h	equ	0xFDA
 10085                           fsr2l	equ	0xFD9
 10086                           status	equ	0xFD8
 10087                           
 10088 ;; *************** function ___ftadd *****************
 10089 ;; Defined at:
 10090 ;;		line 86 in file "/opt/microchip/xc8/v1.41/sources/common/ftadd.c"
 10091 ;; Parameters:    Size  Location     Type
 10092 ;;  f1              3    8[COMRAM] float 
 10093 ;;  f2              3   11[COMRAM] float 
 10094 ;; Auto vars:     Size  Location     Type
 10095 ;;  exp1            1   19[COMRAM] unsigned char 
 10096 ;;  exp2            1   18[COMRAM] unsigned char 
 10097 ;;  sign            1   17[COMRAM] unsigned char 
 10098 ;; Return value:  Size  Location     Type
 10099 ;;                  3    8[COMRAM] float 
 10100 ;; Registers used:
 10101 ;;		wreg, status,2, status,0, cstack
 10102 ;; Tracked objects:
 10103 ;;		On entry : 0/0
 10104 ;;		On exit  : 0/0
 10105 ;;		Unchanged: 0/0
 10106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10107 ;;      Params:         6       0       0       0       0       0       0
 10108 ;;      Locals:         3       0       0       0       0       0       0
 10109 ;;      Temps:          3       0       0       0       0       0       0
 10110 ;;      Totals:        12       0       0       0       0       0       0
 10111 ;;Total ram usage:       12 bytes
 10112 ;; Hardware stack levels used:    1
 10113 ;; Hardware stack levels required when called:    1
 10114 ;; This function calls:
 10115 ;;		___ftpack
 10116 ;; This function is called by:
 10117 ;;		_floor
 10118 ;; This function uses a non-reentrant model
 10119 ;;
 10120                           
 10121                           	psect	text45
 10122  002834                     __ptext45:
 10123                           	opt stack 0
 10124  002834                     ___ftadd:
 10125                           	opt stack 20
 10126                           
 10127                           ;incstack = 0
 10128  002834  C00B  F00F         	movff	___ftadd@f1+2,??___ftadd
 10129  002838  6A10               	clrf	(??___ftadd+1)& (0+255),c
 10130  00283A  6A11               	clrf	(??___ftadd+2)& (0+255),c
 10131  00283C  340A               	rlcf	___ftadd@f1+1,w,c
 10132  00283E  360F               	rlcf	??___ftadd& (0+255),f,c
 10133  002840  E301               	bnc	u455_41
 10134  002842  8010               	bsf	(??___ftadd+1)& (0+255),0,c
 10135  002844                     u455_41:
 10136  002844  500F               	movf	??___ftadd,w,c
 10137  002846  6E14               	movwf	___ftadd@exp1,c
 10138  002848  C00E  F00F         	movff	___ftadd@f2+2,??___ftadd
 10139  00284C  6A10               	clrf	(??___ftadd+1)& (0+255),c
 10140  00284E  6A11               	clrf	(??___ftadd+2)& (0+255),c
 10141  002850  340D               	rlcf	___ftadd@f2+1,w,c
 10142  002852  360F               	rlcf	??___ftadd& (0+255),f,c
 10143  002854  E301               	bnc	u456_41
 10144  002856  8010               	bsf	(??___ftadd+1)& (0+255),0,c
 10145  002858                     u456_41:
 10146  002858  500F               	movf	??___ftadd,w,c
 10147  00285A  6E13               	movwf	___ftadd@exp2,c
 10148  00285C  5014               	movf	___ftadd@exp1,w,c
 10149  00285E  B4D8               	btfsc	status,2,c
 10150  002860  D00B               	goto	i2l1382
 10151  002862  5013               	movf	___ftadd@exp2,w,c
 10152  002864  5C14               	subwf	___ftadd@exp1,w,c
 10153  002866  B0D8               	btfsc	status,0,c
 10154  002868  D00E               	goto	i2l4454
 10155  00286A  5014               	movf	___ftadd@exp1,w,c
 10156  00286C  0800               	sublw	0
 10157  00286E  2413               	addwf	___ftadd@exp2,w,c
 10158  002870  6E0F               	movwf	??___ftadd& (0+255),c
 10159  002872  0E18               	movlw	24
 10160  002874  640F               	cpfsgt	??___ftadd,c
 10161  002876  D007               	goto	i2l4454
 10162  002878                     i2l1382:
 10163  002878  C00C  F009         	movff	___ftadd@f2,?___ftadd
 10164  00287C  C00D  F00A         	movff	___ftadd@f2+1,?___ftadd+1
 10165  002880  C00E  F00B         	movff	___ftadd@f2+2,?___ftadd+2
 10166  002884  0012               	return	
 10167  002886                     i2l4454:
 10168  002886  5013               	movf	___ftadd@exp2,w,c
 10169  002888  B4D8               	btfsc	status,2,c
 10170  00288A  D00B               	goto	i2l1386
 10171  00288C  5014               	movf	___ftadd@exp1,w,c
 10172  00288E  5C13               	subwf	___ftadd@exp2,w,c
 10173  002890  B0D8               	btfsc	status,0,c
 10174  002892  D00E               	goto	i2l4460
 10175  002894  5013               	movf	___ftadd@exp2,w,c
 10176  002896  0800               	sublw	0
 10177  002898  2414               	addwf	___ftadd@exp1,w,c
 10178  00289A  6E0F               	movwf	??___ftadd& (0+255),c
 10179  00289C  0E18               	movlw	24
 10180  00289E  640F               	cpfsgt	??___ftadd,c
 10181  0028A0  D007               	goto	i2l4460
 10182  0028A2                     i2l1386:
 10183  0028A2  C009  F009         	movff	___ftadd@f1,?___ftadd
 10184  0028A6  C00A  F00A         	movff	___ftadd@f1+1,?___ftadd+1
 10185  0028AA  C00B  F00B         	movff	___ftadd@f1+2,?___ftadd+2
 10186  0028AE  0012               	return	
 10187  0028B0                     i2l4460:
 10188  0028B0  0E06               	movlw	6
 10189  0028B2  6E12               	movwf	___ftadd@sign,c
 10190  0028B4  BE0B               	btfsc	___ftadd@f1+2,7,c
 10191  0028B6  8E12               	bsf	___ftadd@sign,7,c
 10192  0028B8  BE0E               	btfsc	___ftadd@f2+2,7,c
 10193  0028BA  8C12               	bsf	___ftadd@sign,6,c
 10194  0028BC  8E0A               	bsf	___ftadd@f1+1,7,c
 10195  0028BE  0EFF               	movlw	255
 10196  0028C0  1609               	andwf	___ftadd@f1,f,c
 10197  0028C2  0EFF               	movlw	255
 10198  0028C4  160A               	andwf	___ftadd@f1+1,f,c
 10199  0028C6  0E00               	movlw	0
 10200  0028C8  160B               	andwf	___ftadd@f1+2,f,c
 10201  0028CA  8E0D               	bsf	___ftadd@f2+1,7,c
 10202  0028CC  0EFF               	movlw	255
 10203  0028CE  160C               	andwf	___ftadd@f2,f,c
 10204  0028D0  0EFF               	movlw	255
 10205  0028D2  160D               	andwf	___ftadd@f2+1,f,c
 10206  0028D4  0E00               	movlw	0
 10207  0028D6  160E               	andwf	___ftadd@f2+2,f,c
 10208  0028D8  5013               	movf	___ftadd@exp2,w,c
 10209  0028DA  5C14               	subwf	___ftadd@exp1,w,c
 10210  0028DC  B0D8               	btfsc	status,0,c
 10211  0028DE  D01B               	goto	i2l4486
 10212  0028E0                     i2l4476:
 10213  0028E0  90D8               	bcf	status,0,c
 10214  0028E2  360C               	rlcf	___ftadd@f2,f,c
 10215  0028E4  360D               	rlcf	___ftadd@f2+1,f,c
 10216  0028E6  360E               	rlcf	___ftadd@f2+2,f,c
 10217  0028E8  0613               	decf	___ftadd@exp2,f,c
 10218  0028EA  5014               	movf	___ftadd@exp1,w,c
 10219  0028EC  1813               	xorwf	___ftadd@exp2,w,c
 10220  0028EE  B4D8               	btfsc	status,2,c
 10221  0028F0  D00D               	goto	i2l4484
 10222  0028F2  0612               	decf	___ftadd@sign,f,c
 10223  0028F4  C012  F00F         	movff	___ftadd@sign,??___ftadd
 10224  0028F8  0E07               	movlw	7
 10225  0028FA  160F               	andwf	??___ftadd,f,c
 10226  0028FC  B4D8               	btfsc	status,2,c
 10227  0028FE  D006               	goto	i2l4484
 10228  002900  D7EF               	goto	i2l4476
 10229  002902                     i2l4482:
 10230  002902  90D8               	bcf	status,0,c
 10231  002904  320B               	rrcf	___ftadd@f1+2,f,c
 10232  002906  320A               	rrcf	___ftadd@f1+1,f,c
 10233  002908  3209               	rrcf	___ftadd@f1,f,c
 10234  00290A  2A14               	incf	___ftadd@exp1,f,c
 10235  00290C                     i2l4484:
 10236  00290C  5013               	movf	___ftadd@exp2,w,c
 10237  00290E  1814               	xorwf	___ftadd@exp1,w,c
 10238  002910  B4D8               	btfsc	status,2,c
 10239  002912  D01F               	goto	i2l1397
 10240  002914  D7F6               	goto	i2l4482
 10241  002916                     i2l4486:
 10242  002916  5014               	movf	___ftadd@exp1,w,c
 10243  002918  5C13               	subwf	___ftadd@exp2,w,c
 10244  00291A  B0D8               	btfsc	status,0,c
 10245  00291C  D01A               	goto	i2l1397
 10246  00291E                     i2l4488:
 10247  00291E  90D8               	bcf	status,0,c
 10248  002920  3609               	rlcf	___ftadd@f1,f,c
 10249  002922  360A               	rlcf	___ftadd@f1+1,f,c
 10250  002924  360B               	rlcf	___ftadd@f1+2,f,c
 10251  002926  0614               	decf	___ftadd@exp1,f,c
 10252  002928  5014               	movf	___ftadd@exp1,w,c
 10253  00292A  1813               	xorwf	___ftadd@exp2,w,c
 10254  00292C  B4D8               	btfsc	status,2,c
 10255  00292E  D00D               	goto	i2l4496
 10256  002930  0612               	decf	___ftadd@sign,f,c
 10257  002932  C012  F00F         	movff	___ftadd@sign,??___ftadd
 10258  002936  0E07               	movlw	7
 10259  002938  160F               	andwf	??___ftadd,f,c
 10260  00293A  B4D8               	btfsc	status,2,c
 10261  00293C  D006               	goto	i2l4496
 10262  00293E  D7EF               	goto	i2l4488
 10263  002940                     i2l4494:
 10264  002940  90D8               	bcf	status,0,c
 10265  002942  320E               	rrcf	___ftadd@f2+2,f,c
 10266  002944  320D               	rrcf	___ftadd@f2+1,f,c
 10267  002946  320C               	rrcf	___ftadd@f2,f,c
 10268  002948  2A13               	incf	___ftadd@exp2,f,c
 10269  00294A                     i2l4496:
 10270  00294A  5013               	movf	___ftadd@exp2,w,c
 10271  00294C  1814               	xorwf	___ftadd@exp1,w,c
 10272  00294E  A4D8               	btfss	status,2,c
 10273  002950  D7F7               	goto	i2l4494
 10274  002952                     i2l1397:
 10275  002952  AE12               	btfss	___ftadd@sign,7,c
 10276  002954  D00C               	goto	i2l1406
 10277  002956  0EFF               	movlw	255
 10278  002958  1A09               	xorwf	___ftadd@f1,f,c
 10279  00295A  0EFF               	movlw	255
 10280  00295C  1A0A               	xorwf	___ftadd@f1+1,f,c
 10281  00295E  0EFF               	movlw	255
 10282  002960  1A0B               	xorwf	___ftadd@f1+2,f,c
 10283  002962  0E01               	movlw	1
 10284  002964  2609               	addwf	___ftadd@f1,f,c
 10285  002966  0E00               	movlw	0
 10286  002968  220A               	addwfc	___ftadd@f1+1,f,c
 10287  00296A  0E00               	movlw	0
 10288  00296C  220B               	addwfc	___ftadd@f1+2,f,c
 10289  00296E                     i2l1406:
 10290  00296E  AC12               	btfss	___ftadd@sign,6,c
 10291  002970  D00C               	goto	i2l4502
 10292  002972  0EFF               	movlw	255
 10293  002974  1A0C               	xorwf	___ftadd@f2,f,c
 10294  002976  0EFF               	movlw	255
 10295  002978  1A0D               	xorwf	___ftadd@f2+1,f,c
 10296  00297A  0EFF               	movlw	255
 10297  00297C  1A0E               	xorwf	___ftadd@f2+2,f,c
 10298  00297E  0E01               	movlw	1
 10299  002980  260C               	addwf	___ftadd@f2,f,c
 10300  002982  0E00               	movlw	0
 10301  002984  220D               	addwfc	___ftadd@f2+1,f,c
 10302  002986  0E00               	movlw	0
 10303  002988  220E               	addwfc	___ftadd@f2+2,f,c
 10304  00298A                     i2l4502:
 10305  00298A  0E00               	movlw	0
 10306  00298C  6E12               	movwf	___ftadd@sign,c
 10307  00298E  5009               	movf	___ftadd@f1,w,c
 10308  002990  260C               	addwf	___ftadd@f2,f,c
 10309  002992  500A               	movf	___ftadd@f1+1,w,c
 10310  002994  220D               	addwfc	___ftadd@f2+1,f,c
 10311  002996  500B               	movf	___ftadd@f1+2,w,c
 10312  002998  220E               	addwfc	___ftadd@f2+2,f,c
 10313  00299A  AE0E               	btfss	___ftadd@f2+2,7,c
 10314  00299C  D00E               	goto	i2l4512
 10315  00299E  0EFF               	movlw	255
 10316  0029A0  1A0C               	xorwf	___ftadd@f2,f,c
 10317  0029A2  0EFF               	movlw	255
 10318  0029A4  1A0D               	xorwf	___ftadd@f2+1,f,c
 10319  0029A6  0EFF               	movlw	255
 10320  0029A8  1A0E               	xorwf	___ftadd@f2+2,f,c
 10321  0029AA  0E01               	movlw	1
 10322  0029AC  260C               	addwf	___ftadd@f2,f,c
 10323  0029AE  0E00               	movlw	0
 10324  0029B0  220D               	addwfc	___ftadd@f2+1,f,c
 10325  0029B2  0E00               	movlw	0
 10326  0029B4  220E               	addwfc	___ftadd@f2+2,f,c
 10327  0029B6  0E01               	movlw	1
 10328  0029B8  6E12               	movwf	___ftadd@sign,c
 10329  0029BA                     i2l4512:
 10330  0029BA  C00C  F001         	movff	___ftadd@f2,___ftpack@arg
 10331  0029BE  C00D  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
 10332  0029C2  C00E  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
 10333  0029C6  C014  F004         	movff	___ftadd@exp1,___ftpack@exp
 10334  0029CA  C012  F005         	movff	___ftadd@sign,___ftpack@sign
 10335  0029CE  ECD5  F019         	call	___ftpack	;wreg free
 10336  0029D2  C001  F009         	movff	?___ftpack,?___ftadd
 10337  0029D6  C002  F00A         	movff	?___ftpack+1,?___ftadd+1
 10338  0029DA  C003  F00B         	movff	?___ftpack+2,?___ftadd+2
 10339  0029DE  0012               	return	
 10340  0029E0                     __end_of___ftadd:
 10341                           	opt stack 0
 10342                           tosu	equ	0xFFF
 10343                           tosh	equ	0xFFE
 10344                           tosl	equ	0xFFD
 10345                           pclatu	equ	0xFFB
 10346                           pclath	equ	0xFFA
 10347                           tblptru	equ	0xFF8
 10348                           tblptrh	equ	0xFF7
 10349                           tblptrl	equ	0xFF6
 10350                           tablat	equ	0xFF5
 10351                           prodh	equ	0xFF4
 10352                           prodl	equ	0xFF3
 10353                           intcon	equ	0xFF2
 10354                           intcon2	equ	0xFF1
 10355                           indf0	equ	0xFEF
 10356                           postinc0	equ	0xFEE
 10357                           fsr0h	equ	0xFEA
 10358                           fsr0l	equ	0xFE9
 10359                           wreg	equ	0xFE8
 10360                           postdec1	equ	0xFE5
 10361                           fsr1h	equ	0xFE2
 10362                           fsr1l	equ	0xFE1
 10363                           indf2	equ	0xFDF
 10364                           postinc2	equ	0xFDE
 10365                           postdec2	equ	0xFDD
 10366                           fsr2h	equ	0xFDA
 10367                           fsr2l	equ	0xFD9
 10368                           status	equ	0xFD8
 10369                           
 10370 ;; *************** function ___altoft *****************
 10371 ;; Defined at:
 10372 ;;		line 42 in file "/opt/microchip/xc8/v1.41/sources/common/altoft.c"
 10373 ;; Parameters:    Size  Location     Type
 10374 ;;  c               4   15[COMRAM] long 
 10375 ;; Auto vars:     Size  Location     Type
 10376 ;;  sign            1   24[COMRAM] unsigned char 
 10377 ;;  exp             1   23[COMRAM] unsigned char 
 10378 ;; Return value:  Size  Location     Type
 10379 ;;                  3   15[COMRAM] float 
 10380 ;; Registers used:
 10381 ;;		wreg, status,2, status,0, cstack
 10382 ;; Tracked objects:
 10383 ;;		On entry : 0/0
 10384 ;;		On exit  : 0/0
 10385 ;;		Unchanged: 0/0
 10386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10387 ;;      Params:         4       0       0       0       0       0       0
 10388 ;;      Locals:         2       0       0       0       0       0       0
 10389 ;;      Temps:          4       0       0       0       0       0       0
 10390 ;;      Totals:        10       0       0       0       0       0       0
 10391 ;;Total ram usage:       10 bytes
 10392 ;; Hardware stack levels used:    1
 10393 ;; Hardware stack levels required when called:    1
 10394 ;; This function calls:
 10395 ;;		___ftpack
 10396 ;; This function is called by:
 10397 ;;		_floor
 10398 ;; This function uses a non-reentrant model
 10399 ;;
 10400                           
 10401                           	psect	text46
 10402  0038D6                     __ptext46:
 10403                           	opt stack 0
 10404  0038D6                     ___altoft:
 10405                           	opt stack 20
 10406                           
 10407                           ;incstack = 0
 10408  0038D6  0E00               	movlw	0
 10409  0038D8  6E19               	movwf	___altoft@sign,c
 10410  0038DA  0E8E               	movlw	142
 10411  0038DC  6E18               	movwf	___altoft@exp,c
 10412  0038DE  AE13               	btfss	___altoft@c+3,7,c
 10413  0038E0  D011               	goto	i2l4440
 10414  0038E2  1E13               	comf	___altoft@c+3,f,c
 10415  0038E4  1E12               	comf	___altoft@c+2,f,c
 10416  0038E6  1E11               	comf	___altoft@c+1,f,c
 10417  0038E8  6C10               	negf	___altoft@c,c
 10418  0038EA  0E00               	movlw	0
 10419  0038EC  2211               	addwfc	___altoft@c+1,f,c
 10420  0038EE  2212               	addwfc	___altoft@c+2,f,c
 10421  0038F0  2213               	addwfc	___altoft@c+3,f,c
 10422  0038F2  0E01               	movlw	1
 10423  0038F4  6E19               	movwf	___altoft@sign,c
 10424  0038F6  D006               	goto	i2l4440
 10425  0038F8                     i2l4438:
 10426  0038F8  90D8               	bcf	status,0,c
 10427  0038FA  3213               	rrcf	___altoft@c+3,f,c
 10428  0038FC  3212               	rrcf	___altoft@c+2,f,c
 10429  0038FE  3211               	rrcf	___altoft@c+1,f,c
 10430  003900  3210               	rrcf	___altoft@c,f,c
 10431  003902  2A18               	incf	___altoft@exp,f,c
 10432  003904                     i2l4440:
 10433  003904  0E00               	movlw	0
 10434  003906  1410               	andwf	___altoft@c,w,c
 10435  003908  6E14               	movwf	??___altoft& (0+255),c
 10436  00390A  0E00               	movlw	0
 10437  00390C  1411               	andwf	___altoft@c+1,w,c
 10438  00390E  6E15               	movwf	(??___altoft+1)& (0+255),c
 10439  003910  0E00               	movlw	0
 10440  003912  1412               	andwf	___altoft@c+2,w,c
 10441  003914  6E16               	movwf	(??___altoft+2)& (0+255),c
 10442  003916  0EFF               	movlw	255
 10443  003918  1413               	andwf	___altoft@c+3,w,c
 10444  00391A  6E17               	movwf	(??___altoft+3)& (0+255),c
 10445  00391C  5014               	movf	??___altoft,w,c
 10446  00391E  1015               	iorwf	??___altoft+1,w,c
 10447  003920  1016               	iorwf	??___altoft+2,w,c
 10448  003922  1017               	iorwf	??___altoft+3,w,c
 10449  003924  A4D8               	btfss	status,2,c
 10450  003926  D7E8               	goto	i2l4438
 10451  003928  C010  F001         	movff	___altoft@c,___ftpack@arg
 10452  00392C  C011  F002         	movff	___altoft@c+1,___ftpack@arg+1
 10453  003930  C012  F003         	movff	___altoft@c+2,___ftpack@arg+2
 10454  003934  C018  F004         	movff	___altoft@exp,___ftpack@exp
 10455  003938  C019  F005         	movff	___altoft@sign,___ftpack@sign
 10456  00393C  ECD5  F019         	call	___ftpack	;wreg free
 10457  003940  C001  F010         	movff	?___ftpack,?___altoft
 10458  003944  C002  F011         	movff	?___ftpack+1,?___altoft+1
 10459  003948  C003  F012         	movff	?___ftpack+2,?___altoft+2
 10460  00394C  0012               	return	
 10461  00394E                     __end_of___altoft:
 10462                           	opt stack 0
 10463                           tosu	equ	0xFFF
 10464                           tosh	equ	0xFFE
 10465                           tosl	equ	0xFFD
 10466                           pclatu	equ	0xFFB
 10467                           pclath	equ	0xFFA
 10468                           tblptru	equ	0xFF8
 10469                           tblptrh	equ	0xFF7
 10470                           tblptrl	equ	0xFF6
 10471                           tablat	equ	0xFF5
 10472                           prodh	equ	0xFF4
 10473                           prodl	equ	0xFF3
 10474                           intcon	equ	0xFF2
 10475                           intcon2	equ	0xFF1
 10476                           indf0	equ	0xFEF
 10477                           postinc0	equ	0xFEE
 10478                           fsr0h	equ	0xFEA
 10479                           fsr0l	equ	0xFE9
 10480                           wreg	equ	0xFE8
 10481                           postdec1	equ	0xFE5
 10482                           fsr1h	equ	0xFE2
 10483                           fsr1l	equ	0xFE1
 10484                           indf2	equ	0xFDF
 10485                           postinc2	equ	0xFDE
 10486                           postdec2	equ	0xFDD
 10487                           fsr2h	equ	0xFDA
 10488                           fsr2l	equ	0xFD9
 10489                           status	equ	0xFD8
 10490                           
 10491 ;; *************** function ___awtoft *****************
 10492 ;; Defined at:
 10493 ;;		line 32 in file "/opt/microchip/xc8/v1.41/sources/common/awtoft.c"
 10494 ;; Parameters:    Size  Location     Type
 10495 ;;  c               2    8[COMRAM] int 
 10496 ;; Auto vars:     Size  Location     Type
 10497 ;;  sign            1   11[COMRAM] unsigned char 
 10498 ;; Return value:  Size  Location     Type
 10499 ;;                  3    8[COMRAM] float 
 10500 ;; Registers used:
 10501 ;;		wreg, status,2, status,0, cstack
 10502 ;; Tracked objects:
 10503 ;;		On entry : 0/0
 10504 ;;		On exit  : 0/0
 10505 ;;		Unchanged: 0/0
 10506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10507 ;;      Params:         3       0       0       0       0       0       0
 10508 ;;      Locals:         1       0       0       0       0       0       0
 10509 ;;      Temps:          0       0       0       0       0       0       0
 10510 ;;      Totals:         4       0       0       0       0       0       0
 10511 ;;Total ram usage:        4 bytes
 10512 ;; Hardware stack levels used:    1
 10513 ;; Hardware stack levels required when called:    1
 10514 ;; This function calls:
 10515 ;;		___ftpack
 10516 ;; This function is called by:
 10517 ;;		_getLuminosity
 10518 ;; This function uses a non-reentrant model
 10519 ;;
 10520                           
 10521                           	psect	text47
 10522  003F88                     __ptext47:
 10523                           	opt stack 0
 10524  003F88                     ___awtoft:
 10525                           	opt stack 21
 10526                           
 10527                           ;incstack = 0
 10528  003F88  0E00               	movlw	0
 10529  003F8A  6E0C               	movwf	___awtoft@sign,c
 10530  003F8C  AE0A               	btfss	___awtoft@c+1,7,c
 10531  003F8E  D006               	goto	i2l5066
 10532  003F90  6C09               	negf	___awtoft@c,c
 10533  003F92  1E0A               	comf	___awtoft@c+1,f,c
 10534  003F94  B0D8               	btfsc	status,0,c
 10535  003F96  2A0A               	incf	___awtoft@c+1,f,c
 10536  003F98  0E01               	movlw	1
 10537  003F9A  6E0C               	movwf	___awtoft@sign,c
 10538  003F9C                     i2l5066:
 10539  003F9C  C009  F001         	movff	___awtoft@c,___ftpack@arg
 10540  003FA0  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
 10541  003FA4  6A03               	clrf	___ftpack@arg+2,c
 10542  003FA6  0E8E               	movlw	142
 10543  003FA8  6E04               	movwf	___ftpack@exp,c
 10544  003FAA  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
 10545  003FAE  ECD5  F019         	call	___ftpack	;wreg free
 10546  003FB2  C001  F009         	movff	?___ftpack,?___awtoft
 10547  003FB6  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
 10548  003FBA  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
 10549  003FBE  0012               	return	
 10550  003FC0                     __end_of___awtoft:
 10551                           	opt stack 0
 10552                           tosu	equ	0xFFF
 10553                           tosh	equ	0xFFE
 10554                           tosl	equ	0xFFD
 10555                           pclatu	equ	0xFFB
 10556                           pclath	equ	0xFFA
 10557                           tblptru	equ	0xFF8
 10558                           tblptrh	equ	0xFF7
 10559                           tblptrl	equ	0xFF6
 10560                           tablat	equ	0xFF5
 10561                           prodh	equ	0xFF4
 10562                           prodl	equ	0xFF3
 10563                           intcon	equ	0xFF2
 10564                           intcon2	equ	0xFF1
 10565                           indf0	equ	0xFEF
 10566                           postinc0	equ	0xFEE
 10567                           fsr0h	equ	0xFEA
 10568                           fsr0l	equ	0xFE9
 10569                           wreg	equ	0xFE8
 10570                           postdec1	equ	0xFE5
 10571                           fsr1h	equ	0xFE2
 10572                           fsr1l	equ	0xFE1
 10573                           indf2	equ	0xFDF
 10574                           postinc2	equ	0xFDE
 10575                           postdec2	equ	0xFDD
 10576                           fsr2h	equ	0xFDA
 10577                           fsr2l	equ	0xFD9
 10578                           status	equ	0xFD8
 10579                           
 10580 ;; *************** function ___ftpack *****************
 10581 ;; Defined at:
 10582 ;;		line 62 in file "/opt/microchip/xc8/v1.41/sources/common/float.c"
 10583 ;; Parameters:    Size  Location     Type
 10584 ;;  arg             3    0[COMRAM] unsigned um
 10585 ;;  exp             1    3[COMRAM] unsigned char 
 10586 ;;  sign            1    4[COMRAM] unsigned char 
 10587 ;; Auto vars:     Size  Location     Type
 10588 ;;		None
 10589 ;; Return value:  Size  Location     Type
 10590 ;;                  3    0[COMRAM] float 
 10591 ;; Registers used:
 10592 ;;		wreg, status,2, status,0
 10593 ;; Tracked objects:
 10594 ;;		On entry : 0/0
 10595 ;;		On exit  : 0/0
 10596 ;;		Unchanged: 0/0
 10597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10598 ;;      Params:         5       0       0       0       0       0       0
 10599 ;;      Locals:         0       0       0       0       0       0       0
 10600 ;;      Temps:          3       0       0       0       0       0       0
 10601 ;;      Totals:         8       0       0       0       0       0       0
 10602 ;;Total ram usage:        8 bytes
 10603 ;; Hardware stack levels used:    1
 10604 ;; This function calls:
 10605 ;;		Nothing
 10606 ;; This function is called by:
 10607 ;;		___altoft
 10608 ;;		___awtoft
 10609 ;;		___ftadd
 10610 ;; This function uses a non-reentrant model
 10611 ;;
 10612                           
 10613                           	psect	text48
 10614  0033AA                     __ptext48:
 10615                           	opt stack 0
 10616  0033AA                     ___ftpack:
 10617                           	opt stack 20
 10618                           
 10619                           ;incstack = 0
 10620  0033AA  5004               	movf	___ftpack@exp,w,c
 10621  0033AC  B4D8               	btfsc	status,2,c
 10622  0033AE  D005               	goto	i2l4302
 10623  0033B0  5001               	movf	___ftpack@arg,w,c
 10624  0033B2  1002               	iorwf	___ftpack@arg+1,w,c
 10625  0033B4  1003               	iorwf	___ftpack@arg+2,w,c
 10626  0033B6  A4D8               	btfss	status,2,c
 10627  0033B8  D00C               	goto	i2l4308
 10628  0033BA                     i2l4302:
 10629  0033BA  0E00               	movlw	0
 10630  0033BC  6E01               	movwf	?___ftpack,c
 10631  0033BE  0E00               	movlw	0
 10632  0033C0  6E02               	movwf	?___ftpack+1,c
 10633  0033C2  0E00               	movlw	0
 10634  0033C4  6E03               	movwf	?___ftpack+2,c
 10635  0033C6  0012               	return	
 10636  0033C8                     i2l4306:
 10637  0033C8  2A04               	incf	___ftpack@exp,f,c
 10638  0033CA  90D8               	bcf	status,0,c
 10639  0033CC  3203               	rrcf	___ftpack@arg+2,f,c
 10640  0033CE  3202               	rrcf	___ftpack@arg+1,f,c
 10641  0033D0  3201               	rrcf	___ftpack@arg,f,c
 10642  0033D2                     i2l4308:
 10643  0033D2  0E00               	movlw	0
 10644  0033D4  1401               	andwf	___ftpack@arg,w,c
 10645  0033D6  6E06               	movwf	??___ftpack& (0+255),c
 10646  0033D8  0E00               	movlw	0
 10647  0033DA  1402               	andwf	___ftpack@arg+1,w,c
 10648  0033DC  6E07               	movwf	(??___ftpack+1)& (0+255),c
 10649  0033DE  0EFE               	movlw	254
 10650  0033E0  1403               	andwf	___ftpack@arg+2,w,c
 10651  0033E2  6E08               	movwf	(??___ftpack+2)& (0+255),c
 10652  0033E4  5006               	movf	??___ftpack,w,c
 10653  0033E6  1007               	iorwf	??___ftpack+1,w,c
 10654  0033E8  1008               	iorwf	??___ftpack+2,w,c
 10655  0033EA  B4D8               	btfsc	status,2,c
 10656  0033EC  D00C               	goto	i2l4314
 10657  0033EE  D7EC               	goto	i2l4306
 10658  0033F0                     i2l4310:
 10659  0033F0  2A04               	incf	___ftpack@exp,f,c
 10660  0033F2  0E01               	movlw	1
 10661  0033F4  2601               	addwf	___ftpack@arg,f,c
 10662  0033F6  0E00               	movlw	0
 10663  0033F8  2202               	addwfc	___ftpack@arg+1,f,c
 10664  0033FA  0E00               	movlw	0
 10665  0033FC  2203               	addwfc	___ftpack@arg+2,f,c
 10666  0033FE  90D8               	bcf	status,0,c
 10667  003400  3203               	rrcf	___ftpack@arg+2,f,c
 10668  003402  3202               	rrcf	___ftpack@arg+1,f,c
 10669  003404  3201               	rrcf	___ftpack@arg,f,c
 10670  003406                     i2l4314:
 10671  003406  0E00               	movlw	0
 10672  003408  1401               	andwf	___ftpack@arg,w,c
 10673  00340A  6E06               	movwf	??___ftpack& (0+255),c
 10674  00340C  0E00               	movlw	0
 10675  00340E  1402               	andwf	___ftpack@arg+1,w,c
 10676  003410  6E07               	movwf	(??___ftpack+1)& (0+255),c
 10677  003412  0EFF               	movlw	255
 10678  003414  1403               	andwf	___ftpack@arg+2,w,c
 10679  003416  6E08               	movwf	(??___ftpack+2)& (0+255),c
 10680  003418  5006               	movf	??___ftpack,w,c
 10681  00341A  1007               	iorwf	??___ftpack+1,w,c
 10682  00341C  1008               	iorwf	??___ftpack+2,w,c
 10683  00341E  B4D8               	btfsc	status,2,c
 10684  003420  D006               	goto	i2l4318
 10685  003422  D7E6               	goto	i2l4310
 10686  003424                     i2l4316:
 10687  003424  0604               	decf	___ftpack@exp,f,c
 10688  003426  90D8               	bcf	status,0,c
 10689  003428  3601               	rlcf	___ftpack@arg,f,c
 10690  00342A  3602               	rlcf	___ftpack@arg+1,f,c
 10691  00342C  3603               	rlcf	___ftpack@arg+2,f,c
 10692  00342E                     i2l4318:
 10693  00342E  BE02               	btfsc	___ftpack@arg+1,7,c
 10694  003430  D003               	goto	i2l1334
 10695  003432  0E02               	movlw	2
 10696  003434  6004               	cpfslt	___ftpack@exp,c
 10697  003436  D7F6               	goto	i2l4316
 10698  003438                     i2l1334:
 10699  003438  A004               	btfss	___ftpack@exp,0,c
 10700  00343A  9E02               	bcf	___ftpack@arg+1,7,c
 10701  00343C  90D8               	bcf	status,0,c
 10702  00343E  3204               	rrcf	___ftpack@exp,f,c
 10703  003440  5004               	movf	___ftpack@exp,w,c
 10704  003442  1203               	iorwf	___ftpack@arg+2,f,c
 10705  003444  5005               	movf	___ftpack@sign,w,c
 10706  003446  A4D8               	btfss	status,2,c
 10707  003448  8E03               	bsf	___ftpack@arg+2,7,c
 10708  00344A  C001  F001         	movff	___ftpack@arg,?___ftpack
 10709  00344E  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
 10710  003452  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
 10711  003456  0012               	return	
 10712  003458                     __end_of___ftpack:
 10713                           	opt stack 0
 10714                           tosu	equ	0xFFF
 10715                           tosh	equ	0xFFE
 10716                           tosl	equ	0xFFD
 10717                           pclatu	equ	0xFFB
 10718                           pclath	equ	0xFFA
 10719                           tblptru	equ	0xFF8
 10720                           tblptrh	equ	0xFF7
 10721                           tblptrl	equ	0xFF6
 10722                           tablat	equ	0xFF5
 10723                           prodh	equ	0xFF4
 10724                           prodl	equ	0xFF3
 10725                           intcon	equ	0xFF2
 10726                           intcon2	equ	0xFF1
 10727                           indf0	equ	0xFEF
 10728                           postinc0	equ	0xFEE
 10729                           fsr0h	equ	0xFEA
 10730                           fsr0l	equ	0xFE9
 10731                           wreg	equ	0xFE8
 10732                           postdec1	equ	0xFE5
 10733                           fsr1h	equ	0xFE2
 10734                           fsr1l	equ	0xFE1
 10735                           indf2	equ	0xFDF
 10736                           postinc2	equ	0xFDE
 10737                           postdec2	equ	0xFDD
 10738                           fsr2h	equ	0xFDA
 10739                           fsr2l	equ	0xFD9
 10740                           status	equ	0xFD8
 10741                           
 10742 ;; *************** function ___awdiv *****************
 10743 ;; Defined at:
 10744 ;;		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/awdiv.c"
 10745 ;; Parameters:    Size  Location     Type
 10746 ;;  dividend        2    0[COMRAM] int 
 10747 ;;  divisor         2    2[COMRAM] int 
 10748 ;; Auto vars:     Size  Location     Type
 10749 ;;  quotient        2    6[COMRAM] int 
 10750 ;;  sign            1    5[COMRAM] unsigned char 
 10751 ;;  counter         1    4[COMRAM] unsigned char 
 10752 ;; Return value:  Size  Location     Type
 10753 ;;                  2    0[COMRAM] int 
 10754 ;; Registers used:
 10755 ;;		wreg, status,2, status,0
 10756 ;; Tracked objects:
 10757 ;;		On entry : 0/0
 10758 ;;		On exit  : 0/0
 10759 ;;		Unchanged: 0/0
 10760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10761 ;;      Params:         4       0       0       0       0       0       0
 10762 ;;      Locals:         4       0       0       0       0       0       0
 10763 ;;      Temps:          0       0       0       0       0       0       0
 10764 ;;      Totals:         8       0       0       0       0       0       0
 10765 ;;Total ram usage:        8 bytes
 10766 ;; Hardware stack levels used:    1
 10767 ;; This function calls:
 10768 ;;		Nothing
 10769 ;; This function is called by:
 10770 ;;		_getLuminosity
 10771 ;; This function uses a non-reentrant model
 10772 ;;
 10773                           
 10774                           	psect	text49
 10775  003762                     __ptext49:
 10776                           	opt stack 0
 10777  003762                     ___awdiv:
 10778                           	opt stack 22
 10779                           
 10780                           ;incstack = 0
 10781  003762  0E00               	movlw	0
 10782  003764  6E06               	movwf	___awdiv@sign,c
 10783  003766  AE04               	btfss	___awdiv@divisor+1,7,c
 10784  003768  D006               	goto	i2l5022
 10785  00376A  6C03               	negf	___awdiv@divisor,c
 10786  00376C  1E04               	comf	___awdiv@divisor+1,f,c
 10787  00376E  B0D8               	btfsc	status,0,c
 10788  003770  2A04               	incf	___awdiv@divisor+1,f,c
 10789  003772  0E01               	movlw	1
 10790  003774  6E06               	movwf	___awdiv@sign,c
 10791  003776                     i2l5022:
 10792  003776  AE02               	btfss	___awdiv@dividend+1,7,c
 10793  003778  D006               	goto	i2l5028
 10794  00377A  6C01               	negf	___awdiv@dividend,c
 10795  00377C  1E02               	comf	___awdiv@dividend+1,f,c
 10796  00377E  B0D8               	btfsc	status,0,c
 10797  003780  2A02               	incf	___awdiv@dividend+1,f,c
 10798  003782  0E01               	movlw	1
 10799  003784  1A06               	xorwf	___awdiv@sign,f,c
 10800  003786                     i2l5028:
 10801  003786  0E00               	movlw	0
 10802  003788  6E08               	movwf	___awdiv@quotient+1,c
 10803  00378A  0E00               	movlw	0
 10804  00378C  6E07               	movwf	___awdiv@quotient,c
 10805  00378E  5003               	movf	___awdiv@divisor,w,c
 10806  003790  1004               	iorwf	___awdiv@divisor+1,w,c
 10807  003792  B4D8               	btfsc	status,2,c
 10808  003794  D01C               	goto	i2l5050
 10809  003796  0E01               	movlw	1
 10810  003798  6E05               	movwf	___awdiv@counter,c
 10811  00379A  D004               	goto	i2l5036
 10812  00379C                     i2l5034:
 10813  00379C  90D8               	bcf	status,0,c
 10814  00379E  3603               	rlcf	___awdiv@divisor,f,c
 10815  0037A0  3604               	rlcf	___awdiv@divisor+1,f,c
 10816  0037A2  2A05               	incf	___awdiv@counter,f,c
 10817  0037A4                     i2l5036:
 10818  0037A4  AE04               	btfss	___awdiv@divisor+1,7,c
 10819  0037A6  D7FA               	goto	i2l5034
 10820  0037A8                     i2l5038:
 10821  0037A8  90D8               	bcf	status,0,c
 10822  0037AA  3607               	rlcf	___awdiv@quotient,f,c
 10823  0037AC  3608               	rlcf	___awdiv@quotient+1,f,c
 10824  0037AE  5003               	movf	___awdiv@divisor,w,c
 10825  0037B0  5C01               	subwf	___awdiv@dividend,w,c
 10826  0037B2  5004               	movf	___awdiv@divisor+1,w,c
 10827  0037B4  5802               	subwfb	___awdiv@dividend+1,w,c
 10828  0037B6  A0D8               	btfss	status,0,c
 10829  0037B8  D005               	goto	i2l5046
 10830  0037BA  5003               	movf	___awdiv@divisor,w,c
 10831  0037BC  5E01               	subwf	___awdiv@dividend,f,c
 10832  0037BE  5004               	movf	___awdiv@divisor+1,w,c
 10833  0037C0  5A02               	subwfb	___awdiv@dividend+1,f,c
 10834  0037C2  8007               	bsf	___awdiv@quotient,0,c
 10835  0037C4                     i2l5046:
 10836  0037C4  90D8               	bcf	status,0,c
 10837  0037C6  3204               	rrcf	___awdiv@divisor+1,f,c
 10838  0037C8  3203               	rrcf	___awdiv@divisor,f,c
 10839  0037CA  2E05               	decfsz	___awdiv@counter,f,c
 10840  0037CC  D7ED               	goto	i2l5038
 10841  0037CE                     i2l5050:
 10842  0037CE  5006               	movf	___awdiv@sign,w,c
 10843  0037D0  B4D8               	btfsc	status,2,c
 10844  0037D2  D004               	goto	i2l5054
 10845  0037D4  6C07               	negf	___awdiv@quotient,c
 10846  0037D6  1E08               	comf	___awdiv@quotient+1,f,c
 10847  0037D8  B0D8               	btfsc	status,0,c
 10848  0037DA  2A08               	incf	___awdiv@quotient+1,f,c
 10849  0037DC                     i2l5054:
 10850  0037DC  C007  F001         	movff	___awdiv@quotient,?___awdiv
 10851  0037E0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 10852  0037E4  0012               	return	
 10853  0037E6                     __end_of___awdiv:
 10854                           	opt stack 0
 10855                           tosu	equ	0xFFF
 10856                           tosh	equ	0xFFE
 10857                           tosl	equ	0xFFD
 10858                           pclatu	equ	0xFFB
 10859                           pclath	equ	0xFFA
 10860                           tblptru	equ	0xFF8
 10861                           tblptrh	equ	0xFF7
 10862                           tblptrl	equ	0xFF6
 10863                           tablat	equ	0xFF5
 10864                           prodh	equ	0xFF4
 10865                           prodl	equ	0xFF3
 10866                           intcon	equ	0xFF2
 10867                           intcon2	equ	0xFF1
 10868                           indf0	equ	0xFEF
 10869                           postinc0	equ	0xFEE
 10870                           fsr0h	equ	0xFEA
 10871                           fsr0l	equ	0xFE9
 10872                           wreg	equ	0xFE8
 10873                           postdec1	equ	0xFE5
 10874                           fsr1h	equ	0xFE2
 10875                           fsr1l	equ	0xFE1
 10876                           indf2	equ	0xFDF
 10877                           postinc2	equ	0xFDE
 10878                           postdec2	equ	0xFDD
 10879                           fsr2h	equ	0xFDA
 10880                           fsr2l	equ	0xFD9
 10881                           status	equ	0xFD8
 10882                           
 10883 ;; *************** function _ReadADC *****************
 10884 ;; Defined at:
 10885 ;;		line 117 in file "ADC/adc.c"
 10886 ;; Parameters:    Size  Location     Type
 10887 ;;		None
 10888 ;; Auto vars:     Size  Location     Type
 10889 ;;		None
 10890 ;; Return value:  Size  Location     Type
 10891 ;;                  2    0[COMRAM] int 
 10892 ;; Registers used:
 10893 ;;		wreg, status,2
 10894 ;; Tracked objects:
 10895 ;;		On entry : 0/0
 10896 ;;		On exit  : 0/0
 10897 ;;		Unchanged: 0/0
 10898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10899 ;;      Params:         2       0       0       0       0       0       0
 10900 ;;      Locals:         0       0       0       0       0       0       0
 10901 ;;      Temps:          2       0       0       0       0       0       0
 10902 ;;      Totals:         4       0       0       0       0       0       0
 10903 ;;Total ram usage:        4 bytes
 10904 ;; Hardware stack levels used:    1
 10905 ;; This function calls:
 10906 ;;		Nothing
 10907 ;; This function is called by:
 10908 ;;		_getLuminosity
 10909 ;; This function uses a non-reentrant model
 10910 ;;
 10911                           
 10912                           	psect	text50
 10913  004328                     __ptext50:
 10914                           	opt stack 0
 10915  004328                     _ReadADC:
 10916                           	opt stack 22
 10917                           
 10918                           ;adc.c: 119: return (((unsigned int)ADRESH)<<8)|(ADRESL);
 10919                           
 10920                           ;incstack = 0
 10921  004328  50C4               	movf	4036,w,c	;volatile
 10922  00432A  6E03               	movwf	??_ReadADC& (0+255),c
 10923  00432C  50C3               	movf	4035,w,c	;volatile
 10924  00432E  6E01               	movwf	?_ReadADC,c
 10925  004330  C003  F002         	movff	??_ReadADC,?_ReadADC+1
 10926  004334  0012               	return	
 10927  004336                     __end_of_ReadADC:
 10928                           	opt stack 0
 10929                           tosu	equ	0xFFF
 10930                           tosh	equ	0xFFE
 10931                           tosl	equ	0xFFD
 10932                           pclatu	equ	0xFFB
 10933                           pclath	equ	0xFFA
 10934                           tblptru	equ	0xFF8
 10935                           tblptrh	equ	0xFF7
 10936                           tblptrl	equ	0xFF6
 10937                           tablat	equ	0xFF5
 10938                           prodh	equ	0xFF4
 10939                           prodl	equ	0xFF3
 10940                           intcon	equ	0xFF2
 10941                           intcon2	equ	0xFF1
 10942                           indf0	equ	0xFEF
 10943                           postinc0	equ	0xFEE
 10944                           fsr0h	equ	0xFEA
 10945                           fsr0l	equ	0xFE9
 10946                           wreg	equ	0xFE8
 10947                           postdec1	equ	0xFE5
 10948                           fsr1h	equ	0xFE2
 10949                           fsr1l	equ	0xFE1
 10950                           indf2	equ	0xFDF
 10951                           postinc2	equ	0xFDE
 10952                           postdec2	equ	0xFDD
 10953                           fsr2h	equ	0xFDA
 10954                           fsr2l	equ	0xFD9
 10955                           status	equ	0xFD8
 10956                           
 10957 ;; *************** function _OpenADC *****************
 10958 ;; Defined at:
 10959 ;;		line 23 in file "ADC/adc.c"
 10960 ;; Parameters:    Size  Location     Type
 10961 ;;  config          1    wreg     unsigned char 
 10962 ;;  config2         1    0[COMRAM] unsigned char 
 10963 ;;  portconfig      1    1[COMRAM] unsigned char 
 10964 ;; Auto vars:     Size  Location     Type
 10965 ;;  config          1    4[COMRAM] unsigned char 
 10966 ;; Return value:  Size  Location     Type
 10967 ;;                  1    wreg      void 
 10968 ;; Registers used:
 10969 ;;		wreg, status,2, status,0
 10970 ;; Tracked objects:
 10971 ;;		On entry : 0/0
 10972 ;;		On exit  : 0/0
 10973 ;;		Unchanged: 0/0
 10974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10975 ;;      Params:         2       0       0       0       0       0       0
 10976 ;;      Locals:         1       0       0       0       0       0       0
 10977 ;;      Temps:          2       0       0       0       0       0       0
 10978 ;;      Totals:         5       0       0       0       0       0       0
 10979 ;;Total ram usage:        5 bytes
 10980 ;; Hardware stack levels used:    1
 10981 ;; This function calls:
 10982 ;;		Nothing
 10983 ;; This function is called by:
 10984 ;;		_getLuminosity
 10985 ;; This function uses a non-reentrant model
 10986 ;;
 10987                           
 10988                           	psect	text51
 10989  003C36                     __ptext51:
 10990                           	opt stack 0
 10991  003C36                     _OpenADC:
 10992                           	opt stack 22
 10993                           
 10994                           ;incstack = 0
 10995                           ;OpenADC@config stored from wreg
 10996  003C36  6E05               	movwf	OpenADC@config,c
 10997                           
 10998                           ;adc.c: 27: ADCON0 = 0;
 10999  003C38  0E00               	movlw	0
 11000  003C3A  6EC2               	movwf	4034,c	;volatile
 11001                           
 11002                           ;adc.c: 28: ADCON2 = 0;
 11003  003C3C  0E00               	movlw	0
 11004  003C3E  6EC0               	movwf	4032,c	;volatile
 11005                           
 11006                           ;adc.c: 30: ADCON0 = (config2 >> 1) & 0b00111100;
 11007  003C40  90D8               	bcf	status,0,c
 11008  003C42  3001               	rrcf	OpenADC@config2,w,c
 11009  003C44  0B3C               	andlw	60
 11010  003C46  6EC2               	movwf	4034,c	;volatile
 11011                           
 11012                           ;adc.c: 31: ADCON1 = (portconfig & 0b00001111) |
 11013                           ;adc.c: 32: ((config2 << 4) & 0b00110000);
 11014  003C48  C001  F003         	movff	OpenADC@config2,??_OpenADC
 11015  003C4C  3A03               	swapf	??_OpenADC,f,c
 11016  003C4E  0EF0               	movlw	240
 11017  003C50  1603               	andwf	??_OpenADC,f,c
 11018  003C52  0E30               	movlw	48
 11019  003C54  1603               	andwf	??_OpenADC,f,c
 11020  003C56  5002               	movf	OpenADC@portconfig,w,c
 11021  003C58  0B0F               	andlw	15
 11022  003C5A  1003               	iorwf	??_OpenADC,w,c
 11023  003C5C  6EC1               	movwf	4033,c	;volatile
 11024                           
 11025                           ;adc.c: 33: ADCON2 = (config & 0b10000000) |
 11026                           ;adc.c: 34: ((config >> 4) & 0b00000111) |
 11027                           ;adc.c: 35: ((config << 2) & 0b00111000);
 11028  003C5E  C005  F003         	movff	OpenADC@config,??_OpenADC
 11029  003C62  90D8               	bcf	status,0,c
 11030  003C64  3603               	rlcf	??_OpenADC,f,c
 11031  003C66  90D8               	bcf	status,0,c
 11032  003C68  3603               	rlcf	??_OpenADC,f,c
 11033  003C6A  0E38               	movlw	56
 11034  003C6C  1603               	andwf	??_OpenADC,f,c
 11035  003C6E  C005  F004         	movff	OpenADC@config,??_OpenADC+1
 11036  003C72  3A04               	swapf	??_OpenADC+1,f,c
 11037  003C74  0E0F               	movlw	15
 11038  003C76  1604               	andwf	??_OpenADC+1,f,c
 11039  003C78  0E07               	movlw	7
 11040  003C7A  1604               	andwf	??_OpenADC+1,f,c
 11041  003C7C  5005               	movf	OpenADC@config,w,c
 11042  003C7E  0B80               	andlw	128
 11043  003C80  1004               	iorwf	??_OpenADC+1,w,c
 11044  003C82  1003               	iorwf	??_OpenADC,w,c
 11045  003C84  6EC0               	movwf	4032,c	;volatile
 11046                           
 11047                           ;adc.c: 37: if( config2 & 0b10000000 )
 11048  003C86  AE01               	btfss	OpenADC@config2,7,c
 11049  003C88  D003               	goto	i2l21
 11050                           
 11051                           ;adc.c: 38: {
 11052                           ;adc.c: 39: PIR1bits.ADIF = 0;
 11053  003C8A  9C9E               	bcf	3998,6,c	;volatile
 11054                           
 11055                           ;adc.c: 40: PIE1bits.ADIE = 1;
 11056  003C8C  8C9D               	bsf	3997,6,c	;volatile
 11057                           
 11058                           ;adc.c: 41: INTCONbits.PEIE = 1;
 11059  003C8E  8CF2               	bsf	intcon,6,c	;volatile
 11060  003C90                     i2l21:
 11061                           
 11062                           ;adc.c: 42: }
 11063                           ;adc.c: 43: ADCON0bits.ADON = 1;
 11064  003C90  80C2               	bsf	4034,0,c	;volatile
 11065  003C92  0012               	return		;funcret
 11066  003C94                     __end_of_OpenADC:
 11067                           	opt stack 0
 11068                           tosu	equ	0xFFF
 11069                           tosh	equ	0xFFE
 11070                           tosl	equ	0xFFD
 11071                           pclatu	equ	0xFFB
 11072                           pclath	equ	0xFFA
 11073                           tblptru	equ	0xFF8
 11074                           tblptrh	equ	0xFF7
 11075                           tblptrl	equ	0xFF6
 11076                           tablat	equ	0xFF5
 11077                           prodh	equ	0xFF4
 11078                           prodl	equ	0xFF3
 11079                           intcon	equ	0xFF2
 11080                           intcon2	equ	0xFF1
 11081                           indf0	equ	0xFEF
 11082                           postinc0	equ	0xFEE
 11083                           fsr0h	equ	0xFEA
 11084                           fsr0l	equ	0xFE9
 11085                           wreg	equ	0xFE8
 11086                           postdec1	equ	0xFE5
 11087                           fsr1h	equ	0xFE2
 11088                           fsr1l	equ	0xFE1
 11089                           indf2	equ	0xFDF
 11090                           postinc2	equ	0xFDE
 11091                           postdec2	equ	0xFDD
 11092                           fsr2h	equ	0xFDA
 11093                           fsr2l	equ	0xFD9
 11094                           status	equ	0xFD8
 11095                           
 11096 ;; *************** function _Delay10TCYx *****************
 11097 ;; Defined at:
 11098 ;;		line 164 in file "main.c"
 11099 ;; Parameters:    Size  Location     Type
 11100 ;;  n               4    0[COMRAM] unsigned long 
 11101 ;; Auto vars:     Size  Location     Type
 11102 ;;		None
 11103 ;; Return value:  Size  Location     Type
 11104 ;;                  1    wreg      void 
 11105 ;; Registers used:
 11106 ;;		wreg, status,2, status,0
 11107 ;; Tracked objects:
 11108 ;;		On entry : 0/0
 11109 ;;		On exit  : 0/0
 11110 ;;		Unchanged: 0/0
 11111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11112 ;;      Params:         4       0       0       0       0       0       0
 11113 ;;      Locals:         0       0       0       0       0       0       0
 11114 ;;      Temps:          0       0       0       0       0       0       0
 11115 ;;      Totals:         4       0       0       0       0       0       0
 11116 ;;Total ram usage:        4 bytes
 11117 ;; Hardware stack levels used:    1
 11118 ;; This function calls:
 11119 ;;		Nothing
 11120 ;; This function is called by:
 11121 ;;		_getLuminosity
 11122 ;; This function uses a non-reentrant model
 11123 ;;
 11124                           
 11125                           	psect	text52
 11126  004118                     __ptext52:
 11127                           	opt stack 0
 11128  004118                     _Delay10TCYx:
 11129                           	opt stack 22
 11130                           
 11131                           ;main.c: 166: while(n--) _delay(10);
 11132                           
 11133                           ;incstack = 0
 11134  004118  D004               	goto	i2l4870
 11135  00411A                     i2l4868:
 11136  00411A  0E03               	movlw	3
 11137  00411C                     i2u1409_47:
 11138  00411C  2EE8               	decfsz	wreg,f,c
 11139  00411E  D7FE               	bra	i2u1409_47
 11140  004120  F000               	nop	
 11141  004122                     i2l4870:
 11142  004122  0601               	decf	Delay10TCYx@n,f,c
 11143  004124  0E00               	movlw	0
 11144  004126  5A02               	subwfb	Delay10TCYx@n+1,f,c
 11145  004128  5A03               	subwfb	Delay10TCYx@n+2,f,c
 11146  00412A  5A04               	subwfb	Delay10TCYx@n+3,f,c
 11147  00412C  2801               	incf	Delay10TCYx@n,w,c
 11148  00412E  E1F5               	bnz	i2l4868
 11149  004130  2802               	incf	Delay10TCYx@n+1,w,c
 11150  004132  E1F3               	bnz	i2l4868
 11151  004134  2803               	incf	Delay10TCYx@n+2,w,c
 11152  004136  E1F1               	bnz	i2l4868
 11153  004138  2804               	incf	Delay10TCYx@n+3,w,c
 11154  00413A  B4D8               	btfsc	status,2,c
 11155  00413C  0012               	return	
 11156  00413E  D7ED               	goto	i2l4868
 11157  004140                     __end_of_Delay10TCYx:
 11158                           	opt stack 0
 11159                           tosu	equ	0xFFF
 11160                           tosh	equ	0xFFE
 11161                           tosl	equ	0xFFD
 11162                           pclatu	equ	0xFFB
 11163                           pclath	equ	0xFFA
 11164                           tblptru	equ	0xFF8
 11165                           tblptrh	equ	0xFF7
 11166                           tblptrl	equ	0xFF6
 11167                           tablat	equ	0xFF5
 11168                           prodh	equ	0xFF4
 11169                           prodl	equ	0xFF3
 11170                           intcon	equ	0xFF2
 11171                           intcon2	equ	0xFF1
 11172                           indf0	equ	0xFEF
 11173                           postinc0	equ	0xFEE
 11174                           fsr0h	equ	0xFEA
 11175                           fsr0l	equ	0xFE9
 11176                           wreg	equ	0xFE8
 11177                           postdec1	equ	0xFE5
 11178                           fsr1h	equ	0xFE2
 11179                           fsr1l	equ	0xFE1
 11180                           indf2	equ	0xFDF
 11181                           postinc2	equ	0xFDE
 11182                           postdec2	equ	0xFDD
 11183                           fsr2h	equ	0xFDA
 11184                           fsr2l	equ	0xFD9
 11185                           status	equ	0xFD8
 11186                           
 11187 ;; *************** function _ConvertADC *****************
 11188 ;; Defined at:
 11189 ;;		line 99 in file "ADC/adc.c"
 11190 ;; Parameters:    Size  Location     Type
 11191 ;;		None
 11192 ;; Auto vars:     Size  Location     Type
 11193 ;;		None
 11194 ;; Return value:  Size  Location     Type
 11195 ;;                  1    wreg      void 
 11196 ;; Registers used:
 11197 ;;		None
 11198 ;; Tracked objects:
 11199 ;;		On entry : 0/0
 11200 ;;		On exit  : 0/0
 11201 ;;		Unchanged: 0/0
 11202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11203 ;;      Params:         0       0       0       0       0       0       0
 11204 ;;      Locals:         0       0       0       0       0       0       0
 11205 ;;      Temps:          0       0       0       0       0       0       0
 11206 ;;      Totals:         0       0       0       0       0       0       0
 11207 ;;Total ram usage:        0 bytes
 11208 ;; Hardware stack levels used:    1
 11209 ;; This function calls:
 11210 ;;		Nothing
 11211 ;; This function is called by:
 11212 ;;		_getLuminosity
 11213 ;; This function uses a non-reentrant model
 11214 ;;
 11215                           
 11216                           	psect	text53
 11217  004384                     __ptext53:
 11218                           	opt stack 0
 11219  004384                     _ConvertADC:
 11220                           	opt stack 22
 11221                           
 11222                           ;adc.c: 101: ADCON0bits.GO = 1;
 11223                           
 11224                           ;incstack = 0
 11225  004384  82C2               	bsf	4034,1,c	;volatile
 11226  004386  0012               	return		;funcret
 11227  004388                     __end_of_ConvertADC:
 11228                           	opt stack 0
 11229                           tosu	equ	0xFFF
 11230                           tosh	equ	0xFFE
 11231                           tosl	equ	0xFFD
 11232                           pclatu	equ	0xFFB
 11233                           pclath	equ	0xFFA
 11234                           tblptru	equ	0xFF8
 11235                           tblptrh	equ	0xFF7
 11236                           tblptrl	equ	0xFF6
 11237                           tablat	equ	0xFF5
 11238                           prodh	equ	0xFF4
 11239                           prodl	equ	0xFF3
 11240                           intcon	equ	0xFF2
 11241                           intcon2	equ	0xFF1
 11242                           indf0	equ	0xFEF
 11243                           postinc0	equ	0xFEE
 11244                           fsr0h	equ	0xFEA
 11245                           fsr0l	equ	0xFE9
 11246                           wreg	equ	0xFE8
 11247                           postdec1	equ	0xFE5
 11248                           fsr1h	equ	0xFE2
 11249                           fsr1l	equ	0xFE1
 11250                           indf2	equ	0xFDF
 11251                           postinc2	equ	0xFDE
 11252                           postdec2	equ	0xFDD
 11253                           fsr2h	equ	0xFDA
 11254                           fsr2l	equ	0xFD9
 11255                           status	equ	0xFD8
 11256                           
 11257 ;; *************** function _CloseADC *****************
 11258 ;; Defined at:
 11259 ;;		line 81 in file "ADC/adc.c"
 11260 ;; Parameters:    Size  Location     Type
 11261 ;;		None
 11262 ;; Auto vars:     Size  Location     Type
 11263 ;;		None
 11264 ;; Return value:  Size  Location     Type
 11265 ;;                  1    wreg      void 
 11266 ;; Registers used:
 11267 ;;		None
 11268 ;; Tracked objects:
 11269 ;;		On entry : 0/0
 11270 ;;		On exit  : 0/0
 11271 ;;		Unchanged: 0/0
 11272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11273 ;;      Params:         0       0       0       0       0       0       0
 11274 ;;      Locals:         0       0       0       0       0       0       0
 11275 ;;      Temps:          0       0       0       0       0       0       0
 11276 ;;      Totals:         0       0       0       0       0       0       0
 11277 ;;Total ram usage:        0 bytes
 11278 ;; Hardware stack levels used:    1
 11279 ;; This function calls:
 11280 ;;		Nothing
 11281 ;; This function is called by:
 11282 ;;		_getLuminosity
 11283 ;; This function uses a non-reentrant model
 11284 ;;
 11285                           
 11286                           	psect	text54
 11287  00436E                     __ptext54:
 11288                           	opt stack 0
 11289  00436E                     _CloseADC:
 11290                           	opt stack 22
 11291                           
 11292                           ;adc.c: 83: ADCON0bits.ADON = 0;
 11293                           
 11294                           ;incstack = 0
 11295  00436E  90C2               	bcf	4034,0,c	;volatile
 11296                           
 11297                           ;adc.c: 84: PIE1bits.ADIE = 0;
 11298  004370  9C9D               	bcf	3997,6,c	;volatile
 11299  004372  0012               	return		;funcret
 11300  004374                     __end_of_CloseADC:
 11301                           	opt stack 0
 11302                           tosu	equ	0xFFF
 11303                           tosh	equ	0xFFE
 11304                           tosl	equ	0xFFD
 11305                           pclatu	equ	0xFFB
 11306                           pclath	equ	0xFFA
 11307                           tblptru	equ	0xFF8
 11308                           tblptrh	equ	0xFF7
 11309                           tblptrl	equ	0xFF6
 11310                           tablat	equ	0xFF5
 11311                           prodh	equ	0xFF4
 11312                           prodl	equ	0xFF3
 11313                           intcon	equ	0xFF2
 11314                           intcon2	equ	0xFF1
 11315                           indf0	equ	0xFEF
 11316                           postinc0	equ	0xFEE
 11317                           fsr0h	equ	0xFEA
 11318                           fsr0l	equ	0xFE9
 11319                           wreg	equ	0xFE8
 11320                           postdec1	equ	0xFE5
 11321                           fsr1h	equ	0xFE2
 11322                           fsr1l	equ	0xFE1
 11323                           indf2	equ	0xFDF
 11324                           postinc2	equ	0xFDE
 11325                           postdec2	equ	0xFDD
 11326                           fsr2h	equ	0xFDA
 11327                           fsr2l	equ	0xFD9
 11328                           status	equ	0xFD8
 11329                           
 11330 ;; *************** function _BusyADC *****************
 11331 ;; Defined at:
 11332 ;;		line 63 in file "ADC/adc.c"
 11333 ;; Parameters:    Size  Location     Type
 11334 ;;		None
 11335 ;; Auto vars:     Size  Location     Type
 11336 ;;		None
 11337 ;; Return value:  Size  Location     Type
 11338 ;;                  1    wreg      unsigned char 
 11339 ;; Registers used:
 11340 ;;		wreg
 11341 ;; Tracked objects:
 11342 ;;		On entry : 0/0
 11343 ;;		On exit  : 0/0
 11344 ;;		Unchanged: 0/0
 11345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11346 ;;      Params:         0       0       0       0       0       0       0
 11347 ;;      Locals:         0       0       0       0       0       0       0
 11348 ;;      Temps:          0       0       0       0       0       0       0
 11349 ;;      Totals:         0       0       0       0       0       0       0
 11350 ;;Total ram usage:        0 bytes
 11351 ;; Hardware stack levels used:    1
 11352 ;; This function calls:
 11353 ;;		Nothing
 11354 ;; This function is called by:
 11355 ;;		_getLuminosity
 11356 ;; This function uses a non-reentrant model
 11357 ;;
 11358                           
 11359                           	psect	text55
 11360  004342                     __ptext55:
 11361                           	opt stack 0
 11362  004342                     _BusyADC:
 11363                           	opt stack 22
 11364                           
 11365                           ;adc.c: 65: return(ADCON0bits.GO);
 11366                           
 11367                           ;incstack = 0
 11368  004342  A2C2               	btfss	4034,1,c	;volatile
 11369  004344  D002               	goto	i2u496_40
 11370  004346  0E01               	movlw	1
 11371  004348  0012               	return	
 11372  00434A                     i2u496_40:
 11373  00434A  0E00               	movlw	0
 11374  00434C  0012               	return	
 11375  00434E                     __end_of_BusyADC:
 11376                           	opt stack 0
 11377                           tosu	equ	0xFFF
 11378                           tosh	equ	0xFFE
 11379                           tosl	equ	0xFFD
 11380                           pclatu	equ	0xFFB
 11381                           pclath	equ	0xFFA
 11382                           tblptru	equ	0xFF8
 11383                           tblptrh	equ	0xFF7
 11384                           tblptrl	equ	0xFF6
 11385                           tablat	equ	0xFF5
 11386                           prodh	equ	0xFF4
 11387                           prodl	equ	0xFF3
 11388                           intcon	equ	0xFF2
 11389                           intcon2	equ	0xFF1
 11390                           indf0	equ	0xFEF
 11391                           postinc0	equ	0xFEE
 11392                           fsr0h	equ	0xFEA
 11393                           fsr0l	equ	0xFE9
 11394                           wreg	equ	0xFE8
 11395                           postdec1	equ	0xFE5
 11396                           fsr1h	equ	0xFE2
 11397                           fsr1l	equ	0xFE1
 11398                           indf2	equ	0xFDF
 11399                           postinc2	equ	0xFDE
 11400                           postdec2	equ	0xFDD
 11401                           fsr2h	equ	0xFDA
 11402                           fsr2l	equ	0xFD9
 11403                           status	equ	0xFD8
 11404                           
 11405 ;; *************** function _assync_serial_commun *****************
 11406 ;; Defined at:
 11407 ;;		line 482 in file "main.c"
 11408 ;; Parameters:    Size  Location     Type
 11409 ;;		None
 11410 ;; Auto vars:     Size  Location     Type
 11411 ;;  reply_data     10   94[COMRAM] int [5]
 11412 ;;  i               2   92[COMRAM] int 
 11413 ;;  reply_messag    2   90[COMRAM] PTR unsigned char 
 11414 ;;		 -> reply_message_serial_com@str(248), 
 11415 ;;  c               1   89[COMRAM] unsigned char 
 11416 ;; Return value:  Size  Location     Type
 11417 ;;                  1    wreg      void 
 11418 ;; Registers used:
 11419 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 11420 ;; Tracked objects:
 11421 ;;		On entry : 0/0
 11422 ;;		On exit  : 0/0
 11423 ;;		Unchanged: 0/0
 11424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11425 ;;      Params:         0       0       0       0       0       0       0
 11426 ;;      Locals:        15       0       0       0       0       0       0
 11427 ;;      Temps:          0       0       0       0       0       0       0
 11428 ;;      Totals:        15       0       0       0       0       0       0
 11429 ;;Total ram usage:       15 bytes
 11430 ;; Hardware stack levels used:    1
 11431 ;; Hardware stack levels required when called:    4
 11432 ;; This function calls:
 11433 ;;		_WriteUSART
 11434 ;;		_reply_message_serial_com
 11435 ;;		_strlen
 11436 ;; This function is called by:
 11437 ;;		_timer1_isr
 11438 ;; This function uses a non-reentrant model
 11439 ;;
 11440                           
 11441                           	psect	text56
 11442  0032F4                     __ptext56:
 11443                           	opt stack 0
 11444  0032F4                     _assync_serial_commun:
 11445                           	opt stack 19
 11446                           
 11447                           ;main.c: 484: char *reply_message;
 11448                           ;main.c: 485: int reply_data[] = {-1,-1,-1,-1,-1};
 11449                           
 11450                           ;incstack = 0
 11451  0032F4  EE20  F0DF         	lfsr	2,assync_serial_commun@F3539
 11452  0032F8  EE10  F05F         	lfsr	1,assync_serial_commun@reply_data
 11453  0032FC  0E09               	movlw	9
 11454  0032FE                     i2u1306_41:
 11455  0032FE  CFDB FFE3          	movff	plusw2,plusw1
 11456  003302  06E8               	decf	wreg,f,c
 11457  003304  E2FC               	bc	i2u1306_41
 11458                           
 11459                           ;main.c: 487: int i;
 11460                           ;main.c: 488: char c;
 11461                           ;main.c: 491: INTCONbits.GIE = 0;
 11462  003306  9EF2               	bcf	intcon,7,c	;volatile
 11463                           
 11464                           ;main.c: 493: reply_data[0] = hours;
 11465  003308  C236  F05F         	movff	_hours,assync_serial_commun@reply_data	;volatile
 11466  00330C  C237  F060         	movff	_hours+1,assync_serial_commun@reply_data+1	;volatile
 11467                           
 11468                           ;main.c: 494: reply_data[1] = minutes;
 11469  003310  C234  F061         	movff	_minutes,assync_serial_commun@reply_data+2	;volatile
 11470  003314  C235  F062         	movff	_minutes+1,assync_serial_commun@reply_data+3	;volatile
 11471                           
 11472                           ;main.c: 495: reply_data[2] = seconds;
 11473  003318  C232  F063         	movff	_seconds,assync_serial_commun@reply_data+4	;volatile
 11474  00331C  C233  F064         	movff	_seconds+1,assync_serial_commun@reply_data+5	;volatile
 11475                           
 11476                           ;main.c: 496: reply_data[3] = temperature;
 11477  003320  C2A3  F065         	movff	_temperature,assync_serial_commun@reply_data+6	;volatile
 11478  003324  C2A4  F066         	movff	_temperature+1,assync_serial_commun@reply_data+7	;volatile
 11479                           
 11480                           ;main.c: 497: reply_data[4] = luminosity;
 11481  003328  C2A1  F067         	movff	_luminosity,assync_serial_commun@reply_data+8	;volatile
 11482  00332C  C2A2  F068         	movff	_luminosity+1,assync_serial_commun@reply_data+9	;volatile
 11483                           
 11484                           ;main.c: 500: reply_message=reply_message_serial_com(0xCB,reply_data);
 11485  003330  0E00               	movlw	0
 11486  003332  6E55               	movwf	reply_message_serial_com@oper+1,c
 11487  003334  0ECB               	movlw	203
 11488  003336  6E54               	movwf	reply_message_serial_com@oper,c
 11489  003338  0E5F               	movlw	low assync_serial_commun@reply_data
 11490  00333A  6E56               	movwf	reply_message_serial_com@data,c
 11491  00333C  0E00               	movlw	high assync_serial_commun@reply_data
 11492  00333E  6E57               	movwf	reply_message_serial_com@data+1,c
 11493  003340  ECC3  F006         	call	_reply_message_serial_com	;wreg free
 11494  003344  C054  F05B         	movff	?_reply_message_serial_com,assync_serial_commun@reply_message
 11495  003348  C055  F05C         	movff	?_reply_message_serial_com+1,assync_serial_commun@reply_message+1
 11496                           
 11497                           ;main.c: 501: for(i=0;i<strlen(reply_message)+1;i++){
 11498  00334C  0E00               	movlw	0
 11499  00334E  6E5E               	movwf	assync_serial_commun@i+1,c
 11500  003350  0E00               	movlw	0
 11501  003352  6E5D               	movwf	assync_serial_commun@i,c
 11502  003354  D015               	goto	i2l10142
 11503  003356                     i2l10136:
 11504                           
 11505                           ;main.c: 502: c=reply_message[i];
 11506  003356  505D               	movf	assync_serial_commun@i,w,c
 11507  003358  245B               	addwf	assync_serial_commun@reply_message,w,c
 11508  00335A  6ED9               	movwf	fsr2l,c
 11509  00335C  505E               	movf	assync_serial_commun@i+1,w,c
 11510  00335E  205C               	addwfc	assync_serial_commun@reply_message+1,w,c
 11511  003360  6EDA               	movwf	fsr2h,c
 11512  003362  50DF               	movf	indf2,w,c
 11513  003364  6E5A               	movwf	assync_serial_commun@c,c
 11514  003366                     i2l820:
 11515  003366  A2AC               	btfss	4012,1,c	;volatile
 11516  003368  D7FE               	goto	i2l820
 11517                           
 11518                           ;main.c: 504: WriteUSART(reply_message[i]);
 11519  00336A  505D               	movf	assync_serial_commun@i,w,c
 11520  00336C  245B               	addwf	assync_serial_commun@reply_message,w,c
 11521  00336E  6ED9               	movwf	fsr2l,c
 11522  003370  505E               	movf	assync_serial_commun@i+1,w,c
 11523  003372  205C               	addwfc	assync_serial_commun@reply_message+1,w,c
 11524  003374  6EDA               	movwf	fsr2h,c
 11525  003376  50DF               	movf	indf2,w,c
 11526  003378  EC68  F021         	call	_WriteUSART
 11527  00337C  4A5D               	infsnz	assync_serial_commun@i,f,c
 11528  00337E  2A5E               	incf	assync_serial_commun@i+1,f,c
 11529  003380                     i2l10142:
 11530  003380  C05B  F001         	movff	assync_serial_commun@reply_message,strlen@s
 11531  003384  C05C  F002         	movff	assync_serial_commun@reply_message+1,strlen@s+1
 11532  003388  ECA7  F01F         	call	_strlen	;wreg free
 11533  00338C  0E01               	movlw	1
 11534  00338E  2601               	addwf	?_strlen,f,c
 11535  003390  0E00               	movlw	0
 11536  003392  2202               	addwfc	?_strlen+1,f,c
 11537  003394  5001               	movf	?_strlen,w,c
 11538  003396  5C5D               	subwf	assync_serial_commun@i,w,c
 11539  003398  5002               	movf	?_strlen+1,w,c
 11540  00339A  585E               	subwfb	assync_serial_commun@i+1,w,c
 11541  00339C  A0D8               	btfss	status,0,c
 11542  00339E  D7DB               	goto	i2l10136
 11543  0033A0                     i2l824:
 11544  0033A0  A2AC               	btfss	4012,1,c	;volatile
 11545  0033A2  D7FE               	goto	i2l824
 11546                           
 11547                           ;main.c: 509: INTCONbits.GIE = 1;
 11548  0033A4  8EF2               	bsf	intcon,7,c	;volatile
 11549                           
 11550                           ;main.c: 512: PIR1bits.RCIF = 0;
 11551  0033A6  9A9E               	bcf	3998,5,c	;volatile
 11552  0033A8  0012               	return		;funcret
 11553  0033AA                     __end_of_assync_serial_commun:
 11554                           	opt stack 0
 11555                           tosu	equ	0xFFF
 11556                           tosh	equ	0xFFE
 11557                           tosl	equ	0xFFD
 11558                           pclatu	equ	0xFFB
 11559                           pclath	equ	0xFFA
 11560                           tblptru	equ	0xFF8
 11561                           tblptrh	equ	0xFF7
 11562                           tblptrl	equ	0xFF6
 11563                           tablat	equ	0xFF5
 11564                           prodh	equ	0xFF4
 11565                           prodl	equ	0xFF3
 11566                           intcon	equ	0xFF2
 11567                           intcon2	equ	0xFF1
 11568                           indf0	equ	0xFEF
 11569                           postinc0	equ	0xFEE
 11570                           fsr0h	equ	0xFEA
 11571                           fsr0l	equ	0xFE9
 11572                           wreg	equ	0xFE8
 11573                           postdec1	equ	0xFE5
 11574                           plusw1	equ	0xFE3
 11575                           fsr1h	equ	0xFE2
 11576                           fsr1l	equ	0xFE1
 11577                           indf2	equ	0xFDF
 11578                           postinc2	equ	0xFDE
 11579                           postdec2	equ	0xFDD
 11580                           plusw2	equ	0xFDB
 11581                           fsr2h	equ	0xFDA
 11582                           fsr2l	equ	0xFD9
 11583                           status	equ	0xFD8
 11584                           
 11585 ;; *************** function _OnBuffer *****************
 11586 ;; Defined at:
 11587 ;;		line 360 in file "main.c"
 11588 ;; Parameters:    Size  Location     Type
 11589 ;;		None
 11590 ;; Auto vars:     Size  Location     Type
 11591 ;;		None
 11592 ;; Return value:  Size  Location     Type
 11593 ;;                  1    wreg      void 
 11594 ;; Registers used:
 11595 ;;		wreg, status,2
 11596 ;; Tracked objects:
 11597 ;;		On entry : 0/0
 11598 ;;		On exit  : 0/0
 11599 ;;		Unchanged: 0/0
 11600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11601 ;;      Params:         0       0       0       0       0       0       0
 11602 ;;      Locals:         0       0       0       0       0       0       0
 11603 ;;      Temps:          0       0       0       0       0       0       0
 11604 ;;      Totals:         0       0       0       0       0       0       0
 11605 ;;Total ram usage:        0 bytes
 11606 ;; Hardware stack levels used:    1
 11607 ;; This function calls:
 11608 ;;		Nothing
 11609 ;; This function is called by:
 11610 ;;		_timer1_isr
 11611 ;; This function uses a non-reentrant model
 11612 ;;
 11613                           
 11614                           	psect	text57
 11615  004374                     __ptext57:
 11616                           	opt stack 0
 11617  004374                     _OnBuffer:
 11618                           	opt stack 23
 11619                           
 11620                           ;main.c: 361: CCP1CON = 0x0F;
 11621                           
 11622                           ;incstack = 0
 11623  004374  0E0F               	movlw	15
 11624  004376  6EBD               	movwf	4029,c	;volatile
 11625  004378  0012               	return		;funcret
 11626  00437A                     __end_of_OnBuffer:
 11627                           	opt stack 0
 11628                           tosu	equ	0xFFF
 11629                           tosh	equ	0xFFE
 11630                           tosl	equ	0xFFD
 11631                           pclatu	equ	0xFFB
 11632                           pclath	equ	0xFFA
 11633                           tblptru	equ	0xFF8
 11634                           tblptrh	equ	0xFF7
 11635                           tblptrl	equ	0xFF6
 11636                           tablat	equ	0xFF5
 11637                           prodh	equ	0xFF4
 11638                           prodl	equ	0xFF3
 11639                           intcon	equ	0xFF2
 11640                           intcon2	equ	0xFF1
 11641                           indf0	equ	0xFEF
 11642                           postinc0	equ	0xFEE
 11643                           fsr0h	equ	0xFEA
 11644                           fsr0l	equ	0xFE9
 11645                           wreg	equ	0xFE8
 11646                           postdec1	equ	0xFE5
 11647                           plusw1	equ	0xFE3
 11648                           fsr1h	equ	0xFE2
 11649                           fsr1l	equ	0xFE1
 11650                           indf2	equ	0xFDF
 11651                           postinc2	equ	0xFDE
 11652                           postdec2	equ	0xFDD
 11653                           plusw2	equ	0xFDB
 11654                           fsr2h	equ	0xFDA
 11655                           fsr2l	equ	0xFD9
 11656                           status	equ	0xFD8
 11657                           
 11658 ;; *************** function _OffBuffer *****************
 11659 ;; Defined at:
 11660 ;;		line 364 in file "main.c"
 11661 ;; Parameters:    Size  Location     Type
 11662 ;;		None
 11663 ;; Auto vars:     Size  Location     Type
 11664 ;;		None
 11665 ;; Return value:  Size  Location     Type
 11666 ;;                  1    wreg      void 
 11667 ;; Registers used:
 11668 ;;		wreg, status,2, status,0
 11669 ;; Tracked objects:
 11670 ;;		On entry : 0/0
 11671 ;;		On exit  : 0/0
 11672 ;;		Unchanged: 0/0
 11673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11674 ;;      Params:         0       0       0       0       0       0       0
 11675 ;;      Locals:         0       0       0       0       0       0       0
 11676 ;;      Temps:          0       0       0       0       0       0       0
 11677 ;;      Totals:         0       0       0       0       0       0       0
 11678 ;;Total ram usage:        0 bytes
 11679 ;; Hardware stack levels used:    1
 11680 ;; This function calls:
 11681 ;;		Nothing
 11682 ;; This function is called by:
 11683 ;;		_timer1_isr
 11684 ;; This function uses a non-reentrant model
 11685 ;;
 11686                           
 11687                           	psect	text58
 11688  00434E                     __ptext58:
 11689                           	opt stack 0
 11690  00434E                     _OffBuffer:
 11691                           	opt stack 23
 11692                           
 11693                           ;main.c: 365: CCP1CON = ~CCP1CON & 0x0F;
 11694                           
 11695                           ;incstack = 0
 11696  00434E  50BD               	movf	4029,w,c	;volatile
 11697  004350  0AFF               	xorlw	255
 11698  004352  0B0F               	andlw	15
 11699  004354  6EBD               	movwf	4029,c	;volatile
 11700  004356  0012               	return		;funcret
 11701  004358                     __end_of_OffBuffer:
 11702                           	opt stack 0
 11703                           tosu	equ	0xFFF
 11704                           tosh	equ	0xFFE
 11705                           tosl	equ	0xFFD
 11706                           pclatu	equ	0xFFB
 11707                           pclath	equ	0xFFA
 11708                           tblptru	equ	0xFF8
 11709                           tblptrh	equ	0xFF7
 11710                           tblptrl	equ	0xFF6
 11711                           tablat	equ	0xFF5
 11712                           prodh	equ	0xFF4
 11713                           prodl	equ	0xFF3
 11714                           intcon	equ	0xFF2
 11715                           intcon2	equ	0xFF1
 11716                           indf0	equ	0xFEF
 11717                           postinc0	equ	0xFEE
 11718                           fsr0h	equ	0xFEA
 11719                           fsr0l	equ	0xFE9
 11720                           wreg	equ	0xFE8
 11721                           postdec1	equ	0xFE5
 11722                           plusw1	equ	0xFE3
 11723                           fsr1h	equ	0xFE2
 11724                           fsr1l	equ	0xFE1
 11725                           indf2	equ	0xFDF
 11726                           postinc2	equ	0xFDE
 11727                           postdec2	equ	0xFDD
 11728                           plusw2	equ	0xFDB
 11729                           fsr2h	equ	0xFDA
 11730                           fsr2l	equ	0xFD9
 11731                           status	equ	0xFD8
 11732                           
 11733 ;; *************** function _syn_serial_commun_isr *****************
 11734 ;; Defined at:
 11735 ;;		line 725 in file "main.c"
 11736 ;; Parameters:    Size  Location     Type
 11737 ;;		None
 11738 ;; Auto vars:     Size  Location     Type
 11739 ;;  reply_data     40   18[BANK0 ] int [20]
 11740 ;;  request_mess   16    0[BANK0 ] unsigned char [16]
 11741 ;;  request_data   10   58[BANK0 ] int [5]
 11742 ;;  i               2   83[BANK0 ] int 
 11743 ;;  oper            2   81[BANK0 ] int 
 11744 ;;  j               2   79[BANK0 ] int 
 11745 ;;  msg             2   77[BANK0 ] int 
 11746 ;;  start_msg       2   75[BANK0 ] int 
 11747 ;;  end             2   72[BANK0 ] int 
 11748 ;;  start           2   70[BANK0 ] int 
 11749 ;;  reply_messag    2   68[BANK0 ] PTR unsigned char 
 11750 ;;		 -> reply_message_serial_com@str(248), 
 11751 ;;  count           2   16[BANK0 ] int 
 11752 ;;  c               1   74[BANK0 ] unsigned char 
 11753 ;; Return value:  Size  Location     Type
 11754 ;;                  1    wreg      void 
 11755 ;; Registers used:
 11756 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 11757 ;; Tracked objects:
 11758 ;;		On entry : 0/0
 11759 ;;		On exit  : 0/0
 11760 ;;		Unchanged: 0/0
 11761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11762 ;;      Params:         0       0       0       0       0       0       0
 11763 ;;      Locals:         0      85       0       0       0       0       0
 11764 ;;      Temps:          2       0       0       0       0       0       0
 11765 ;;      Totals:         2      85       0       0       0       0       0
 11766 ;;Total ram usage:       87 bytes
 11767 ;; Hardware stack levels used:    1
 11768 ;; Hardware stack levels required when called:    4
 11769 ;; This function calls:
 11770 ;;		_ReadUSART
 11771 ;;		_WriteUSART
 11772 ;;		__fassert
 11773 ;;		_atoi
 11774 ;;		_memset
 11775 ;;		_reply_message_serial_com
 11776 ;;		_strlen
 11777 ;;		i2_DelayExternalEEPROM
 11778 ;;		i2___wmul
 11779 ;;		i2_readEEEPROM
 11780 ;; This function is called by:
 11781 ;;		_ISR
 11782 ;; This function uses a non-reentrant model
 11783 ;;
 11784                           
 11785                           	psect	text59
 11786  001354                     __ptext59:
 11787                           	opt stack 0
 11788  001354                     _syn_serial_commun_isr:
 11789                           	opt stack 20
 11790                           
 11791                           ;main.c: 727: char c;
 11792                           ;main.c: 728: char request_message[16], *reply_message;
 11793                           ;main.c: 729: int request_data[] = {-1,-1,-1,-1,-1};
 11794                           
 11795                           ;incstack = 0
 11796  001354  EE20  F0D5         	lfsr	2,syn_serial_commun_isr@F3557
 11797  001358  EE10  F0BA         	lfsr	1,syn_serial_commun_isr@request_data
 11798  00135C  0E09               	movlw	9
 11799  00135E                     i2u1369_41:
 11800  00135E  CFDB FFE3          	movff	plusw2,plusw1
 11801  001362  06E8               	decf	wreg,f,c
 11802  001364  E2FC               	bc	i2u1369_41
 11803                           
 11804                           ;main.c: 730: int reply_data[20] = {-1};
 11805  001366  EE22  F000         	lfsr	2,syn_serial_commun_isr@F3559
 11806  00136A  EE10  F092         	lfsr	1,syn_serial_commun_isr@reply_data
 11807  00136E  0E27               	movlw	39
 11808  001370                     i2u1370_41:
 11809  001370  CFDB FFE3          	movff	plusw2,plusw1
 11810  001374  06E8               	decf	wreg,f,c
 11811  001376  E2FC               	bc	i2u1370_41
 11812                           
 11813                           ;main.c: 731: int i=0,j,count=0;
 11814  001378  0E00               	movlw	0
 11815  00137A  0100               	movlb	0	; () banked
 11816  00137C  6FD4               	movwf	(syn_serial_commun_isr@i+1)& (0+255),b
 11817  00137E  0E00               	movlw	0
 11818  001380  6FD3               	movwf	syn_serial_commun_isr@i& (0+255),b
 11819                           
 11820                           ; BSR set to: 0
 11821  001382  0E00               	movlw	0
 11822  001384  0100               	movlb	0	; () banked
 11823  001386  6F91               	movwf	(syn_serial_commun_isr@count+1)& (0+255),b
 11824  001388  0E00               	movlw	0
 11825  00138A  6F90               	movwf	syn_serial_commun_isr@count& (0+255),b
 11826                           
 11827                           ; BSR set to: 0
 11828                           ;main.c: 733: int msg=-1, oper;
 11829  00138C  0100               	movlb	0	; () banked
 11830  00138E  69CD               	setf	syn_serial_commun_isr@msg& (0+255),b
 11831  001390  69CE               	setf	(syn_serial_commun_isr@msg+1)& (0+255),b
 11832                           
 11833                           ; BSR set to: 0
 11834                           ;main.c: 734: int start=1, start_msg=0, end=0;
 11835  001392  0E00               	movlw	0
 11836  001394  0100               	movlb	0	; () banked
 11837  001396  6FC7               	movwf	(syn_serial_commun_isr@start+1)& (0+255),b
 11838  001398  0E01               	movlw	1
 11839  00139A  6FC6               	movwf	syn_serial_commun_isr@start& (0+255),b
 11840                           
 11841                           ; BSR set to: 0
 11842  00139C  0E00               	movlw	0
 11843  00139E  0100               	movlb	0	; () banked
 11844  0013A0  6FCC               	movwf	(syn_serial_commun_isr@start_msg+1)& (0+255),b
 11845  0013A2  0E00               	movlw	0
 11846  0013A4  6FCB               	movwf	syn_serial_commun_isr@start_msg& (0+255),b
 11847                           
 11848                           ; BSR set to: 0
 11849  0013A6  0E00               	movlw	0
 11850  0013A8  0100               	movlb	0	; () banked
 11851  0013AA  6FC9               	movwf	(syn_serial_commun_isr@end+1)& (0+255),b
 11852  0013AC  0E00               	movlw	0
 11853  0013AE  6FC8               	movwf	syn_serial_commun_isr@end& (0+255),b
 11854                           
 11855                           ; BSR set to: 0
 11856                           ;main.c: 737: INTCONbits.GIE = 0;
 11857  0013B0  9EF2               	bcf	intcon,7,c	;volatile
 11858  0013B2                     i2l10530:
 11859                           
 11860                           ;main.c: 744: j=0;memset(&request_message[0],0, sizeof(request_message));
 11861  0013B2  0E00               	movlw	0
 11862  0013B4  0100               	movlb	0	; () banked
 11863  0013B6  6FD0               	movwf	(syn_serial_commun_isr@j+1)& (0+255),b
 11864  0013B8  0E00               	movlw	0
 11865  0013BA  6FCF               	movwf	syn_serial_commun_isr@j& (0+255),b
 11866                           
 11867                           ; BSR set to: 0
 11868  0013BC  0E80               	movlw	low syn_serial_commun_isr@request_message
 11869  0013BE  6E01               	movwf	memset@p1,c
 11870  0013C0  0E00               	movlw	high syn_serial_commun_isr@request_message
 11871  0013C2  6E02               	movwf	memset@p1+1,c
 11872  0013C4  0E00               	movlw	0
 11873  0013C6  6E04               	movwf	memset@c+1,c
 11874  0013C8  0E00               	movlw	0
 11875  0013CA  6E03               	movwf	memset@c,c
 11876  0013CC  0E00               	movlw	0
 11877  0013CE  6E06               	movwf	memset@n+1,c
 11878  0013D0  0E10               	movlw	16
 11879  0013D2  6E05               	movwf	memset@n,c
 11880  0013D4  EC76  F020         	call	_memset	;wreg free
 11881  0013D8                     i2l886:
 11882  0013D8  AA9E               	btfss	3998,5,c	;volatile
 11883  0013DA  D7FE               	goto	i2l886
 11884                           
 11885                           ;main.c: 747: c = ReadUSART();
 11886  0013DC  EC49  F020         	call	_ReadUSART	;wreg free
 11887  0013E0  0100               	movlb	0	; () banked
 11888  0013E2  6FCA               	movwf	syn_serial_commun_isr@c& (0+255),b
 11889                           
 11890                           ; BSR set to: 0
 11891                           ;main.c: 748: if(c==' '||c=='\0'){break;}
 11892  0013E4  0E20               	movlw	32
 11893  0013E6  0100               	movlb	0	; () banked
 11894  0013E8  19CA               	xorwf	syn_serial_commun_isr@c& (0+255),w,b
 11895  0013EA  B4D8               	btfsc	status,2,c
 11896  0013EC  D013               	goto	i2l10546
 11897                           
 11898                           ; BSR set to: 0
 11899  0013EE  0100               	movlb	0	; () banked
 11900  0013F0  51CA               	movf	syn_serial_commun_isr@c& (0+255),w,b
 11901  0013F2  0100               	movlb	0	; () banked
 11902  0013F4  B4D8               	btfsc	status,2,c
 11903  0013F6  D00E               	goto	i2l10546
 11904                           
 11905                           ; BSR set to: 0
 11906                           ;main.c: 749: else{request_message[j++]=c;}
 11907                           
 11908                           ; BSR set to: 0
 11909                           
 11910                           ; BSR set to: 0
 11911                           
 11912                           ; BSR set to: 0
 11913  0013F8  0E80               	movlw	low syn_serial_commun_isr@request_message
 11914  0013FA  0100               	movlb	0	; () banked
 11915  0013FC  25CF               	addwf	syn_serial_commun_isr@j& (0+255),w,b
 11916  0013FE  6ED9               	movwf	fsr2l,c
 11917  001400  0E00               	movlw	high syn_serial_commun_isr@request_message
 11918  001402  0100               	movlb	0	; () banked
 11919  001404  21D0               	addwfc	(syn_serial_commun_isr@j+1)& (0+255),w,b
 11920  001406  6EDA               	movwf	fsr2h,c
 11921  001408  C0CA  FFDF         	movff	syn_serial_commun_isr@c,indf2
 11922                           
 11923                           ; BSR set to: 0
 11924  00140C  0100               	movlb	0	; () banked
 11925  00140E  4BCF               	infsnz	syn_serial_commun_isr@j& (0+255),f,b
 11926  001410  2BD0               	incf	(syn_serial_commun_isr@j+1)& (0+255),f,b
 11927                           
 11928                           ; BSR set to: 0
 11929                           
 11930                           ; BSR set to: 0
 11931  001412  D7E2               	goto	i2l886
 11932  001414                     i2l10546:
 11933                           
 11934                           ; BSR set to: 0
 11935                           ;main.c: 750: }
 11936                           ;main.c: 753: oper=atoi(request_message);
 11937  001414  0E80               	movlw	low syn_serial_commun_isr@request_message
 11938  001416  6E07               	movwf	atoi@s,c
 11939  001418  0E00               	movlw	high syn_serial_commun_isr@request_message
 11940  00141A  6E08               	movwf	atoi@s+1,c
 11941  00141C  EC13  F019         	call	_atoi	;wreg free
 11942  001420  C007  F0D1         	movff	?_atoi,syn_serial_commun_isr@oper
 11943  001424  C008  F0D2         	movff	?_atoi+1,syn_serial_commun_isr@oper+1
 11944                           
 11945                           ;main.c: 754: if(start==1){
 11946  001428  0100               	movlb	0	; () banked
 11947  00142A  05C6               	decf	syn_serial_commun_isr@start& (0+255),w,b
 11948  00142C  0100               	movlb	0	; () banked
 11949  00142E  11C7               	iorwf	(syn_serial_commun_isr@start+1)& (0+255),w,b
 11950  001430  A4D8               	btfss	status,2,c
 11951  001432  D01B               	goto	i2l10556
 11952                           
 11953                           ; BSR set to: 0
 11954                           ;main.c: 756: if(!(oper==0xFD)) {_fassert(756, "main.c", "oper==0xFD");};
 11955  001434  0EFD               	movlw	253
 11956  001436  0100               	movlb	0	; () banked
 11957  001438  19D1               	xorwf	syn_serial_commun_isr@oper& (0+255),w,b
 11958  00143A  0100               	movlb	0	; () banked
 11959  00143C  11D2               	iorwf	(syn_serial_commun_isr@oper+1)& (0+255),w,b
 11960  00143E  B4D8               	btfsc	status,2,c
 11961  001440  D00E               	goto	i2l10554
 11962                           
 11963                           ; BSR set to: 0
 11964  001442  0E02               	movlw	2
 11965  001444  6E2B               	movwf	__fassert@line+1,c
 11966  001446  0EF4               	movlw	244
 11967  001448  6E2A               	movwf	__fassert@line,c
 11968  00144A  0E9C               	movlw	low STR_46
 11969  00144C  6E2C               	movwf	__fassert@file,c
 11970  00144E  0E06               	movlw	high STR_46
 11971  001450  6E2D               	movwf	__fassert@file+1,c
 11972  001452  0E74               	movlw	low STR_47
 11973  001454  6E2E               	movwf	__fassert@exp,c
 11974  001456  0E06               	movlw	high STR_47
 11975  001458  6E2F               	movwf	__fassert@exp+1,c
 11976  00145A  ECA0  F020         	call	__fassert	;wreg free
 11977  00145E                     i2l10554:
 11978                           
 11979                           ;main.c: 757: start=0;}
 11980  00145E  0E00               	movlw	0
 11981  001460  0100               	movlb	0	; () banked
 11982  001462  6FC7               	movwf	(syn_serial_commun_isr@start+1)& (0+255),b
 11983  001464  0E00               	movlw	0
 11984  001466  6FC6               	movwf	syn_serial_commun_isr@start& (0+255),b
 11985  001468  D7A4               	goto	i2l10530
 11986  00146A                     i2l10556:
 11987                           
 11988                           ; BSR set to: 0
 11989                           ;main.c: 758: else if(start==0 && end==0){
 11990  00146A  0100               	movlb	0	; () banked
 11991  00146C  51C6               	movf	syn_serial_commun_isr@start& (0+255),w,b
 11992  00146E  0100               	movlb	0	; () banked
 11993  001470  11C7               	iorwf	(syn_serial_commun_isr@start+1)& (0+255),w,b
 11994  001472  A4D8               	btfss	status,2,c
 11995  001474  D0CD               	goto	i2l10612
 11996                           
 11997                           ; BSR set to: 0
 11998  001476  0100               	movlb	0	; () banked
 11999  001478  51C8               	movf	syn_serial_commun_isr@end& (0+255),w,b
 12000  00147A  0100               	movlb	0	; () banked
 12001  00147C  11C9               	iorwf	(syn_serial_commun_isr@end+1)& (0+255),w,b
 12002  00147E  A4D8               	btfss	status,2,c
 12003  001480  D0C7               	goto	i2l10612
 12004                           
 12005                           ; BSR set to: 0
 12006                           ;main.c: 760: if(msg==-1){msg=oper;}
 12007  001482  0100               	movlb	0	; () banked
 12008  001484  29CD               	incf	syn_serial_commun_isr@msg& (0+255),w,b
 12009  001486  E108               	bnz	i2l10564
 12010  001488  0100               	movlb	0	; () banked
 12011  00148A  29CE               	incf	(syn_serial_commun_isr@msg+1)& (0+255),w,b
 12012  00148C  A4D8               	btfss	status,2,c
 12013  00148E  D004               	goto	i2l10564
 12014                           
 12015                           ; BSR set to: 0
 12016  001490  C0D1  F0CD         	movff	syn_serial_commun_isr@oper,syn_serial_commun_isr@msg
 12017  001494  C0D2  F0CE         	movff	syn_serial_commun_isr@oper+1,syn_serial_commun_isr@msg+1
 12018  001498                     i2l10564:
 12019                           
 12020                           ; BSR set to: 0
 12021                           ;main.c: 761: if(!(oper!=0xFE)) {_fassert(761, "main.c", "oper!=0xFE");};
 12022  001498  0EFE               	movlw	254
 12023  00149A  0100               	movlb	0	; () banked
 12024  00149C  19D1               	xorwf	syn_serial_commun_isr@oper& (0+255),w,b
 12025  00149E  0100               	movlb	0	; () banked
 12026  0014A0  11D2               	iorwf	(syn_serial_commun_isr@oper+1)& (0+255),w,b
 12027  0014A2  A4D8               	btfss	status,2,c
 12028  0014A4  D08A               	goto	i2l10610
 12029                           
 12030                           ; BSR set to: 0
 12031  0014A6  0E02               	movlw	2
 12032  0014A8  6E2B               	movwf	__fassert@line+1,c
 12033  0014AA  0EF9               	movlw	249
 12034  0014AC  6E2A               	movwf	__fassert@line,c
 12035  0014AE  0E9C               	movlw	low STR_46
 12036  0014B0  6E2C               	movwf	__fassert@file,c
 12037  0014B2  0E06               	movlw	high STR_46
 12038  0014B4  6E2D               	movwf	__fassert@file+1,c
 12039  0014B6  0E7F               	movlw	low STR_49
 12040  0014B8  6E2E               	movwf	__fassert@exp,c
 12041  0014BA  0E06               	movlw	high STR_49
 12042  0014BC  6E2F               	movwf	__fassert@exp+1,c
 12043  0014BE  ECA0  F020         	call	__fassert	;wreg free
 12044                           
 12045                           ;main.c: 762: switch(msg){
 12046  0014C2  D07B               	goto	i2l10610
 12047  0014C4                     i2l10570:
 12048                           
 12049                           ;main.c: 771: case(0xC5):
 12050                           ;main.c: 772: case(0xC8):
 12051                           ;main.c: 773: if(start_msg==0){
 12052  0014C4  0100               	movlb	0	; () banked
 12053  0014C6  51CB               	movf	syn_serial_commun_isr@start_msg& (0+255),w,b
 12054  0014C8  0100               	movlb	0	; () banked
 12055  0014CA  11CC               	iorwf	(syn_serial_commun_isr@start_msg+1)& (0+255),w,b
 12056  0014CC  A4D8               	btfss	status,2,c
 12057  0014CE  D006               	goto	i2l10574
 12058                           
 12059                           ; BSR set to: 0
 12060                           ;main.c: 774: start_msg=1;}
 12061  0014D0  0E00               	movlw	0
 12062  0014D2  0100               	movlb	0	; () banked
 12063  0014D4  6FCC               	movwf	(syn_serial_commun_isr@start_msg+1)& (0+255),b
 12064  0014D6  0E01               	movlw	1
 12065  0014D8  6FCB               	movwf	syn_serial_commun_isr@start_msg& (0+255),b
 12066  0014DA  D012               	goto	i2l10578
 12067  0014DC                     i2l10574:
 12068                           
 12069                           ; BSR set to: 0
 12070                           ;main.c: 775: else{
 12071                           ;main.c: 776: request_data[i++]=oper;}
 12072  0014DC  90D8               	bcf	status,0,c
 12073  0014DE  0100               	movlb	0	; () banked
 12074  0014E0  35D3               	rlcf	syn_serial_commun_isr@i& (0+255),w,b
 12075  0014E2  6ED9               	movwf	fsr2l,c
 12076  0014E4  0100               	movlb	0	; () banked
 12077  0014E6  35D4               	rlcf	(syn_serial_commun_isr@i+1)& (0+255),w,b
 12078  0014E8  6EDA               	movwf	fsr2h,c
 12079  0014EA  0EBA               	movlw	low syn_serial_commun_isr@request_data
 12080  0014EC  26D9               	addwf	fsr2l,f,c
 12081  0014EE  0E00               	movlw	high syn_serial_commun_isr@request_data
 12082  0014F0  22DA               	addwfc	fsr2h,f,c
 12083  0014F2  C0D1  FFDE         	movff	syn_serial_commun_isr@oper,postinc2
 12084  0014F6  C0D2  FFDD         	movff	syn_serial_commun_isr@oper+1,postdec2
 12085                           
 12086                           ; BSR set to: 0
 12087  0014FA  0100               	movlb	0	; () banked
 12088  0014FC  4BD3               	infsnz	syn_serial_commun_isr@i& (0+255),f,b
 12089  0014FE  2BD4               	incf	(syn_serial_commun_isr@i+1)& (0+255),f,b
 12090  001500                     i2l10578:
 12091                           
 12092                           ; BSR set to: 0
 12093                           ;main.c: 777: if(i==1){end=1;};
 12094  001500  0100               	movlb	0	; () banked
 12095  001502  05D3               	decf	syn_serial_commun_isr@i& (0+255),w,b
 12096  001504                     L6:
 12097  001504  0100               	movlb	0	; () banked
 12098  001506  11D4               	iorwf	(syn_serial_commun_isr@i+1)& (0+255),w,b
 12099  001508  A4D8               	btfss	status,2,c
 12100  00150A  D753               	goto	i2l10530
 12101  00150C                     i2l10580:
 12102                           
 12103                           ; BSR set to: 0
 12104  00150C  0E00               	movlw	0
 12105  00150E  0100               	movlb	0	; () banked
 12106  001510  6FC9               	movwf	(syn_serial_commun_isr@end+1)& (0+255),b
 12107  001512  0E01               	movlw	1
 12108  001514  6FC8               	movwf	syn_serial_commun_isr@end& (0+255),b
 12109                           
 12110                           ; BSR set to: 0
 12111                           ;main.c: 778: break;
 12112  001516  D74D               	goto	i2l10530
 12113  001518                     i2l10582:
 12114                           
 12115                           ;main.c: 780: if(start_msg==0){
 12116  001518  0100               	movlb	0	; () banked
 12117  00151A  51CB               	movf	syn_serial_commun_isr@start_msg& (0+255),w,b
 12118  00151C  0100               	movlb	0	; () banked
 12119  00151E  11CC               	iorwf	(syn_serial_commun_isr@start_msg+1)& (0+255),w,b
 12120  001520  A4D8               	btfss	status,2,c
 12121  001522  D006               	goto	i2l10586
 12122                           
 12123                           ; BSR set to: 0
 12124                           ;main.c: 781: start_msg=1;}
 12125  001524  0E00               	movlw	0
 12126  001526  0100               	movlb	0	; () banked
 12127  001528  6FCC               	movwf	(syn_serial_commun_isr@start_msg+1)& (0+255),b
 12128  00152A  0E01               	movlw	1
 12129  00152C  6FCB               	movwf	syn_serial_commun_isr@start_msg& (0+255),b
 12130  00152E  D012               	goto	i2l10590
 12131  001530                     i2l10586:
 12132                           
 12133                           ; BSR set to: 0
 12134                           ;main.c: 782: else{
 12135                           ;main.c: 783: request_data[i++]=oper;}
 12136  001530  90D8               	bcf	status,0,c
 12137  001532  0100               	movlb	0	; () banked
 12138  001534  35D3               	rlcf	syn_serial_commun_isr@i& (0+255),w,b
 12139  001536  6ED9               	movwf	fsr2l,c
 12140  001538  0100               	movlb	0	; () banked
 12141  00153A  35D4               	rlcf	(syn_serial_commun_isr@i+1)& (0+255),w,b
 12142  00153C  6EDA               	movwf	fsr2h,c
 12143  00153E  0EBA               	movlw	low syn_serial_commun_isr@request_data
 12144  001540  26D9               	addwf	fsr2l,f,c
 12145  001542  0E00               	movlw	high syn_serial_commun_isr@request_data
 12146  001544  22DA               	addwfc	fsr2h,f,c
 12147  001546  C0D1  FFDE         	movff	syn_serial_commun_isr@oper,postinc2
 12148  00154A  C0D2  FFDD         	movff	syn_serial_commun_isr@oper+1,postdec2
 12149                           
 12150                           ; BSR set to: 0
 12151  00154E  0100               	movlb	0	; () banked
 12152  001550  4BD3               	infsnz	syn_serial_commun_isr@i& (0+255),f,b
 12153  001552  2BD4               	incf	(syn_serial_commun_isr@i+1)& (0+255),f,b
 12154  001554                     i2l10590:
 12155                           
 12156                           ; BSR set to: 0
 12157                           ;main.c: 784: if(i==2){end=1;};
 12158  001554  0E02               	movlw	2
 12159  001556  D01F               	goto	L7
 12160  001558                     i2l10594:
 12161                           
 12162                           ;main.c: 787: if(start_msg==0){
 12163  001558  0100               	movlb	0	; () banked
 12164  00155A  51CB               	movf	syn_serial_commun_isr@start_msg& (0+255),w,b
 12165  00155C  0100               	movlb	0	; () banked
 12166  00155E  11CC               	iorwf	(syn_serial_commun_isr@start_msg+1)& (0+255),w,b
 12167  001560  A4D8               	btfss	status,2,c
 12168  001562  D006               	goto	i2l10598
 12169                           
 12170                           ; BSR set to: 0
 12171                           ;main.c: 788: start_msg=1;}
 12172  001564  0E00               	movlw	0
 12173  001566  0100               	movlb	0	; () banked
 12174  001568  6FCC               	movwf	(syn_serial_commun_isr@start_msg+1)& (0+255),b
 12175  00156A  0E01               	movlw	1
 12176  00156C  6FCB               	movwf	syn_serial_commun_isr@start_msg& (0+255),b
 12177  00156E  D012               	goto	i2l10602
 12178  001570                     i2l10598:
 12179                           
 12180                           ; BSR set to: 0
 12181                           ;main.c: 789: else{
 12182                           ;main.c: 790: request_data[i++]=oper;}
 12183  001570  90D8               	bcf	status,0,c
 12184  001572  0100               	movlb	0	; () banked
 12185  001574  35D3               	rlcf	syn_serial_commun_isr@i& (0+255),w,b
 12186  001576  6ED9               	movwf	fsr2l,c
 12187  001578  0100               	movlb	0	; () banked
 12188  00157A  35D4               	rlcf	(syn_serial_commun_isr@i+1)& (0+255),w,b
 12189  00157C  6EDA               	movwf	fsr2h,c
 12190  00157E  0EBA               	movlw	low syn_serial_commun_isr@request_data
 12191  001580  26D9               	addwf	fsr2l,f,c
 12192  001582  0E00               	movlw	high syn_serial_commun_isr@request_data
 12193  001584  22DA               	addwfc	fsr2h,f,c
 12194  001586  C0D1  FFDE         	movff	syn_serial_commun_isr@oper,postinc2
 12195  00158A  C0D2  FFDD         	movff	syn_serial_commun_isr@oper+1,postdec2
 12196                           
 12197                           ; BSR set to: 0
 12198  00158E  0100               	movlb	0	; () banked
 12199  001590  4BD3               	infsnz	syn_serial_commun_isr@i& (0+255),f,b
 12200  001592  2BD4               	incf	(syn_serial_commun_isr@i+1)& (0+255),f,b
 12201  001594                     i2l10602:
 12202                           
 12203                           ; BSR set to: 0
 12204                           ;main.c: 791: if(i==3){end=1;};
 12205  001594  0E03               	movlw	3
 12206  001596                     L7:
 12207  001596  0100               	movlb	0	; () banked
 12208  001598  19D3               	xorwf	syn_serial_commun_isr@i& (0+255),w,b
 12209  00159A  D7B4               	goto	L6
 12210  00159C                     i2l10606:
 12211  00159C  0E03               	movlw	3
 12212  00159E  6E2B               	movwf	__fassert@line+1,c
 12213  0015A0  0E1A               	movlw	26
 12214  0015A2  6E2A               	movwf	__fassert@line,c
 12215  0015A4  0E9C               	movlw	low STR_46
 12216  0015A6  6E2C               	movwf	__fassert@file,c
 12217  0015A8  0E06               	movlw	high STR_46
 12218  0015AA  6E2D               	movwf	__fassert@file+1,c
 12219  0015AC  0EA3               	movlw	low STR_51
 12220  0015AE  6E2E               	movwf	__fassert@exp,c
 12221  0015B0  0E06               	movlw	high STR_51
 12222  0015B2  6E2F               	movwf	__fassert@exp+1,c
 12223  0015B4  ECA0  F020         	call	__fassert	;wreg free
 12224                           
 12225                           ;main.c: 795: break;}}
 12226  0015B8  D6FC               	goto	i2l10530
 12227  0015BA                     i2l10610:
 12228  0015BA  C0CD  F05A         	movff	syn_serial_commun_isr@msg,??_syn_serial_commun_isr
 12229  0015BE  C0CE  F05B         	movff	syn_serial_commun_isr@msg+1,??_syn_serial_commun_isr+1
 12230                           
 12231                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12232                           ; Switch size 1, requested type "space"
 12233                           ; Number of cases is 1, Range of values is 0 to 0
 12234                           ; switch strategies available:
 12235                           ; Name         Instructions Cycles
 12236                           ; simple_byte            4     3 (average)
 12237                           ;	Chosen strategy is simple_byte
 12238  0015C2  505B               	movf	??_syn_serial_commun_isr+1,w,c
 12239  0015C4  0A00               	xorlw	0	; case 0
 12240  0015C6  A4D8               	btfss	status,2,c
 12241  0015C8  D7E9               	goto	i2l10606
 12242                           
 12243                           ; Switch size 1, requested type "space"
 12244                           ; Number of cases is 11, Range of values is 192 to 202
 12245                           ; switch strategies available:
 12246                           ; Name         Instructions Cycles
 12247                           ; simple_byte           34    18 (average)
 12248                           ;	Chosen strategy is simple_byte
 12249  0015CA  505A               	movf	??_syn_serial_commun_isr,w,c
 12250  0015CC  0AC0               	xorlw	192	; case 192
 12251  0015CE  B4D8               	btfsc	status,2,c
 12252  0015D0  D79D               	goto	i2l10580
 12253  0015D2  0A01               	xorlw	1	; case 193
 12254  0015D4  B4D8               	btfsc	status,2,c
 12255  0015D6  D7C0               	goto	i2l10594
 12256  0015D8  0A03               	xorlw	3	; case 194
 12257  0015DA  B4D8               	btfsc	status,2,c
 12258  0015DC  D797               	goto	i2l10580
 12259  0015DE  0A01               	xorlw	1	; case 195
 12260  0015E0  B4D8               	btfsc	status,2,c
 12261  0015E2  D794               	goto	i2l10580
 12262  0015E4  0A07               	xorlw	7	; case 196
 12263  0015E6  B4D8               	btfsc	status,2,c
 12264  0015E8  D76D               	goto	i2l10570
 12265  0015EA  0A01               	xorlw	1	; case 197
 12266  0015EC  B4D8               	btfsc	status,2,c
 12267  0015EE  D76A               	goto	i2l10570
 12268  0015F0  0A03               	xorlw	3	; case 198
 12269  0015F2  B4D8               	btfsc	status,2,c
 12270  0015F4  D78B               	goto	i2l10580
 12271  0015F6  0A01               	xorlw	1	; case 199
 12272  0015F8  B4D8               	btfsc	status,2,c
 12273  0015FA  D78E               	goto	i2l10582
 12274  0015FC  0A0F               	xorlw	15	; case 200
 12275  0015FE  B4D8               	btfsc	status,2,c
 12276  001600  D761               	goto	i2l10570
 12277  001602  0A01               	xorlw	1	; case 201
 12278  001604  B4D8               	btfsc	status,2,c
 12279  001606  D782               	goto	i2l10580
 12280  001608  0A03               	xorlw	3	; case 202
 12281  00160A  B4D8               	btfsc	status,2,c
 12282  00160C  D77F               	goto	i2l10580
 12283  00160E  D7C6               	goto	i2l10606
 12284  001610                     i2l10612:
 12285                           
 12286                           ;main.c: 796: else if(start==0 && end==1){
 12287  001610  0100               	movlb	0	; () banked
 12288  001612  51C6               	movf	syn_serial_commun_isr@start& (0+255),w,b
 12289  001614  0100               	movlb	0	; () banked
 12290  001616  11C7               	iorwf	(syn_serial_commun_isr@start+1)& (0+255),w,b
 12291  001618  A4D8               	btfss	status,2,c
 12292  00161A  D6CB               	goto	i2l10530
 12293                           
 12294                           ; BSR set to: 0
 12295  00161C  0100               	movlb	0	; () banked
 12296  00161E  05C8               	decf	syn_serial_commun_isr@end& (0+255),w,b
 12297  001620  0100               	movlb	0	; () banked
 12298  001622  11C9               	iorwf	(syn_serial_commun_isr@end+1)& (0+255),w,b
 12299  001624  A4D8               	btfss	status,2,c
 12300  001626  D6C5               	goto	i2l10530
 12301                           
 12302                           ; BSR set to: 0
 12303                           ;main.c: 798: if(!(oper==0xFE)) {_fassert(798, "main.c", "oper==0xFE");};
 12304  001628  0EFE               	movlw	254
 12305  00162A  0100               	movlb	0	; () banked
 12306  00162C  19D1               	xorwf	syn_serial_commun_isr@oper& (0+255),w,b
 12307  00162E  0100               	movlb	0	; () banked
 12308  001630  11D2               	iorwf	(syn_serial_commun_isr@oper+1)& (0+255),w,b
 12309  001632  B4D8               	btfsc	status,2,c
 12310  001634  D0EA               	goto	i2l10654
 12311                           
 12312                           ; BSR set to: 0
 12313  001636  0E03               	movlw	3
 12314  001638  6E2B               	movwf	__fassert@line+1,c
 12315  00163A  0E1E               	movlw	30
 12316  00163C  6E2A               	movwf	__fassert@line,c
 12317  00163E  0E9C               	movlw	low STR_46
 12318  001640  6E2C               	movwf	__fassert@file,c
 12319  001642  0E06               	movlw	high STR_46
 12320  001644  6E2D               	movwf	__fassert@file+1,c
 12321  001646  0E8A               	movlw	low STR_53
 12322  001648  6E2E               	movwf	__fassert@exp,c
 12323  00164A  0E06               	movlw	high STR_53
 12324  00164C  6E2F               	movwf	__fassert@exp+1,c
 12325  00164E  ECA0  F020         	call	__fassert	;wreg free
 12326                           
 12327                           ;main.c: 799: break;}
 12328  001652  D0DB               	goto	i2l10654
 12329  001654                     i2l931:
 12330                           
 12331                           ;main.c: 805: reply_data[0] = hours;
 12332  001654  C236  F092         	movff	_hours,syn_serial_commun_isr@reply_data	;volatile
 12333  001658  C237  F093         	movff	_hours+1,syn_serial_commun_isr@reply_data+1	;volatile
 12334                           
 12335                           ;main.c: 806: reply_data[1] = minutes;
 12336  00165C  C234  F094         	movff	_minutes,syn_serial_commun_isr@reply_data+2	;volatile
 12337  001660  C235  F095         	movff	_minutes+1,syn_serial_commun_isr@reply_data+3	;volatile
 12338                           
 12339                           ;main.c: 807: reply_data[2] = countClock;
 12340  001664  C1FA  F096         	movff	_countClock,syn_serial_commun_isr@reply_data+4	;volatile
 12341  001668  C1FB  F097         	movff	_countClock+1,syn_serial_commun_isr@reply_data+5	;volatile
 12342                           
 12343                           ;main.c: 808: break;
 12344  00166C  D0F9               	goto	i2l10656
 12345  00166E                     i2l933:
 12346                           
 12347                           ;main.c: 810: hours = request_data[0];
 12348  00166E  C0BA  F236         	movff	syn_serial_commun_isr@request_data,_hours	;volatile
 12349  001672  C0BB  F237         	movff	syn_serial_commun_isr@request_data+1,_hours+1	;volatile
 12350                           
 12351                           ;main.c: 811: minutes = request_data[1];
 12352  001676  C0BC  F234         	movff	syn_serial_commun_isr@request_data+2,_minutes	;volatile
 12353  00167A  C0BD  F235         	movff	syn_serial_commun_isr@request_data+3,_minutes+1	;volatile
 12354                           
 12355                           ;main.c: 812: seconds = countClock = request_data[2];
 12356  00167E  C0BE  F1FA         	movff	syn_serial_commun_isr@request_data+4,_countClock	;volatile
 12357  001682  C0BF  F1FB         	movff	syn_serial_commun_isr@request_data+5,_countClock+1	;volatile
 12358  001686  C1FA  F232         	movff	_countClock,_seconds	;volatile
 12359  00168A  C1FB  F233         	movff	_countClock+1,_seconds+1	;volatile
 12360                           
 12361                           ;main.c: 813: break;
 12362  00168E  D0E8               	goto	i2l10656
 12363  001690                     i2l934:
 12364                           
 12365                           ;main.c: 815: reply_data[0] = temperature;
 12366  001690  C2A3  F092         	movff	_temperature,syn_serial_commun_isr@reply_data	;volatile
 12367  001694  C2A4  F093         	movff	_temperature+1,syn_serial_commun_isr@reply_data+1	;volatile
 12368                           
 12369                           ;main.c: 816: reply_data[1] = luminosity;
 12370  001698  C2A1  F094         	movff	_luminosity,syn_serial_commun_isr@reply_data+2	;volatile
 12371  00169C  C2A2  F095         	movff	_luminosity+1,syn_serial_commun_isr@reply_data+3	;volatile
 12372                           
 12373                           ;main.c: 817: break;
 12374  0016A0  D0DF               	goto	i2l10656
 12375  0016A2                     i2l935:
 12376                           
 12377                           ;main.c: 819: reply_data[0] = PMON;
 12378  0016A2  C1FE  F092         	movff	_PMON,syn_serial_commun_isr@reply_data	;volatile
 12379  0016A6  C1FF  F093         	movff	_PMON+1,syn_serial_commun_isr@reply_data+1	;volatile
 12380                           
 12381                           ;main.c: 820: reply_data[1] = TSOM;
 12382  0016AA  C07D  F094         	movff	_TSOM,syn_serial_commun_isr@reply_data+2	;volatile
 12383  0016AE  C07E  F095         	movff	_TSOM+1,syn_serial_commun_isr@reply_data+3	;volatile
 12384                           
 12385                           ;main.c: 821: reply_data[2] = TINA;
 12386  0016B2  C1FC  F096         	movff	_TINA,syn_serial_commun_isr@reply_data+4	;volatile
 12387  0016B6  C1FD  F097         	movff	_TINA+1,syn_serial_commun_isr@reply_data+5	;volatile
 12388                           
 12389                           ;main.c: 822: break;
 12390  0016BA  D0D2               	goto	i2l10656
 12391  0016BC                     i2l936:
 12392                           
 12393                           ;main.c: 824: PMON = request_data[0];
 12394  0016BC  C0BA  F1FE         	movff	syn_serial_commun_isr@request_data,_PMON	;volatile
 12395  0016C0  C0BB  F1FF         	movff	syn_serial_commun_isr@request_data+1,_PMON+1	;volatile
 12396                           
 12397                           ;main.c: 825: break;
 12398  0016C4  D0CD               	goto	i2l10656
 12399  0016C6                     i2l10620:
 12400                           
 12401                           ;main.c: 827: TINA = request_data[0]*60;
 12402  0016C6  C0BA  F001         	movff	syn_serial_commun_isr@request_data,i2___wmul@multiplier
 12403  0016CA  C0BB  F002         	movff	syn_serial_commun_isr@request_data+1,i2___wmul@multiplier+1
 12404  0016CE  0E00               	movlw	0
 12405  0016D0  6E04               	movwf	i2___wmul@multiplicand+1,c
 12406  0016D2  0E3C               	movlw	60
 12407  0016D4  6E03               	movwf	i2___wmul@multiplicand,c
 12408  0016D6  ECB4  F020         	call	i2___wmul	;wreg free
 12409  0016DA  C001  F1FC         	movff	?i2___wmul,_TINA	;volatile
 12410  0016DE  C002  F1FD         	movff	?i2___wmul+1,_TINA+1	;volatile
 12411                           
 12412                           ;main.c: 828: break;
 12413  0016E2  D0BE               	goto	i2l10656
 12414  0016E4                     i2l938:
 12415                           
 12416                           ;main.c: 830: reply_data[0] = ALAT;
 12417  0016E4  C23A  F092         	movff	_ALAT,syn_serial_commun_isr@reply_data	;volatile
 12418  0016E8  C23B  F093         	movff	_ALAT+1,syn_serial_commun_isr@reply_data+1	;volatile
 12419                           
 12420                           ;main.c: 831: reply_data[1] = ALAL;
 12421  0016EC  C238  F094         	movff	_ALAL,syn_serial_commun_isr@reply_data+2	;volatile
 12422  0016F0  C239  F095         	movff	_ALAL+1,syn_serial_commun_isr@reply_data+3	;volatile
 12423                           
 12424                           ;main.c: 832: reply_data[2] = ALAF;
 12425  0016F4  C2AB  F096         	movff	_ALAF,syn_serial_commun_isr@reply_data+4	;volatile
 12426  0016F8  C2AC  F097         	movff	_ALAF+1,syn_serial_commun_isr@reply_data+5	;volatile
 12427                           
 12428                           ;main.c: 833: break;
 12429  0016FC  D0B1               	goto	i2l10656
 12430  0016FE                     i2l939:
 12431                           
 12432                           ;main.c: 835: ALAT = request_data[0];
 12433  0016FE  C0BA  F23A         	movff	syn_serial_commun_isr@request_data,_ALAT	;volatile
 12434  001702  C0BB  F23B         	movff	syn_serial_commun_isr@request_data+1,_ALAT+1	;volatile
 12435                           
 12436                           ;main.c: 836: ALAL = request_data[1];
 12437  001706  C0BC  F238         	movff	syn_serial_commun_isr@request_data+2,_ALAL	;volatile
 12438  00170A  C0BD  F239         	movff	syn_serial_commun_isr@request_data+3,_ALAL+1	;volatile
 12439                           
 12440                           ;main.c: 837: break;
 12441  00170E  D0A8               	goto	i2l10656
 12442  001710                     i2l940:
 12443                           
 12444                           ;main.c: 839: ALAF = request_data[0];
 12445  001710  C0BA  F2AB         	movff	syn_serial_commun_isr@request_data,_ALAF	;volatile
 12446  001714  C0BB  F2AC         	movff	syn_serial_commun_isr@request_data+1,_ALAF+1	;volatile
 12447                           
 12448                           ;main.c: 840: break;
 12449  001718  D0A3               	goto	i2l10656
 12450  00171A                     i2l10622:
 12451                           
 12452                           ;main.c: 842: for(i=0;i<4;i++){
 12453  00171A  0E00               	movlw	0
 12454  00171C  0100               	movlb	0	; () banked
 12455  00171E  6FD4               	movwf	(syn_serial_commun_isr@i+1)& (0+255),b
 12456  001720  0E00               	movlw	0
 12457  001722  6FD3               	movwf	syn_serial_commun_isr@i& (0+255),b
 12458                           
 12459                           ; BSR set to: 0
 12460  001724  0100               	movlb	0	; () banked
 12461  001726  BFD4               	btfsc	(syn_serial_commun_isr@i+1)& (0+255),7,b
 12462  001728  D00A               	goto	i2l10628
 12463  00172A  0100               	movlb	0	; () banked
 12464  00172C  51D4               	movf	(syn_serial_commun_isr@i+1)& (0+255),w,b
 12465  00172E  E106               	bnz	i2u1389_40
 12466  001730  0E04               	movlw	4
 12467  001732  0100               	movlb	0	; () banked
 12468  001734  5DD3               	subwf	syn_serial_commun_isr@i& (0+255),w,b
 12469  001736  B0D8               	btfsc	status,0,c
 12470  001738  D093               	goto	i2l10656
 12471  00173A  D001               	goto	i2l10628
 12472  00173C                     i2u1389_40:
 12473                           
 12474                           ; BSR set to: 0
 12475  00173C  D091               	goto	i2l10656
 12476  00173E                     i2l10628:
 12477                           
 12478                           ; BSR set to: 0
 12479                           ;main.c: 843: for(j=0;j<5;j++){
 12480  00173E  0E00               	movlw	0
 12481  001740  0100               	movlb	0	; () banked
 12482  001742  6FD0               	movwf	(syn_serial_commun_isr@j+1)& (0+255),b
 12483  001744  0E00               	movlw	0
 12484  001746  6FCF               	movwf	syn_serial_commun_isr@j& (0+255),b
 12485  001748                     i2l10630:
 12486                           
 12487                           ; BSR set to: 0
 12488  001748  0100               	movlb	0	; () banked
 12489  00174A  BFD0               	btfsc	(syn_serial_commun_isr@j+1)& (0+255),7,b
 12490  00174C  D008               	goto	i2l10634
 12491  00174E  0100               	movlb	0	; () banked
 12492  001750  51D0               	movf	(syn_serial_commun_isr@j+1)& (0+255),w,b
 12493  001752  E12D               	bnz	i2l10646
 12494  001754  0E05               	movlw	5
 12495  001756  0100               	movlb	0	; () banked
 12496  001758  5DCF               	subwf	syn_serial_commun_isr@j& (0+255),w,b
 12497  00175A  B0D8               	btfsc	status,0,c
 12498  00175C  D028               	goto	i2l10646
 12499  00175E                     i2l10634:
 12500                           
 12501                           ; BSR set to: 0
 12502                           ;main.c: 844: Addrlo = (unsigned char) 5*i+j;
 12503  00175E  0100               	movlb	0	; () banked
 12504  001760  51D3               	movf	syn_serial_commun_isr@i& (0+255),w,b
 12505  001762  0D05               	mullw	5
 12506  001764  50F3               	movf	prodl,w,c
 12507  001766  0100               	movlb	0	; () banked
 12508  001768  25CF               	addwf	syn_serial_commun_isr@j& (0+255),w,b
 12509  00176A  0100               	movlb	0	; () banked
 12510  00176C  6FF7               	movwf	_Addrlo& (0+255),b	;volatile
 12511                           
 12512                           ; BSR set to: 0
 12513                           ;main.c: 845: reply_data[count++] = (int) readEEEPROM(Addrhi,Addrlo);
 12514  00176E  C0F7  F003         	movff	_Addrlo,i2readEEEPROM@Addrlo	;volatile
 12515  001772  0100               	movlb	0	; () banked
 12516  001774  51F8               	movf	_Addrhi& (0+255),w,b	;volatile
 12517  001776  ECD4  F016         	call	i2_readEEEPROM
 12518  00177A  6E5A               	movwf	??_syn_serial_commun_isr& (0+255),c
 12519  00177C  6A5B               	clrf	(??_syn_serial_commun_isr+1)& (0+255),c
 12520  00177E  90D8               	bcf	status,0,c
 12521  001780  0100               	movlb	0	; () banked
 12522  001782  3590               	rlcf	syn_serial_commun_isr@count& (0+255),w,b
 12523  001784  6ED9               	movwf	fsr2l,c
 12524  001786  0100               	movlb	0	; () banked
 12525  001788  3591               	rlcf	(syn_serial_commun_isr@count+1)& (0+255),w,b
 12526  00178A  6EDA               	movwf	fsr2h,c
 12527  00178C  0E92               	movlw	low syn_serial_commun_isr@reply_data
 12528  00178E  26D9               	addwf	fsr2l,f,c
 12529  001790  0E00               	movlw	high syn_serial_commun_isr@reply_data
 12530  001792  22DA               	addwfc	fsr2h,f,c
 12531  001794  C05A  FFDE         	movff	??_syn_serial_commun_isr,postinc2
 12532  001798  C05B  FFDD         	movff	??_syn_serial_commun_isr+1,postdec2
 12533                           
 12534                           ; BSR set to: 0
 12535  00179C  0100               	movlb	0	; () banked
 12536  00179E  4B90               	infsnz	syn_serial_commun_isr@count& (0+255),f,b
 12537  0017A0  2B91               	incf	(syn_serial_commun_isr@count+1)& (0+255),f,b
 12538                           
 12539                           ; BSR set to: 0
 12540                           ;main.c: 846: DelayExternalEEPROM();}}
 12541  0017A2  ECD9  F020         	call	i2_DelayExternalEEPROM	;wreg free
 12542  0017A6  0100               	movlb	0	; () banked
 12543  0017A8  4BCF               	infsnz	syn_serial_commun_isr@j& (0+255),f,b
 12544  0017AA  2BD0               	incf	(syn_serial_commun_isr@j+1)& (0+255),f,b
 12545  0017AC  D7CD               	goto	i2l10630
 12546  0017AE                     i2l10646:
 12547                           
 12548                           ; BSR set to: 0
 12549  0017AE  0100               	movlb	0	; () banked
 12550  0017B0  4BD3               	infsnz	syn_serial_commun_isr@i& (0+255),f,b
 12551  0017B2  2BD4               	incf	(syn_serial_commun_isr@i+1)& (0+255),f,b
 12552                           
 12553                           ; BSR set to: 0
 12554  0017B4  0100               	movlb	0	; () banked
 12555  0017B6  BFD4               	btfsc	(syn_serial_commun_isr@i+1)& (0+255),7,b
 12556  0017B8  D7C2               	goto	i2l10628
 12557  0017BA  0100               	movlb	0	; () banked
 12558  0017BC  51D4               	movf	(syn_serial_commun_isr@i+1)& (0+255),w,b
 12559  0017BE  E150               	bnz	i2l10656
 12560  0017C0  D7B7               	goto	L5
 12561  0017C2                     i2l946:
 12562                           
 12563                           ;main.c: 849: reply_data[0] = hours;
 12564  0017C2  C236  F092         	movff	_hours,syn_serial_commun_isr@reply_data	;volatile
 12565  0017C6  C237  F093         	movff	_hours+1,syn_serial_commun_isr@reply_data+1	;volatile
 12566                           
 12567                           ;main.c: 850: reply_data[1] = minutes;
 12568  0017CA  C234  F094         	movff	_minutes,syn_serial_commun_isr@reply_data+2	;volatile
 12569  0017CE  C235  F095         	movff	_minutes+1,syn_serial_commun_isr@reply_data+3	;volatile
 12570                           
 12571                           ;main.c: 851: reply_data[2] = countClock;
 12572  0017D2  C1FA  F096         	movff	_countClock,syn_serial_commun_isr@reply_data+4	;volatile
 12573  0017D6  C1FB  F097         	movff	_countClock+1,syn_serial_commun_isr@reply_data+5	;volatile
 12574                           
 12575                           ;main.c: 852: reply_data[3] = temperature;
 12576  0017DA  C2A3  F098         	movff	_temperature,syn_serial_commun_isr@reply_data+6	;volatile
 12577  0017DE  C2A4  F099         	movff	_temperature+1,syn_serial_commun_isr@reply_data+7	;volatile
 12578                           
 12579                           ;main.c: 853: reply_data[4] = luminosity;
 12580  0017E2  C2A1  F09A         	movff	_luminosity,syn_serial_commun_isr@reply_data+8	;volatile
 12581  0017E6  C2A2  F09B         	movff	_luminosity+1,syn_serial_commun_isr@reply_data+9	;volatile
 12582                           
 12583                           ;main.c: 854: break;
 12584  0017EA  D03A               	goto	i2l10656
 12585  0017EC                     i2l10650:
 12586  0017EC  0E03               	movlw	3
 12587  0017EE  6E2B               	movwf	__fassert@line+1,c
 12588  0017F0  0E58               	movlw	88
 12589  0017F2  6E2A               	movwf	__fassert@line,c
 12590  0017F4  0E9C               	movlw	low STR_46
 12591  0017F6  6E2C               	movwf	__fassert@file,c
 12592  0017F8  0E06               	movlw	high STR_46
 12593  0017FA  6E2D               	movwf	__fassert@file+1,c
 12594  0017FC  0EA3               	movlw	low STR_51
 12595  0017FE  6E2E               	movwf	__fassert@exp,c
 12596  001800  0E06               	movlw	high STR_51
 12597  001802  6E2F               	movwf	__fassert@exp+1,c
 12598  001804  ECA0  F020         	call	__fassert	;wreg free
 12599                           
 12600                           ;main.c: 858: }
 12601                           
 12602                           ;main.c: 857: break;
 12603  001808  D02B               	goto	i2l10656
 12604  00180A                     i2l10654:
 12605  00180A  C0CD  F05A         	movff	syn_serial_commun_isr@msg,??_syn_serial_commun_isr
 12606  00180E  C0CE  F05B         	movff	syn_serial_commun_isr@msg+1,??_syn_serial_commun_isr+1
 12607                           
 12608                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12609                           ; Switch size 1, requested type "space"
 12610                           ; Number of cases is 1, Range of values is 0 to 0
 12611                           ; switch strategies available:
 12612                           ; Name         Instructions Cycles
 12613                           ; simple_byte            4     3 (average)
 12614                           ;	Chosen strategy is simple_byte
 12615  001812  505B               	movf	??_syn_serial_commun_isr+1,w,c
 12616  001814  0A00               	xorlw	0	; case 0
 12617  001816  A4D8               	btfss	status,2,c
 12618  001818  D7E9               	goto	i2l10650
 12619                           
 12620                           ; Switch size 1, requested type "space"
 12621                           ; Number of cases is 11, Range of values is 192 to 202
 12622                           ; switch strategies available:
 12623                           ; Name         Instructions Cycles
 12624                           ; simple_byte           34    18 (average)
 12625                           ;	Chosen strategy is simple_byte
 12626  00181A  505A               	movf	??_syn_serial_commun_isr,w,c
 12627  00181C  0AC0               	xorlw	192	; case 192
 12628  00181E  B4D8               	btfsc	status,2,c
 12629  001820  D719               	goto	i2l931
 12630  001822  0A01               	xorlw	1	; case 193
 12631  001824  B4D8               	btfsc	status,2,c
 12632  001826  D723               	goto	i2l933
 12633  001828  0A03               	xorlw	3	; case 194
 12634  00182A  B4D8               	btfsc	status,2,c
 12635  00182C  D731               	goto	i2l934
 12636  00182E  0A01               	xorlw	1	; case 195
 12637  001830  B4D8               	btfsc	status,2,c
 12638  001832  D737               	goto	i2l935
 12639  001834  0A07               	xorlw	7	; case 196
 12640  001836  B4D8               	btfsc	status,2,c
 12641  001838  D741               	goto	i2l936
 12642  00183A  0A01               	xorlw	1	; case 197
 12643  00183C  B4D8               	btfsc	status,2,c
 12644  00183E  D743               	goto	i2l10620
 12645  001840  0A03               	xorlw	3	; case 198
 12646  001842  B4D8               	btfsc	status,2,c
 12647  001844  D74F               	goto	i2l938
 12648  001846  0A01               	xorlw	1	; case 199
 12649  001848  B4D8               	btfsc	status,2,c
 12650  00184A  D759               	goto	i2l939
 12651  00184C  0A0F               	xorlw	15	; case 200
 12652  00184E  B4D8               	btfsc	status,2,c
 12653  001850  D75F               	goto	i2l940
 12654  001852  0A01               	xorlw	1	; case 201
 12655  001854  B4D8               	btfsc	status,2,c
 12656  001856  D7B5               	goto	i2l946
 12657  001858  0A03               	xorlw	3	; case 202
 12658  00185A  B4D8               	btfsc	status,2,c
 12659  00185C  D75E               	goto	i2l10622
 12660  00185E  D7C6               	goto	i2l10650
 12661  001860                     i2l10656:
 12662                           
 12663                           ;main.c: 861: reply_message=reply_message_serial_com(msg,reply_data);
 12664  001860  C0CD  F054         	movff	syn_serial_commun_isr@msg,reply_message_serial_com@oper
 12665  001864  C0CE  F055         	movff	syn_serial_commun_isr@msg+1,reply_message_serial_com@oper+1
 12666  001868  0E92               	movlw	low syn_serial_commun_isr@reply_data
 12667  00186A  6E56               	movwf	reply_message_serial_com@data,c
 12668  00186C  0E00               	movlw	high syn_serial_commun_isr@reply_data
 12669  00186E  6E57               	movwf	reply_message_serial_com@data+1,c
 12670  001870  ECC3  F006         	call	_reply_message_serial_com	;wreg free
 12671  001874  C054  F0C4         	movff	?_reply_message_serial_com,syn_serial_commun_isr@reply_message
 12672  001878  C055  F0C5         	movff	?_reply_message_serial_com+1,syn_serial_commun_isr@reply_message+1
 12673                           
 12674                           ;main.c: 862: for(i=0;i<strlen(reply_message)+1;i++){
 12675  00187C  0E00               	movlw	0
 12676  00187E  0100               	movlb	0	; () banked
 12677  001880  6FD4               	movwf	(syn_serial_commun_isr@i+1)& (0+255),b
 12678  001882  0E00               	movlw	0
 12679  001884  6FD3               	movwf	syn_serial_commun_isr@i& (0+255),b
 12680  001886  D01F               	goto	i2l10666
 12681  001888                     i2l10660:
 12682                           
 12683                           ; BSR set to: 0
 12684                           ;main.c: 863: c=reply_message[i];
 12685  001888  0100               	movlb	0	; () banked
 12686  00188A  51D3               	movf	syn_serial_commun_isr@i& (0+255),w,b
 12687  00188C  0100               	movlb	0	; () banked
 12688  00188E  25C4               	addwf	syn_serial_commun_isr@reply_message& (0+255),w,b
 12689  001890  6ED9               	movwf	fsr2l,c
 12690  001892  0100               	movlb	0	; () banked
 12691  001894  51D4               	movf	(syn_serial_commun_isr@i+1)& (0+255),w,b
 12692  001896  0100               	movlb	0	; () banked
 12693  001898  21C5               	addwfc	(syn_serial_commun_isr@reply_message+1)& (0+255),w,b
 12694  00189A  6EDA               	movwf	fsr2h,c
 12695  00189C  50DF               	movf	indf2,w,c
 12696  00189E  0100               	movlb	0	; () banked
 12697  0018A0  6FCA               	movwf	syn_serial_commun_isr@c& (0+255),b
 12698  0018A2                     i2l951:
 12699  0018A2  A2AC               	btfss	4012,1,c	;volatile
 12700  0018A4  D7FE               	goto	i2l951
 12701                           
 12702                           ;main.c: 865: WriteUSART(reply_message[i]);
 12703  0018A6  0100               	movlb	0	; () banked
 12704  0018A8  51D3               	movf	syn_serial_commun_isr@i& (0+255),w,b
 12705  0018AA  0100               	movlb	0	; () banked
 12706  0018AC  25C4               	addwf	syn_serial_commun_isr@reply_message& (0+255),w,b
 12707  0018AE  6ED9               	movwf	fsr2l,c
 12708  0018B0  0100               	movlb	0	; () banked
 12709  0018B2  51D4               	movf	(syn_serial_commun_isr@i+1)& (0+255),w,b
 12710  0018B4  0100               	movlb	0	; () banked
 12711  0018B6  21C5               	addwfc	(syn_serial_commun_isr@reply_message+1)& (0+255),w,b
 12712  0018B8  6EDA               	movwf	fsr2h,c
 12713  0018BA  50DF               	movf	indf2,w,c
 12714  0018BC  EC68  F021         	call	_WriteUSART
 12715  0018C0  0100               	movlb	0	; () banked
 12716  0018C2  4BD3               	infsnz	syn_serial_commun_isr@i& (0+255),f,b
 12717  0018C4  2BD4               	incf	(syn_serial_commun_isr@i+1)& (0+255),f,b
 12718  0018C6                     i2l10666:
 12719                           
 12720                           ; BSR set to: 0
 12721  0018C6  C0C4  F001         	movff	syn_serial_commun_isr@reply_message,strlen@s
 12722  0018CA  C0C5  F002         	movff	syn_serial_commun_isr@reply_message+1,strlen@s+1
 12723  0018CE  ECA7  F01F         	call	_strlen	;wreg free
 12724  0018D2  0E01               	movlw	1
 12725  0018D4  2601               	addwf	?_strlen,f,c
 12726  0018D6  0E00               	movlw	0
 12727  0018D8  2202               	addwfc	?_strlen+1,f,c
 12728  0018DA  5001               	movf	?_strlen,w,c
 12729  0018DC  0100               	movlb	0	; () banked
 12730  0018DE  5DD3               	subwf	syn_serial_commun_isr@i& (0+255),w,b
 12731  0018E0  5002               	movf	?_strlen+1,w,c
 12732  0018E2  0100               	movlb	0	; () banked
 12733  0018E4  59D4               	subwfb	(syn_serial_commun_isr@i+1)& (0+255),w,b
 12734  0018E6  A0D8               	btfss	status,0,c
 12735  0018E8  D7CF               	goto	i2l10660
 12736  0018EA                     i2l955:
 12737  0018EA  A2AC               	btfss	4012,1,c	;volatile
 12738  0018EC  D7FE               	goto	i2l955
 12739                           
 12740                           ;main.c: 870: INTCONbits.GIE = 1;
 12741  0018EE  8EF2               	bsf	intcon,7,c	;volatile
 12742                           
 12743                           ;main.c: 873: PIR1bits.RCIF = 0;
 12744  0018F0  9A9E               	bcf	3998,5,c	;volatile
 12745  0018F2  0012               	return		;funcret
 12746  0018F4                     __end_of_syn_serial_commun_isr:
 12747                           	opt stack 0
 12748                           tosu	equ	0xFFF
 12749                           tosh	equ	0xFFE
 12750                           tosl	equ	0xFFD
 12751                           pclatu	equ	0xFFB
 12752                           pclath	equ	0xFFA
 12753                           tblptru	equ	0xFF8
 12754                           tblptrh	equ	0xFF7
 12755                           tblptrl	equ	0xFF6
 12756                           tablat	equ	0xFF5
 12757                           prodh	equ	0xFF4
 12758                           prodl	equ	0xFF3
 12759                           intcon	equ	0xFF2
 12760                           intcon2	equ	0xFF1
 12761                           indf0	equ	0xFEF
 12762                           postinc0	equ	0xFEE
 12763                           fsr0h	equ	0xFEA
 12764                           fsr0l	equ	0xFE9
 12765                           wreg	equ	0xFE8
 12766                           postdec1	equ	0xFE5
 12767                           plusw1	equ	0xFE3
 12768                           fsr1h	equ	0xFE2
 12769                           fsr1l	equ	0xFE1
 12770                           indf2	equ	0xFDF
 12771                           postinc2	equ	0xFDE
 12772                           postdec2	equ	0xFDD
 12773                           plusw2	equ	0xFDB
 12774                           fsr2h	equ	0xFDA
 12775                           fsr2l	equ	0xFD9
 12776                           status	equ	0xFD8
 12777                           
 12778 ;; *************** function i2_readEEEPROM *****************
 12779 ;; Defined at:
 12780 ;;		line 425 in file "main.c"
 12781 ;; Parameters:    Size  Location     Type
 12782 ;;  Addrhi          1    wreg     unsigned char 
 12783 ;;  Addrlo          1    2[COMRAM] unsigned char 
 12784 ;; Auto vars:     Size  Location     Type
 12785 ;;  Addrhi          1    4[COMRAM] unsigned char 
 12786 ;;  readEEEPROM     1    5[COMRAM] unsigned char 
 12787 ;; Return value:  Size  Location     Type
 12788 ;;                  1    wreg      unsigned char 
 12789 ;; Registers used:
 12790 ;;		wreg, status,2, status,0, cstack
 12791 ;; Tracked objects:
 12792 ;;		On entry : 0/0
 12793 ;;		On exit  : 0/0
 12794 ;;		Unchanged: 0/0
 12795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12796 ;;      Params:         1       0       0       0       0       0       0
 12797 ;;      Locals:         2       0       0       0       0       0       0
 12798 ;;      Temps:          1       0       0       0       0       0       0
 12799 ;;      Totals:         4       0       0       0       0       0       0
 12800 ;;Total ram usage:        4 bytes
 12801 ;; Hardware stack levels used:    1
 12802 ;; Hardware stack levels required when called:    1
 12803 ;; This function calls:
 12804 ;;		i2_ReadI2C
 12805 ;;		i2_WriteI2C
 12806 ;; This function is called by:
 12807 ;;		_syn_serial_commun_isr
 12808 ;; This function uses a non-reentrant model
 12809 ;;
 12810                           
 12811                           	psect	text60
 12812  002DA8                     __ptext60:
 12813                           	opt stack 0
 12814  002DA8                     i2_readEEEPROM:
 12815                           	opt stack 22
 12816                           
 12817                           ;incstack = 0
 12818                           ;i2readEEEPROM@Addrhi stored from wreg
 12819  002DA8  6E05               	movwf	i2readEEEPROM@Addrhi,c
 12820  002DAA                     i2l5546:
 12821  002DAA  A4C7               	btfss	4039,2,c	;volatile
 12822  002DAC  D003               	goto	i2u667_40
 12823  002DAE  6A04               	clrf	??i2_readEEEPROM& (0+255),c
 12824  002DB0  2A04               	incf	??i2_readEEEPROM& (0+255),f,c
 12825  002DB2  D001               	goto	i2u667_48
 12826  002DB4                     i2u667_40:
 12827  002DB4  6A04               	clrf	??i2_readEEEPROM& (0+255),c
 12828  002DB6                     i2u667_48:
 12829  002DB6  50C5               	movf	4037,w,c	;volatile
 12830  002DB8  0B1F               	andlw	31
 12831  002DBA  1004               	iorwf	??i2_readEEEPROM,w,c
 12832  002DBC  0900               	iorlw	0
 12833  002DBE  A4D8               	btfss	status,2,c
 12834  002DC0  D7F4               	goto	i2l5546
 12835                           
 12836                           ;main.c: 430: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN); while ((SSPCON2 & 0x1F) | (SSPST
      +                          ATbits.R_W));
 12837  002DC2  80C5               	bsf	4037,0,c	;volatile
 12838  002DC4                     i2l774:
 12839  002DC4  B0C5               	btfsc	4037,0,c	;volatile
 12840  002DC6  D7FE               	goto	i2l774
 12841  002DC8                     i2l5548:
 12842  002DC8  A4C7               	btfss	4039,2,c	;volatile
 12843  002DCA  D003               	goto	i2u670_40
 12844  002DCC  6A04               	clrf	??i2_readEEEPROM& (0+255),c
 12845  002DCE  2A04               	incf	??i2_readEEEPROM& (0+255),f,c
 12846  002DD0  D001               	goto	i2u670_48
 12847  002DD2                     i2u670_40:
 12848  002DD2  6A04               	clrf	??i2_readEEEPROM& (0+255),c
 12849  002DD4                     i2u670_48:
 12850  002DD4  50C5               	movf	4037,w,c	;volatile
 12851  002DD6  0B1F               	andlw	31
 12852  002DD8  1004               	iorwf	??i2_readEEEPROM,w,c
 12853  002DDA  0900               	iorlw	0
 12854  002DDC  A4D8               	btfss	status,2,c
 12855  002DDE  D7F4               	goto	i2l5548
 12856                           
 12857                           ;main.c: 431: WriteI2C(0xA0); while ((SSPCON2 & 0x1F) | (SSPSTATbits.R_W));
 12858  002DE0  0EA0               	movlw	160
 12859  002DE2  ECEB  F01D         	call	i2_WriteI2C
 12860  002DE6                     i2l5552:
 12861  002DE6  A4C7               	btfss	4039,2,c	;volatile
 12862  002DE8  D003               	goto	i2u672_40
 12863  002DEA  6A04               	clrf	??i2_readEEEPROM& (0+255),c
 12864  002DEC  2A04               	incf	??i2_readEEEPROM& (0+255),f,c
 12865  002DEE  D001               	goto	i2u672_48
 12866  002DF0                     i2u672_40:
 12867  002DF0  6A04               	clrf	??i2_readEEEPROM& (0+255),c
 12868  002DF2                     i2u672_48:
 12869  002DF2  50C5               	movf	4037,w,c	;volatile
 12870  002DF4  0B1F               	andlw	31
 12871  002DF6  1004               	iorwf	??i2_readEEEPROM,w,c
 12872  002DF8  0900               	iorlw	0
 12873  002DFA  A4D8               	btfss	status,2,c
 12874  002DFC  D7F4               	goto	i2l5552
 12875                           
 12876                           ;main.c: 432: WriteI2C(Addrhi); while ((SSPCON2 & 0x1F) | (SSPSTATbits.R_W));
 12877  002DFE  5005               	movf	i2readEEEPROM@Addrhi,w,c
 12878  002E00  ECEB  F01D         	call	i2_WriteI2C
 12879  002E04                     i2l5556:
 12880  002E04  A4C7               	btfss	4039,2,c	;volatile
 12881  002E06  D003               	goto	i2u674_40
 12882  002E08  6A04               	clrf	??i2_readEEEPROM& (0+255),c
 12883  002E0A  2A04               	incf	??i2_readEEEPROM& (0+255),f,c
 12884  002E0C  D001               	goto	i2u674_48
 12885  002E0E                     i2u674_40:
 12886  002E0E  6A04               	clrf	??i2_readEEEPROM& (0+255),c
 12887  002E10                     i2u674_48:
 12888  002E10  50C5               	movf	4037,w,c	;volatile
 12889  002E12  0B1F               	andlw	31
 12890  002E14  1004               	iorwf	??i2_readEEEPROM,w,c
 12891  002E16  0900               	iorlw	0
 12892  002E18  A4D8               	btfss	status,2,c
 12893  002E1A  D7F4               	goto	i2l5556
 12894                           
 12895                           ;main.c: 433: WriteI2C(Addrlo); while ((SSPCON2 & 0x1F) | (SSPSTATbits.R_W));
 12896  002E1C  5003               	movf	i2readEEEPROM@Addrlo,w,c
 12897  002E1E  ECEB  F01D         	call	i2_WriteI2C
 12898  002E22                     i2l5560:
 12899  002E22  A4C7               	btfss	4039,2,c	;volatile
 12900  002E24  D003               	goto	i2u676_40
 12901  002E26  6A04               	clrf	??i2_readEEEPROM& (0+255),c
 12902  002E28  2A04               	incf	??i2_readEEEPROM& (0+255),f,c
 12903  002E2A  D001               	goto	i2u676_48
 12904  002E2C                     i2u676_40:
 12905  002E2C  6A04               	clrf	??i2_readEEEPROM& (0+255),c
 12906  002E2E                     i2u676_48:
 12907  002E2E  50C5               	movf	4037,w,c	;volatile
 12908  002E30  0B1F               	andlw	31
 12909  002E32  1004               	iorwf	??i2_readEEEPROM,w,c
 12910  002E34  0900               	iorlw	0
 12911  002E36  A4D8               	btfss	status,2,c
 12912  002E38  D7F4               	goto	i2l5560
 12913                           
 12914                           ;main.c: 434: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN); while ((SSPCON2 & 0x1F) | (SSP
      +                          STATbits.R_W));
 12915  002E3A  82C5               	bsf	4037,1,c	;volatile
 12916  002E3C                     i2l789:
 12917  002E3C  B2C5               	btfsc	4037,1,c	;volatile
 12918  002E3E  D7FE               	goto	i2l789
 12919  002E40                     i2l5562:
 12920  002E40  A4C7               	btfss	4039,2,c	;volatile
 12921  002E42  D003               	goto	i2u679_40
 12922  002E44  6A04               	clrf	??i2_readEEEPROM& (0+255),c
 12923  002E46  2A04               	incf	??i2_readEEEPROM& (0+255),f,c
 12924  002E48  D001               	goto	i2u679_48
 12925  002E4A                     i2u679_40:
 12926  002E4A  6A04               	clrf	??i2_readEEEPROM& (0+255),c
 12927  002E4C                     i2u679_48:
 12928  002E4C  50C5               	movf	4037,w,c	;volatile
 12929  002E4E  0B1F               	andlw	31
 12930  002E50  1004               	iorwf	??i2_readEEEPROM,w,c
 12931  002E52  0900               	iorlw	0
 12932  002E54  A4D8               	btfss	status,2,c
 12933  002E56  D7F4               	goto	i2l5562
 12934                           
 12935                           ;main.c: 435: WriteI2C(0xA1); while ((SSPCON2 & 0x1F) | (SSPSTATbits.R_W));
 12936  002E58  0EA1               	movlw	161
 12937  002E5A  ECEB  F01D         	call	i2_WriteI2C
 12938  002E5E                     i2l5566:
 12939  002E5E  A4C7               	btfss	4039,2,c	;volatile
 12940  002E60  D003               	goto	i2u681_40
 12941  002E62  6A04               	clrf	??i2_readEEEPROM& (0+255),c
 12942  002E64  2A04               	incf	??i2_readEEEPROM& (0+255),f,c
 12943  002E66  D001               	goto	i2u681_48
 12944  002E68                     i2u681_40:
 12945  002E68  6A04               	clrf	??i2_readEEEPROM& (0+255),c
 12946  002E6A                     i2u681_48:
 12947  002E6A  50C5               	movf	4037,w,c	;volatile
 12948  002E6C  0B1F               	andlw	31
 12949  002E6E  1004               	iorwf	??i2_readEEEPROM,w,c
 12950  002E70  0900               	iorlw	0
 12951  002E72  A4D8               	btfss	status,2,c
 12952  002E74  D7F4               	goto	i2l5566
 12953                           
 12954                           ;main.c: 436: value = ReadI2C(); while ((SSPCON2 & 0x1F) | (SSPSTATbits.R_W));
 12955  002E76  EC07  F021         	call	i2_ReadI2C	;wreg free
 12956  002E7A  6E06               	movwf	i2readEEEPROM@value,c
 12957  002E7C                     i2l5570:
 12958  002E7C  A4C7               	btfss	4039,2,c	;volatile
 12959  002E7E  D003               	goto	i2u683_40
 12960  002E80  6A04               	clrf	??i2_readEEEPROM& (0+255),c
 12961  002E82  2A04               	incf	??i2_readEEEPROM& (0+255),f,c
 12962  002E84  D001               	goto	i2u683_48
 12963  002E86                     i2u683_40:
 12964  002E86  6A04               	clrf	??i2_readEEEPROM& (0+255),c
 12965  002E88                     i2u683_48:
 12966  002E88  50C5               	movf	4037,w,c	;volatile
 12967  002E8A  0B1F               	andlw	31
 12968  002E8C  1004               	iorwf	??i2_readEEEPROM,w,c
 12969  002E8E  0900               	iorlw	0
 12970  002E90  A4D8               	btfss	status,2,c
 12971  002E92  D7F4               	goto	i2l5570
 12972                           
 12973                           ;main.c: 437: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 12974  002E94  84C5               	bsf	4037,2,c	;volatile
 12975  002E96                     i2l801:
 12976  002E96  B4C5               	btfsc	4037,2,c	;volatile
 12977  002E98  D7FE               	goto	i2l801
 12978                           
 12979                           ;main.c: 439: return value;
 12980  002E9A  5006               	movf	i2readEEEPROM@value,w,c
 12981  002E9C  0012               	return	
 12982  002E9E                     __end_ofi2_readEEEPROM:
 12983                           	opt stack 0
 12984                           tosu	equ	0xFFF
 12985                           tosh	equ	0xFFE
 12986                           tosl	equ	0xFFD
 12987                           pclatu	equ	0xFFB
 12988                           pclath	equ	0xFFA
 12989                           tblptru	equ	0xFF8
 12990                           tblptrh	equ	0xFF7
 12991                           tblptrl	equ	0xFF6
 12992                           tablat	equ	0xFF5
 12993                           prodh	equ	0xFF4
 12994                           prodl	equ	0xFF3
 12995                           intcon	equ	0xFF2
 12996                           intcon2	equ	0xFF1
 12997                           indf0	equ	0xFEF
 12998                           postinc0	equ	0xFEE
 12999                           fsr0h	equ	0xFEA
 13000                           fsr0l	equ	0xFE9
 13001                           wreg	equ	0xFE8
 13002                           postdec1	equ	0xFE5
 13003                           plusw1	equ	0xFE3
 13004                           fsr1h	equ	0xFE2
 13005                           fsr1l	equ	0xFE1
 13006                           indf2	equ	0xFDF
 13007                           postinc2	equ	0xFDE
 13008                           postdec2	equ	0xFDD
 13009                           plusw2	equ	0xFDB
 13010                           fsr2h	equ	0xFDA
 13011                           fsr2l	equ	0xFD9
 13012                           status	equ	0xFD8
 13013                           
 13014 ;; *************** function i2_WriteI2C *****************
 13015 ;; Defined at:
 13016 ;;		line 47 in file "I2C/i2c.c"
 13017 ;; Parameters:    Size  Location     Type
 13018 ;;  data_out        1    wreg     unsigned char 
 13019 ;; Auto vars:     Size  Location     Type
 13020 ;;  data_out        1    1[COMRAM] unsigned char 
 13021 ;; Return value:  Size  Location     Type
 13022 ;;                  1    wreg      char 
 13023 ;; Registers used:
 13024 ;;		wreg, status,2, status,0
 13025 ;; Tracked objects:
 13026 ;;		On entry : 0/0
 13027 ;;		On exit  : 0/0
 13028 ;;		Unchanged: 0/0
 13029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13030 ;;      Params:         0       0       0       0       0       0       0
 13031 ;;      Locals:         1       0       0       0       0       0       0
 13032 ;;      Temps:          1       0       0       0       0       0       0
 13033 ;;      Totals:         2       0       0       0       0       0       0
 13034 ;;Total ram usage:        2 bytes
 13035 ;; Hardware stack levels used:    1
 13036 ;; This function calls:
 13037 ;;		Nothing
 13038 ;; This function is called by:
 13039 ;;		_getTemperature
 13040 ;;		i2_readEEEPROM
 13041 ;; This function uses a non-reentrant model
 13042 ;;
 13043                           
 13044                           	psect	text61
 13045  003BD6                     __ptext61:
 13046                           	opt stack 0
 13047  003BD6                     i2_WriteI2C:
 13048                           	opt stack 22
 13049                           
 13050                           ;incstack = 0
 13051                           ;i2WriteI2C@data_out stored from wreg
 13052  003BD6  6E02               	movwf	i2WriteI2C@data_out,c
 13053                           
 13054                           ;i2c.c: 49: SSPBUF = data_out;
 13055  003BD8  C002  FFC9         	movff	i2WriteI2C@data_out,4041	;volatile
 13056                           
 13057                           ;i2c.c: 50: if ( SSPCON1bits.WCOL )
 13058  003BDC  BEC6               	btfsc	4038,7,c	;volatile
 13059  003BDE  0012               	return	
 13060                           
 13061                           ;i2c.c: 52: else
 13062                           ;i2c.c: 53: {
 13063                           ;i2c.c: 54: if( ((SSPCON1&0x0F)!=0x08) && ((SSPCON1&0x0F)!=0x0B) )
 13064                           
 13065                           ;i2c.c: 51: return ( -1 );
 13066                           ;	Return value of i2_WriteI2C is never used
 13067  003BE0  50C6               	movf	4038,w,c	;volatile
 13068  003BE2  0B0F               	andlw	15
 13069  003BE4  0A08               	xorlw	8
 13070  003BE6  B4D8               	btfsc	status,2,c
 13071  003BE8  D00C               	goto	i2l5098
 13072  003BEA  50C6               	movf	4038,w,c	;volatile
 13073  003BEC  0B0F               	andlw	15
 13074  003BEE  0A0B               	xorlw	11
 13075  003BF0  B4D8               	btfsc	status,2,c
 13076  003BF2  D007               	goto	i2l5098
 13077                           
 13078                           ;i2c.c: 55: {
 13079                           ;i2c.c: 56: SSPCON1bits.CKP = 1;
 13080  003BF4  88C6               	bsf	4038,4,c	;volatile
 13081  003BF6                     i2l91:
 13082  003BF6  A69E               	btfss	3998,3,c	;volatile
 13083  003BF8  D7FE               	goto	i2l91
 13084                           
 13085                           ;i2c.c: 59: if ( ( !SSPSTATbits.R_W ) && ( !SSPSTATbits.BF ) )
 13086  003BFA  B4C7               	btfsc	4039,2,c	;volatile
 13087  003BFC  0012               	return	
 13088  003BFE  50C7               	movf	4039,w,c	;volatile
 13089                           
 13090                           ;i2c.c: 66: }
 13091                           ;i2c.c: 67: }
 13092                           
 13093                           ;i2c.c: 63: else
 13094                           ;i2c.c: 64: {
 13095                           ;i2c.c: 65: return ( 0 );
 13096                           ;	Return value of i2_WriteI2C is never used
 13097                           
 13098                           ;i2c.c: 62: }
 13099                           
 13100                           ;i2c.c: 60: {
 13101                           ;i2c.c: 61: return ( -2 );
 13102                           ;	Return value of i2_WriteI2C is never used
 13103  003C00  0012               	return	
 13104  003C02                     i2l5098:
 13105                           
 13106                           ;i2c.c: 68: else if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
 13107  003C02  50C6               	movf	4038,w,c	;volatile
 13108  003C04  0B0F               	andlw	15
 13109  003C06  0A08               	xorlw	8
 13110  003C08  B4D8               	btfsc	status,2,c
 13111  003C0A  D005               	goto	i2l100
 13112  003C0C  50C6               	movf	4038,w,c	;volatile
 13113  003C0E  0B0F               	andlw	15
 13114  003C10  0A0B               	xorlw	11
 13115  003C12  A4D8               	btfss	status,2,c
 13116  003C14  0012               	return	
 13117  003C16                     i2l100:
 13118  003C16  B0C7               	btfsc	4039,0,c	;volatile
 13119  003C18  D7FE               	goto	i2l100
 13120  003C1A                     i2l5102:
 13121  003C1A  A4C7               	btfss	4039,2,c	;volatile
 13122  003C1C  D003               	goto	i2u561_40
 13123  003C1E  6A01               	clrf	??i2_WriteI2C& (0+255),c
 13124  003C20  2A01               	incf	??i2_WriteI2C& (0+255),f,c
 13125  003C22  D001               	goto	i2u561_48
 13126  003C24                     i2u561_40:
 13127  003C24  6A01               	clrf	??i2_WriteI2C& (0+255),c
 13128  003C26                     i2u561_48:
 13129  003C26  50C5               	movf	4037,w,c	;volatile
 13130  003C28  0B1F               	andlw	31
 13131  003C2A  1001               	iorwf	??i2_WriteI2C,w,c
 13132  003C2C  0900               	iorlw	0
 13133  003C2E  A4D8               	btfss	status,2,c
 13134  003C30  D7F4               	goto	i2l5102
 13135                           
 13136                           ;i2c.c: 72: if ( SSPCON2bits.ACKSTAT )
 13137  003C32  50C5               	movf	4037,w,c	;volatile
 13138                           
 13139                           ;i2c.c: 74: else return ( 0 );
 13140                           ;	Return value of i2_WriteI2C is never used
 13141                           
 13142                           ;i2c.c: 73: return ( -2 );
 13143                           ;	Return value of i2_WriteI2C is never used
 13144  003C34  0012               	return	
 13145  003C36                     __end_ofi2_WriteI2C:
 13146                           	opt stack 0
 13147                           tosu	equ	0xFFF
 13148                           tosh	equ	0xFFE
 13149                           tosl	equ	0xFFD
 13150                           pclatu	equ	0xFFB
 13151                           pclath	equ	0xFFA
 13152                           tblptru	equ	0xFF8
 13153                           tblptrh	equ	0xFF7
 13154                           tblptrl	equ	0xFF6
 13155                           tablat	equ	0xFF5
 13156                           prodh	equ	0xFF4
 13157                           prodl	equ	0xFF3
 13158                           intcon	equ	0xFF2
 13159                           intcon2	equ	0xFF1
 13160                           indf0	equ	0xFEF
 13161                           postinc0	equ	0xFEE
 13162                           fsr0h	equ	0xFEA
 13163                           fsr0l	equ	0xFE9
 13164                           wreg	equ	0xFE8
 13165                           postdec1	equ	0xFE5
 13166                           plusw1	equ	0xFE3
 13167                           fsr1h	equ	0xFE2
 13168                           fsr1l	equ	0xFE1
 13169                           indf2	equ	0xFDF
 13170                           postinc2	equ	0xFDE
 13171                           postdec2	equ	0xFDD
 13172                           plusw2	equ	0xFDB
 13173                           fsr2h	equ	0xFDA
 13174                           fsr2l	equ	0xFD9
 13175                           status	equ	0xFD8
 13176                           
 13177 ;; *************** function i2_ReadI2C *****************
 13178 ;; Defined at:
 13179 ;;		line 32 in file "I2C/i2c.c"
 13180 ;; Parameters:    Size  Location     Type
 13181 ;;		None
 13182 ;; Auto vars:     Size  Location     Type
 13183 ;;		None
 13184 ;; Return value:  Size  Location     Type
 13185 ;;                  1    wreg      unsigned char 
 13186 ;; Registers used:
 13187 ;;		wreg, status,2, status,0
 13188 ;; Tracked objects:
 13189 ;;		On entry : 0/0
 13190 ;;		On exit  : 0/0
 13191 ;;		Unchanged: 0/0
 13192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13193 ;;      Params:         0       0       0       0       0       0       0
 13194 ;;      Locals:         0       0       0       0       0       0       0
 13195 ;;      Temps:          0       0       0       0       0       0       0
 13196 ;;      Totals:         0       0       0       0       0       0       0
 13197 ;;Total ram usage:        0 bytes
 13198 ;; Hardware stack levels used:    1
 13199 ;; This function calls:
 13200 ;;		Nothing
 13201 ;; This function is called by:
 13202 ;;		_getTemperature
 13203 ;;		i2_readEEEPROM
 13204 ;; This function uses a non-reentrant model
 13205 ;;
 13206                           
 13207                           	psect	text62
 13208  00420E                     __ptext62:
 13209                           	opt stack 0
 13210  00420E                     i2_ReadI2C:
 13211                           	opt stack 22
 13212                           
 13213                           ;i2c.c: 34: if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
 13214                           
 13215                           ;incstack = 0
 13216  00420E  50C6               	movf	4038,w,c	;volatile
 13217  004210  0B0F               	andlw	15
 13218  004212  0A08               	xorlw	8
 13219  004214  B4D8               	btfsc	status,2,c
 13220  004216  D004               	goto	i2l80
 13221  004218  50C6               	movf	4038,w,c	;volatile
 13222  00421A  0B0F               	andlw	15
 13223  00421C  0A0B               	xorlw	11
 13224  00421E  B4D8               	btfsc	status,2,c
 13225  004220                     i2l80:
 13226                           
 13227                           ;i2c.c: 35: SSPCON2bits.RCEN = 1;
 13228  004220  86C5               	bsf	4037,3,c	;volatile
 13229  004222                     i2l81:
 13230  004222  A0C7               	btfss	4039,0,c	;volatile
 13231  004224  D7FE               	goto	i2l81
 13232                           
 13233                           ;i2c.c: 37: return ( SSPBUF );
 13234  004226  50C9               	movf	4041,w,c	;volatile
 13235  004228  0012               	return	
 13236  00422A                     __end_ofi2_ReadI2C:
 13237                           	opt stack 0
 13238                           tosu	equ	0xFFF
 13239                           tosh	equ	0xFFE
 13240                           tosl	equ	0xFFD
 13241                           pclatu	equ	0xFFB
 13242                           pclath	equ	0xFFA
 13243                           tblptru	equ	0xFF8
 13244                           tblptrh	equ	0xFF7
 13245                           tblptrl	equ	0xFF6
 13246                           tablat	equ	0xFF5
 13247                           prodh	equ	0xFF4
 13248                           prodl	equ	0xFF3
 13249                           intcon	equ	0xFF2
 13250                           intcon2	equ	0xFF1
 13251                           indf0	equ	0xFEF
 13252                           postinc0	equ	0xFEE
 13253                           fsr0h	equ	0xFEA
 13254                           fsr0l	equ	0xFE9
 13255                           wreg	equ	0xFE8
 13256                           postdec1	equ	0xFE5
 13257                           plusw1	equ	0xFE3
 13258                           fsr1h	equ	0xFE2
 13259                           fsr1l	equ	0xFE1
 13260                           indf2	equ	0xFDF
 13261                           postinc2	equ	0xFDE
 13262                           postdec2	equ	0xFDD
 13263                           plusw2	equ	0xFDB
 13264                           fsr2h	equ	0xFDA
 13265                           fsr2l	equ	0xFD9
 13266                           status	equ	0xFD8
 13267                           
 13268 ;; *************** function i2_DelayExternalEEPROM *****************
 13269 ;; Defined at:
 13270 ;;		line 145 in file "main.c"
 13271 ;; Parameters:    Size  Location     Type
 13272 ;;		None
 13273 ;; Auto vars:     Size  Location     Type
 13274 ;;  DelayExterna    2    0[COMRAM] int 
 13275 ;; Return value:  Size  Location     Type
 13276 ;;                  1    wreg      void 
 13277 ;; Registers used:
 13278 ;;		wreg, status,2, status,0, cstack
 13279 ;; Tracked objects:
 13280 ;;		On entry : 0/0
 13281 ;;		On exit  : 0/0
 13282 ;;		Unchanged: 0/0
 13283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13284 ;;      Params:         0       0       0       0       0       0       0
 13285 ;;      Locals:         2       0       0       0       0       0       0
 13286 ;;      Temps:          0       0       0       0       0       0       0
 13287 ;;      Totals:         2       0       0       0       0       0       0
 13288 ;;Total ram usage:        2 bytes
 13289 ;; Hardware stack levels used:    1
 13290 ;; Hardware stack levels required when called:    1
 13291 ;; This function calls:
 13292 ;;		i2_DelayFor18TCY
 13293 ;; This function is called by:
 13294 ;;		_syn_serial_commun_isr
 13295 ;; This function uses a non-reentrant model
 13296 ;;
 13297                           
 13298                           	psect	text63
 13299  0041B2                     __ptext63:
 13300                           	opt stack 0
 13301  0041B2                     i2_DelayExternalEEPROM:
 13302                           	opt stack 22
 13303                           
 13304                           ;main.c: 146: int i;
 13305                           ;main.c: 147: for(i=0;i<1000;i++){
 13306                           
 13307                           ;incstack = 0
 13308  0041B2  0E00               	movlw	0
 13309  0041B4  6E02               	movwf	i2DelayExternalEEPROM@i+1,c
 13310  0041B6  0E00               	movlw	0
 13311  0041B8  6E01               	movwf	i2DelayExternalEEPROM@i,c
 13312  0041BA                     i2l5534:
 13313  0041BA  BE02               	btfsc	i2DelayExternalEEPROM@i+1,7,c
 13314  0041BC  D006               	goto	i2l5538
 13315  0041BE  0EE8               	movlw	232
 13316  0041C0  5C01               	subwf	i2DelayExternalEEPROM@i,w,c
 13317  0041C2  0E03               	movlw	3
 13318  0041C4  5802               	subwfb	i2DelayExternalEEPROM@i+1,w,c
 13319  0041C6  B0D8               	btfsc	status,0,c
 13320  0041C8  0012               	return	
 13321  0041CA                     i2l5538:
 13322                           
 13323                           ;main.c: 148: DelayFor18TCY();
 13324  0041CA  EC22  F021         	call	i2_DelayFor18TCY	;wreg free
 13325  0041CE  4A01               	infsnz	i2DelayExternalEEPROM@i,f,c
 13326  0041D0  2A02               	incf	i2DelayExternalEEPROM@i+1,f,c
 13327  0041D2  D7F3               	goto	i2l5534
 13328  0041D4                     __end_ofi2_DelayExternalEEPROM:
 13329                           	opt stack 0
 13330                           tosu	equ	0xFFF
 13331                           tosh	equ	0xFFE
 13332                           tosl	equ	0xFFD
 13333                           pclatu	equ	0xFFB
 13334                           pclath	equ	0xFFA
 13335                           tblptru	equ	0xFF8
 13336                           tblptrh	equ	0xFF7
 13337                           tblptrl	equ	0xFF6
 13338                           tablat	equ	0xFF5
 13339                           prodh	equ	0xFF4
 13340                           prodl	equ	0xFF3
 13341                           intcon	equ	0xFF2
 13342                           intcon2	equ	0xFF1
 13343                           indf0	equ	0xFEF
 13344                           postinc0	equ	0xFEE
 13345                           fsr0h	equ	0xFEA
 13346                           fsr0l	equ	0xFE9
 13347                           wreg	equ	0xFE8
 13348                           postdec1	equ	0xFE5
 13349                           plusw1	equ	0xFE3
 13350                           fsr1h	equ	0xFE2
 13351                           fsr1l	equ	0xFE1
 13352                           indf2	equ	0xFDF
 13353                           postinc2	equ	0xFDE
 13354                           postdec2	equ	0xFDD
 13355                           plusw2	equ	0xFDB
 13356                           fsr2h	equ	0xFDA
 13357                           fsr2l	equ	0xFD9
 13358                           status	equ	0xFD8
 13359                           
 13360 ;; *************** function i2_DelayFor18TCY *****************
 13361 ;; Defined at:
 13362 ;;		line 129 in file "main.c"
 13363 ;; Parameters:    Size  Location     Type
 13364 ;;		None
 13365 ;; Auto vars:     Size  Location     Type
 13366 ;;		None
 13367 ;; Return value:  Size  Location     Type
 13368 ;;                  1    wreg      void 
 13369 ;; Registers used:
 13370 ;;		None
 13371 ;; Tracked objects:
 13372 ;;		On entry : 0/0
 13373 ;;		On exit  : 0/0
 13374 ;;		Unchanged: 0/0
 13375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13376 ;;      Params:         0       0       0       0       0       0       0
 13377 ;;      Locals:         0       0       0       0       0       0       0
 13378 ;;      Temps:          0       0       0       0       0       0       0
 13379 ;;      Totals:         0       0       0       0       0       0       0
 13380 ;;Total ram usage:        0 bytes
 13381 ;; Hardware stack levels used:    1
 13382 ;; This function calls:
 13383 ;;		Nothing
 13384 ;; This function is called by:
 13385 ;;		i2_DelayExternalEEPROM
 13386 ;; This function uses a non-reentrant model
 13387 ;;
 13388                           
 13389                           	psect	text64
 13390  004244                     __ptext64:
 13391                           	opt stack 0
 13392  004244                     i2_DelayFor18TCY:
 13393                           	opt stack 22
 13394                           
 13395                           ;main.c: 131: __nop();
 13396                           
 13397                           ;incstack = 0
 13398  004244  F000               	nop	
 13399                           
 13400                           ;main.c: 132: __nop();
 13401  004246  F000               	nop	
 13402                           
 13403                           ;main.c: 133: __nop();
 13404  004248  F000               	nop	
 13405                           
 13406                           ;main.c: 134: __nop();
 13407  00424A  F000               	nop	
 13408                           
 13409                           ;main.c: 135: __nop();
 13410  00424C  F000               	nop	
 13411                           
 13412                           ;main.c: 136: __nop();
 13413  00424E  F000               	nop	
 13414                           
 13415                           ;main.c: 137: __nop();
 13416  004250  F000               	nop	
 13417                           
 13418                           ;main.c: 138: __nop();
 13419  004252  F000               	nop	
 13420                           
 13421                           ;main.c: 139: __nop();
 13422  004254  F000               	nop	
 13423                           
 13424                           ;main.c: 140: __nop();
 13425  004256  F000               	nop	
 13426                           
 13427                           ;main.c: 141: __nop();
 13428  004258  F000               	nop	
 13429                           
 13430                           ;main.c: 142: __nop();
 13431  00425A  F000               	nop	
 13432  00425C  0012               	return		;funcret
 13433  00425E                     __end_ofi2_DelayFor18TCY:
 13434                           	opt stack 0
 13435                           tosu	equ	0xFFF
 13436                           tosh	equ	0xFFE
 13437                           tosl	equ	0xFFD
 13438                           pclatu	equ	0xFFB
 13439                           pclath	equ	0xFFA
 13440                           tblptru	equ	0xFF8
 13441                           tblptrh	equ	0xFF7
 13442                           tblptrl	equ	0xFF6
 13443                           tablat	equ	0xFF5
 13444                           prodh	equ	0xFF4
 13445                           prodl	equ	0xFF3
 13446                           intcon	equ	0xFF2
 13447                           intcon2	equ	0xFF1
 13448                           indf0	equ	0xFEF
 13449                           postinc0	equ	0xFEE
 13450                           fsr0h	equ	0xFEA
 13451                           fsr0l	equ	0xFE9
 13452                           wreg	equ	0xFE8
 13453                           postdec1	equ	0xFE5
 13454                           plusw1	equ	0xFE3
 13455                           fsr1h	equ	0xFE2
 13456                           fsr1l	equ	0xFE1
 13457                           indf2	equ	0xFDF
 13458                           postinc2	equ	0xFDE
 13459                           postdec2	equ	0xFDD
 13460                           plusw2	equ	0xFDB
 13461                           fsr2h	equ	0xFDA
 13462                           fsr2l	equ	0xFD9
 13463                           status	equ	0xFD8
 13464                           
 13465 ;; *************** function _strlen *****************
 13466 ;; Defined at:
 13467 ;;		line 4 in file "/opt/microchip/xc8/v1.41/sources/common/strlen.c"
 13468 ;; Parameters:    Size  Location     Type
 13469 ;;  s               2    0[COMRAM] PTR const unsigned char 
 13470 ;;		 -> reply_message_serial_com@str(248), 
 13471 ;; Auto vars:     Size  Location     Type
 13472 ;;  cp              2    4[COMRAM] PTR const unsigned char 
 13473 ;;		 -> reply_message_serial_com@str(248), 
 13474 ;; Return value:  Size  Location     Type
 13475 ;;                  2    0[COMRAM] unsigned int 
 13476 ;; Registers used:
 13477 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13478 ;; Tracked objects:
 13479 ;;		On entry : 0/0
 13480 ;;		On exit  : 0/0
 13481 ;;		Unchanged: 0/0
 13482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13483 ;;      Params:         2       0       0       0       0       0       0
 13484 ;;      Locals:         2       0       0       0       0       0       0
 13485 ;;      Temps:          2       0       0       0       0       0       0
 13486 ;;      Totals:         6       0       0       0       0       0       0
 13487 ;;Total ram usage:        6 bytes
 13488 ;; Hardware stack levels used:    1
 13489 ;; This function calls:
 13490 ;;		Nothing
 13491 ;; This function is called by:
 13492 ;;		_assync_serial_commun
 13493 ;;		_syn_serial_commun_isr
 13494 ;; This function uses a non-reentrant model
 13495 ;;
 13496                           
 13497                           	psect	text65
 13498  003F4E                     __ptext65:
 13499                           	opt stack 0
 13500  003F4E                     _strlen:
 13501                           	opt stack 22
 13502                           
 13503                           ;incstack = 0
 13504  003F4E  C001  F005         	movff	strlen@s,strlen@cp
 13505  003F52  C002  F006         	movff	strlen@s+1,strlen@cp+1
 13506  003F56  D002               	goto	i2l4900
 13507  003F58                     i2l4898:
 13508  003F58  4A05               	infsnz	strlen@cp,f,c
 13509  003F5A  2A06               	incf	strlen@cp+1,f,c
 13510  003F5C                     i2l4900:
 13511  003F5C  C005  FFD9         	movff	strlen@cp,fsr2l
 13512  003F60  C006  FFDA         	movff	strlen@cp+1,fsr2h
 13513  003F64  50DF               	movf	indf2,w,c
 13514  003F66  A4D8               	btfss	status,2,c
 13515  003F68  D7F7               	goto	i2l4898
 13516  003F6A  C001  F003         	movff	strlen@s,??_strlen
 13517  003F6E  C002  F004         	movff	strlen@s+1,??_strlen+1
 13518  003F72  1E03               	comf	??_strlen,f,c
 13519  003F74  1E04               	comf	??_strlen+1,f,c
 13520  003F76  4A03               	infsnz	??_strlen,f,c
 13521  003F78  2A04               	incf	??_strlen+1,f,c
 13522  003F7A  5005               	movf	strlen@cp,w,c
 13523  003F7C  2403               	addwf	??_strlen,w,c
 13524  003F7E  6E01               	movwf	?_strlen,c
 13525  003F80  5006               	movf	strlen@cp+1,w,c
 13526  003F82  2004               	addwfc	??_strlen+1,w,c
 13527  003F84  6E02               	movwf	?_strlen+1,c
 13528  003F86  0012               	return	
 13529  003F88                     __end_of_strlen:
 13530                           	opt stack 0
 13531                           tosu	equ	0xFFF
 13532                           tosh	equ	0xFFE
 13533                           tosl	equ	0xFFD
 13534                           pclatu	equ	0xFFB
 13535                           pclath	equ	0xFFA
 13536                           tblptru	equ	0xFF8
 13537                           tblptrh	equ	0xFF7
 13538                           tblptrl	equ	0xFF6
 13539                           tablat	equ	0xFF5
 13540                           prodh	equ	0xFF4
 13541                           prodl	equ	0xFF3
 13542                           intcon	equ	0xFF2
 13543                           intcon2	equ	0xFF1
 13544                           indf0	equ	0xFEF
 13545                           postinc0	equ	0xFEE
 13546                           fsr0h	equ	0xFEA
 13547                           fsr0l	equ	0xFE9
 13548                           wreg	equ	0xFE8
 13549                           postdec1	equ	0xFE5
 13550                           plusw1	equ	0xFE3
 13551                           fsr1h	equ	0xFE2
 13552                           fsr1l	equ	0xFE1
 13553                           indf2	equ	0xFDF
 13554                           postinc2	equ	0xFDE
 13555                           postdec2	equ	0xFDD
 13556                           plusw2	equ	0xFDB
 13557                           fsr2h	equ	0xFDA
 13558                           fsr2l	equ	0xFD9
 13559                           status	equ	0xFD8
 13560                           
 13561 ;; *************** function _reply_message_serial_com *****************
 13562 ;; Defined at:
 13563 ;;		line 9 in file "COM_PC/serial_com.c"
 13564 ;; Parameters:    Size  Location     Type
 13565 ;;  oper            2   83[COMRAM] int 
 13566 ;;  data            2   85[COMRAM] PTR int 
 13567 ;;		 -> syn_serial_commun_isr@reply_data(40), assync_serial_commun@reply_data(10), 
 13568 ;; Auto vars:     Size  Location     Type
 13569 ;;  str           248    0[BANK1 ] unsigned char [248]
 13570 ;; Return value:  Size  Location     Type
 13571 ;;                  2   83[COMRAM] PTR unsigned char 
 13572 ;; Registers used:
 13573 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13574 ;; Tracked objects:
 13575 ;;		On entry : 0/0
 13576 ;;		On exit  : 0/0
 13577 ;;		Unchanged: 0/0
 13578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13579 ;;      Params:         4       0       0       0       0       0       0
 13580 ;;      Locals:         0       0     248       0       0       0       0
 13581 ;;      Temps:          2       0       0       0       0       0       0
 13582 ;;      Totals:         6       0     248       0       0       0       0
 13583 ;;Total ram usage:      254 bytes
 13584 ;; Hardware stack levels used:    1
 13585 ;; Hardware stack levels required when called:    3
 13586 ;; This function calls:
 13587 ;;		i2_sprintf
 13588 ;; This function is called by:
 13589 ;;		_assync_serial_commun
 13590 ;;		_syn_serial_commun_isr
 13591 ;; This function uses a non-reentrant model
 13592 ;;
 13593                           
 13594                           	psect	text66
 13595  000D86                     __ptext66:
 13596                           	opt stack 0
 13597  000D86                     _reply_message_serial_com:
 13598                           	opt stack 19
 13599                           
 13600                           ;serial_com.c: 11: char str[248];
 13601                           ;serial_com.c: 13: switch(oper){
 13602                           
 13603                           ;incstack = 0
 13604  000D86  D2B4               	goto	i2l10004
 13605  000D88                     i2l9978:
 13606                           
 13607                           ;serial_com.c: 15: sprintf(str,"%d %d %d %d %d %d",0xFD,0xC0,data[0],data[1],data[2],0xF
      +                          E); break;
 13608  000D88  0E00               	movlw	low reply_message_serial_com@str
 13609  000D8A  6E1C               	movwf	i2sprintf@wh,c
 13610  000D8C  0E01               	movlw	high reply_message_serial_com@str
 13611  000D8E  6E1D               	movwf	i2sprintf@wh+1,c
 13612  000D90  0E3E               	movlw	low (STR_11+51)
 13613  000D92  6E1E               	movwf	i2sprintf@f,c
 13614  000D94  0E06               	movlw	high (STR_11+51)
 13615  000D96  6E1F               	movwf	i2sprintf@f+1,c
 13616  000D98  0E00               	movlw	0
 13617  000D9A  6E21               	movwf	?i2_sprintf+5,c
 13618  000D9C  0EFD               	movlw	253
 13619  000D9E  6E20               	movwf	?i2_sprintf+4,c
 13620  000DA0  0E00               	movlw	0
 13621  000DA2  6E23               	movwf	?i2_sprintf+7,c
 13622  000DA4  0EC0               	movlw	192
 13623  000DA6  6E22               	movwf	?i2_sprintf+6,c
 13624  000DA8  C056  FFD9         	movff	reply_message_serial_com@data,fsr2l
 13625  000DAC  C057  FFDA         	movff	reply_message_serial_com@data+1,fsr2h
 13626  000DB0  CFDE F024          	movff	postinc2,?i2_sprintf+8
 13627  000DB4  CFDD F025          	movff	postdec2,?i2_sprintf+9
 13628  000DB8  EE20 F002          	lfsr	2,2
 13629  000DBC  5056               	movf	reply_message_serial_com@data,w,c
 13630  000DBE  26D9               	addwf	fsr2l,f,c
 13631  000DC0  5057               	movf	reply_message_serial_com@data+1,w,c
 13632  000DC2  22DA               	addwfc	fsr2h,f,c
 13633  000DC4  CFDE F026          	movff	postinc2,?i2_sprintf+10
 13634  000DC8  CFDD F027          	movff	postdec2,?i2_sprintf+11
 13635  000DCC  EE20 F004          	lfsr	2,4
 13636  000DD0  5056               	movf	reply_message_serial_com@data,w,c
 13637  000DD2  26D9               	addwf	fsr2l,f,c
 13638  000DD4  5057               	movf	reply_message_serial_com@data+1,w,c
 13639  000DD6  22DA               	addwfc	fsr2h,f,c
 13640  000DD8  CFDE F028          	movff	postinc2,?i2_sprintf+12
 13641  000DDC  CFDD F029          	movff	postdec2,?i2_sprintf+13
 13642  000DE0  0E00               	movlw	0
 13643  000DE2  6E2B               	movwf	?i2_sprintf+15,c
 13644  000DE4  0EFE               	movlw	254
 13645  000DE6  6E2A               	movwf	?i2_sprintf+14,c
 13646  000DE8  EC0C  F01F         	call	i2_sprintf	;wreg free
 13647  000DEC  D2AE               	goto	i2l10006
 13648  000DEE                     i2l9980:
 13649                           
 13650                           ;serial_com.c: 17: sprintf(str,"%d %d %d %d",0xFD,0xC1,0,0xFE); break;
 13651  000DEE  0E00               	movlw	low reply_message_serial_com@str
 13652  000DF0  6E1C               	movwf	i2sprintf@wh,c
 13653  000DF2  0E01               	movlw	high reply_message_serial_com@str
 13654  000DF4  6E1D               	movwf	i2sprintf@wh+1,c
 13655  000DF6  0E44               	movlw	low (STR_11+57)
 13656  000DF8  6E1E               	movwf	i2sprintf@f,c
 13657  000DFA  0E06               	movlw	high (STR_11+57)
 13658  000DFC  6E1F               	movwf	i2sprintf@f+1,c
 13659  000DFE  0E00               	movlw	0
 13660  000E00  6E21               	movwf	?i2_sprintf+5,c
 13661  000E02  0EFD               	movlw	253
 13662  000E04  6E20               	movwf	?i2_sprintf+4,c
 13663  000E06  0E00               	movlw	0
 13664  000E08  6E23               	movwf	?i2_sprintf+7,c
 13665  000E0A  0EC1               	movlw	193
 13666  000E0C  6E22               	movwf	?i2_sprintf+6,c
 13667  000E0E  0E00               	movlw	0
 13668  000E10  6E25               	movwf	?i2_sprintf+9,c
 13669  000E12  0E00               	movlw	0
 13670  000E14  6E24               	movwf	?i2_sprintf+8,c
 13671  000E16  0E00               	movlw	0
 13672  000E18  6E27               	movwf	?i2_sprintf+11,c
 13673  000E1A  0EFE               	movlw	254
 13674  000E1C  6E26               	movwf	?i2_sprintf+10,c
 13675  000E1E  EC0C  F01F         	call	i2_sprintf	;wreg free
 13676  000E22  D293               	goto	i2l10006
 13677  000E24                     i2l9982:
 13678                           
 13679                           ;serial_com.c: 19: sprintf(str,"%d %d %d %d %d",0xFD,0xC2,data[0],data[1],0xFE); break;
 13680  000E24  0E00               	movlw	low reply_message_serial_com@str
 13681  000E26  6E1C               	movwf	i2sprintf@wh,c
 13682  000E28  0E01               	movlw	high reply_message_serial_com@str
 13683  000E2A  6E1D               	movwf	i2sprintf@wh+1,c
 13684  000E2C  0E41               	movlw	low (STR_11+54)
 13685  000E2E  6E1E               	movwf	i2sprintf@f,c
 13686  000E30  0E06               	movlw	high (STR_11+54)
 13687  000E32  6E1F               	movwf	i2sprintf@f+1,c
 13688  000E34  0E00               	movlw	0
 13689  000E36  6E21               	movwf	?i2_sprintf+5,c
 13690  000E38  0EFD               	movlw	253
 13691  000E3A  6E20               	movwf	?i2_sprintf+4,c
 13692  000E3C  0E00               	movlw	0
 13693  000E3E  6E23               	movwf	?i2_sprintf+7,c
 13694  000E40  0EC2               	movlw	194
 13695  000E42  6E22               	movwf	?i2_sprintf+6,c
 13696  000E44  C056  FFD9         	movff	reply_message_serial_com@data,fsr2l
 13697  000E48  C057  FFDA         	movff	reply_message_serial_com@data+1,fsr2h
 13698  000E4C  CFDE F024          	movff	postinc2,?i2_sprintf+8
 13699  000E50  CFDD F025          	movff	postdec2,?i2_sprintf+9
 13700  000E54  EE20 F002          	lfsr	2,2
 13701  000E58  5056               	movf	reply_message_serial_com@data,w,c
 13702  000E5A  26D9               	addwf	fsr2l,f,c
 13703  000E5C  5057               	movf	reply_message_serial_com@data+1,w,c
 13704  000E5E  22DA               	addwfc	fsr2h,f,c
 13705  000E60  CFDE F026          	movff	postinc2,?i2_sprintf+10
 13706  000E64  CFDD F027          	movff	postdec2,?i2_sprintf+11
 13707  000E68  0E00               	movlw	0
 13708  000E6A  6E29               	movwf	?i2_sprintf+13,c
 13709  000E6C  0EFE               	movlw	254
 13710  000E6E  6E28               	movwf	?i2_sprintf+12,c
 13711  000E70  EC0C  F01F         	call	i2_sprintf	;wreg free
 13712  000E74  D26A               	goto	i2l10006
 13713  000E76                     i2l9984:
 13714                           
 13715                           ;serial_com.c: 21: sprintf(str,"%d %d %d %d %d %d",0xFD,0xC3,data[0],data[1],data[2],0xF
      +                          E); break;
 13716  000E76  0E00               	movlw	low reply_message_serial_com@str
 13717  000E78  6E1C               	movwf	i2sprintf@wh,c
 13718  000E7A  0E01               	movlw	high reply_message_serial_com@str
 13719  000E7C  6E1D               	movwf	i2sprintf@wh+1,c
 13720  000E7E  0E3E               	movlw	low (STR_11+51)
 13721  000E80  6E1E               	movwf	i2sprintf@f,c
 13722  000E82  0E06               	movlw	high (STR_11+51)
 13723  000E84  6E1F               	movwf	i2sprintf@f+1,c
 13724  000E86  0E00               	movlw	0
 13725  000E88  6E21               	movwf	?i2_sprintf+5,c
 13726  000E8A  0EFD               	movlw	253
 13727  000E8C  6E20               	movwf	?i2_sprintf+4,c
 13728  000E8E  0E00               	movlw	0
 13729  000E90  6E23               	movwf	?i2_sprintf+7,c
 13730  000E92  0EC3               	movlw	195
 13731  000E94  6E22               	movwf	?i2_sprintf+6,c
 13732  000E96  C056  FFD9         	movff	reply_message_serial_com@data,fsr2l
 13733  000E9A  C057  FFDA         	movff	reply_message_serial_com@data+1,fsr2h
 13734  000E9E  CFDE F024          	movff	postinc2,?i2_sprintf+8
 13735  000EA2  CFDD F025          	movff	postdec2,?i2_sprintf+9
 13736  000EA6  EE20 F002          	lfsr	2,2
 13737  000EAA  5056               	movf	reply_message_serial_com@data,w,c
 13738  000EAC  26D9               	addwf	fsr2l,f,c
 13739  000EAE  5057               	movf	reply_message_serial_com@data+1,w,c
 13740  000EB0  22DA               	addwfc	fsr2h,f,c
 13741  000EB2  CFDE F026          	movff	postinc2,?i2_sprintf+10
 13742  000EB6  CFDD F027          	movff	postdec2,?i2_sprintf+11
 13743  000EBA  EE20 F004          	lfsr	2,4
 13744  000EBE  5056               	movf	reply_message_serial_com@data,w,c
 13745  000EC0  26D9               	addwf	fsr2l,f,c
 13746  000EC2  5057               	movf	reply_message_serial_com@data+1,w,c
 13747  000EC4  22DA               	addwfc	fsr2h,f,c
 13748  000EC6  CFDE F028          	movff	postinc2,?i2_sprintf+12
 13749  000ECA  CFDD F029          	movff	postdec2,?i2_sprintf+13
 13750  000ECE  0E00               	movlw	0
 13751  000ED0  6E2B               	movwf	?i2_sprintf+15,c
 13752  000ED2  0EFE               	movlw	254
 13753  000ED4  6E2A               	movwf	?i2_sprintf+14,c
 13754  000ED6  EC0C  F01F         	call	i2_sprintf	;wreg free
 13755  000EDA  D237               	goto	i2l10006
 13756  000EDC                     i2l9986:
 13757                           
 13758                           ;serial_com.c: 23: sprintf(str,"%d %d %d %d",0xFD,0xC4,0,0xFE); break;
 13759  000EDC  0E00               	movlw	low reply_message_serial_com@str
 13760  000EDE  6E1C               	movwf	i2sprintf@wh,c
 13761  000EE0  0E01               	movlw	high reply_message_serial_com@str
 13762  000EE2  6E1D               	movwf	i2sprintf@wh+1,c
 13763  000EE4  0E44               	movlw	low (STR_11+57)
 13764  000EE6  6E1E               	movwf	i2sprintf@f,c
 13765  000EE8  0E06               	movlw	high (STR_11+57)
 13766  000EEA  6E1F               	movwf	i2sprintf@f+1,c
 13767  000EEC  0E00               	movlw	0
 13768  000EEE  6E21               	movwf	?i2_sprintf+5,c
 13769  000EF0  0EFD               	movlw	253
 13770  000EF2  6E20               	movwf	?i2_sprintf+4,c
 13771  000EF4  0E00               	movlw	0
 13772  000EF6  6E23               	movwf	?i2_sprintf+7,c
 13773  000EF8  0EC4               	movlw	196
 13774  000EFA  6E22               	movwf	?i2_sprintf+6,c
 13775  000EFC  0E00               	movlw	0
 13776  000EFE  6E25               	movwf	?i2_sprintf+9,c
 13777  000F00  0E00               	movlw	0
 13778  000F02  6E24               	movwf	?i2_sprintf+8,c
 13779  000F04  0E00               	movlw	0
 13780  000F06  6E27               	movwf	?i2_sprintf+11,c
 13781  000F08  0EFE               	movlw	254
 13782  000F0A  6E26               	movwf	?i2_sprintf+10,c
 13783  000F0C  EC0C  F01F         	call	i2_sprintf	;wreg free
 13784  000F10  D21C               	goto	i2l10006
 13785  000F12                     i2l9988:
 13786                           
 13787                           ;serial_com.c: 25: sprintf(str,"%d %d %d %d",0xFD,0xC5,0,0xFE); break;
 13788  000F12  0E00               	movlw	low reply_message_serial_com@str
 13789  000F14  6E1C               	movwf	i2sprintf@wh,c
 13790  000F16  0E01               	movlw	high reply_message_serial_com@str
 13791  000F18  6E1D               	movwf	i2sprintf@wh+1,c
 13792  000F1A  0E44               	movlw	low (STR_11+57)
 13793  000F1C  6E1E               	movwf	i2sprintf@f,c
 13794  000F1E  0E06               	movlw	high (STR_11+57)
 13795  000F20  6E1F               	movwf	i2sprintf@f+1,c
 13796  000F22  0E00               	movlw	0
 13797  000F24  6E21               	movwf	?i2_sprintf+5,c
 13798  000F26  0EFD               	movlw	253
 13799  000F28  6E20               	movwf	?i2_sprintf+4,c
 13800  000F2A  0E00               	movlw	0
 13801  000F2C  6E23               	movwf	?i2_sprintf+7,c
 13802  000F2E  0EC5               	movlw	197
 13803  000F30  6E22               	movwf	?i2_sprintf+6,c
 13804  000F32  0E00               	movlw	0
 13805  000F34  6E25               	movwf	?i2_sprintf+9,c
 13806  000F36  0E00               	movlw	0
 13807  000F38  6E24               	movwf	?i2_sprintf+8,c
 13808  000F3A  0E00               	movlw	0
 13809  000F3C  6E27               	movwf	?i2_sprintf+11,c
 13810  000F3E  0EFE               	movlw	254
 13811  000F40  6E26               	movwf	?i2_sprintf+10,c
 13812  000F42  EC0C  F01F         	call	i2_sprintf	;wreg free
 13813  000F46  D201               	goto	i2l10006
 13814  000F48                     i2l9990:
 13815                           
 13816                           ;serial_com.c: 27: sprintf(str,"%d %d %d %d %d %d",0xFD,0xC6,data[0],data[1],data[2],0xF
      +                          E); break;
 13817  000F48  0E00               	movlw	low reply_message_serial_com@str
 13818  000F4A  6E1C               	movwf	i2sprintf@wh,c
 13819  000F4C  0E01               	movlw	high reply_message_serial_com@str
 13820  000F4E  6E1D               	movwf	i2sprintf@wh+1,c
 13821  000F50  0E3E               	movlw	low (STR_11+51)
 13822  000F52  6E1E               	movwf	i2sprintf@f,c
 13823  000F54  0E06               	movlw	high (STR_11+51)
 13824  000F56  6E1F               	movwf	i2sprintf@f+1,c
 13825  000F58  0E00               	movlw	0
 13826  000F5A  6E21               	movwf	?i2_sprintf+5,c
 13827  000F5C  0EFD               	movlw	253
 13828  000F5E  6E20               	movwf	?i2_sprintf+4,c
 13829  000F60  0E00               	movlw	0
 13830  000F62  6E23               	movwf	?i2_sprintf+7,c
 13831  000F64  0EC6               	movlw	198
 13832  000F66  6E22               	movwf	?i2_sprintf+6,c
 13833  000F68  C056  FFD9         	movff	reply_message_serial_com@data,fsr2l
 13834  000F6C  C057  FFDA         	movff	reply_message_serial_com@data+1,fsr2h
 13835  000F70  CFDE F024          	movff	postinc2,?i2_sprintf+8
 13836  000F74  CFDD F025          	movff	postdec2,?i2_sprintf+9
 13837  000F78  EE20 F002          	lfsr	2,2
 13838  000F7C  5056               	movf	reply_message_serial_com@data,w,c
 13839  000F7E  26D9               	addwf	fsr2l,f,c
 13840  000F80  5057               	movf	reply_message_serial_com@data+1,w,c
 13841  000F82  22DA               	addwfc	fsr2h,f,c
 13842  000F84  CFDE F026          	movff	postinc2,?i2_sprintf+10
 13843  000F88  CFDD F027          	movff	postdec2,?i2_sprintf+11
 13844  000F8C  EE20 F004          	lfsr	2,4
 13845  000F90  5056               	movf	reply_message_serial_com@data,w,c
 13846  000F92  26D9               	addwf	fsr2l,f,c
 13847  000F94  5057               	movf	reply_message_serial_com@data+1,w,c
 13848  000F96  22DA               	addwfc	fsr2h,f,c
 13849  000F98  CFDE F028          	movff	postinc2,?i2_sprintf+12
 13850  000F9C  CFDD F029          	movff	postdec2,?i2_sprintf+13
 13851  000FA0  0E00               	movlw	0
 13852  000FA2  6E2B               	movwf	?i2_sprintf+15,c
 13853  000FA4  0EFE               	movlw	254
 13854  000FA6  6E2A               	movwf	?i2_sprintf+14,c
 13855  000FA8  EC0C  F01F         	call	i2_sprintf	;wreg free
 13856  000FAC  D1CE               	goto	i2l10006
 13857  000FAE                     i2l9992:
 13858                           
 13859                           ;serial_com.c: 29: sprintf(str,"%d %d %d %d",0xFD,0xC7,0,0xFE); break;
 13860  000FAE  0E00               	movlw	low reply_message_serial_com@str
 13861  000FB0  6E1C               	movwf	i2sprintf@wh,c
 13862  000FB2  0E01               	movlw	high reply_message_serial_com@str
 13863  000FB4  6E1D               	movwf	i2sprintf@wh+1,c
 13864  000FB6  0E44               	movlw	low (STR_11+57)
 13865  000FB8  6E1E               	movwf	i2sprintf@f,c
 13866  000FBA  0E06               	movlw	high (STR_11+57)
 13867  000FBC  6E1F               	movwf	i2sprintf@f+1,c
 13868  000FBE  0E00               	movlw	0
 13869  000FC0  6E21               	movwf	?i2_sprintf+5,c
 13870  000FC2  0EFD               	movlw	253
 13871  000FC4  6E20               	movwf	?i2_sprintf+4,c
 13872  000FC6  0E00               	movlw	0
 13873  000FC8  6E23               	movwf	?i2_sprintf+7,c
 13874  000FCA  0EC7               	movlw	199
 13875  000FCC  6E22               	movwf	?i2_sprintf+6,c
 13876  000FCE  0E00               	movlw	0
 13877  000FD0  6E25               	movwf	?i2_sprintf+9,c
 13878  000FD2  0E00               	movlw	0
 13879  000FD4  6E24               	movwf	?i2_sprintf+8,c
 13880  000FD6  0E00               	movlw	0
 13881  000FD8  6E27               	movwf	?i2_sprintf+11,c
 13882  000FDA  0EFE               	movlw	254
 13883  000FDC  6E26               	movwf	?i2_sprintf+10,c
 13884  000FDE  EC0C  F01F         	call	i2_sprintf	;wreg free
 13885  000FE2  D1B3               	goto	i2l10006
 13886  000FE4                     i2l9994:
 13887                           
 13888                           ;serial_com.c: 31: sprintf(str,"%d %d %d %d",0xFD,0xC8,0,0xFE); break;
 13889  000FE4  0E00               	movlw	low reply_message_serial_com@str
 13890  000FE6  6E1C               	movwf	i2sprintf@wh,c
 13891  000FE8  0E01               	movlw	high reply_message_serial_com@str
 13892  000FEA  6E1D               	movwf	i2sprintf@wh+1,c
 13893  000FEC  0E44               	movlw	low (STR_11+57)
 13894  000FEE  6E1E               	movwf	i2sprintf@f,c
 13895  000FF0  0E06               	movlw	high (STR_11+57)
 13896  000FF2  6E1F               	movwf	i2sprintf@f+1,c
 13897  000FF4  0E00               	movlw	0
 13898  000FF6  6E21               	movwf	?i2_sprintf+5,c
 13899  000FF8  0EFD               	movlw	253
 13900  000FFA  6E20               	movwf	?i2_sprintf+4,c
 13901  000FFC  0E00               	movlw	0
 13902  000FFE  6E23               	movwf	?i2_sprintf+7,c
 13903  001000  0EC8               	movlw	200
 13904  001002  6E22               	movwf	?i2_sprintf+6,c
 13905  001004  0E00               	movlw	0
 13906  001006  6E25               	movwf	?i2_sprintf+9,c
 13907  001008  0E00               	movlw	0
 13908  00100A  6E24               	movwf	?i2_sprintf+8,c
 13909  00100C  0E00               	movlw	0
 13910  00100E  6E27               	movwf	?i2_sprintf+11,c
 13911  001010  0EFE               	movlw	254
 13912  001012  6E26               	movwf	?i2_sprintf+10,c
 13913  001014  EC0C  F01F         	call	i2_sprintf	;wreg free
 13914  001018  D198               	goto	i2l10006
 13915  00101A                     i2l9996:
 13916                           
 13917                           ;serial_com.c: 33: sprintf(str,"%d %d %d %d %d %d %d %d",0xFD,0xC9,data[0],data[1],data[
      +                          2],data[3],data[4],0xFE); break;
 13918  00101A  0E00               	movlw	low reply_message_serial_com@str
 13919  00101C  6E1C               	movwf	i2sprintf@wh,c
 13920  00101E  0E01               	movlw	high reply_message_serial_com@str
 13921  001020  6E1D               	movwf	i2sprintf@wh+1,c
 13922  001022  0E38               	movlw	low (STR_11+45)
 13923  001024  6E1E               	movwf	i2sprintf@f,c
 13924  001026  0E06               	movlw	high (STR_11+45)
 13925  001028  6E1F               	movwf	i2sprintf@f+1,c
 13926  00102A  0E00               	movlw	0
 13927  00102C  6E21               	movwf	?i2_sprintf+5,c
 13928  00102E  0EFD               	movlw	253
 13929  001030  6E20               	movwf	?i2_sprintf+4,c
 13930  001032  0E00               	movlw	0
 13931  001034  6E23               	movwf	?i2_sprintf+7,c
 13932  001036  0EC9               	movlw	201
 13933  001038  6E22               	movwf	?i2_sprintf+6,c
 13934  00103A  C056  FFD9         	movff	reply_message_serial_com@data,fsr2l
 13935  00103E  C057  FFDA         	movff	reply_message_serial_com@data+1,fsr2h
 13936  001042  CFDE F024          	movff	postinc2,?i2_sprintf+8
 13937  001046  CFDD F025          	movff	postdec2,?i2_sprintf+9
 13938  00104A  EE20 F002          	lfsr	2,2
 13939  00104E  5056               	movf	reply_message_serial_com@data,w,c
 13940  001050  26D9               	addwf	fsr2l,f,c
 13941  001052  5057               	movf	reply_message_serial_com@data+1,w,c
 13942  001054  22DA               	addwfc	fsr2h,f,c
 13943  001056  CFDE F026          	movff	postinc2,?i2_sprintf+10
 13944  00105A  CFDD F027          	movff	postdec2,?i2_sprintf+11
 13945  00105E  EE20 F004          	lfsr	2,4
 13946  001062  5056               	movf	reply_message_serial_com@data,w,c
 13947  001064  26D9               	addwf	fsr2l,f,c
 13948  001066  5057               	movf	reply_message_serial_com@data+1,w,c
 13949  001068  22DA               	addwfc	fsr2h,f,c
 13950  00106A  CFDE F028          	movff	postinc2,?i2_sprintf+12
 13951  00106E  CFDD F029          	movff	postdec2,?i2_sprintf+13
 13952  001072  EE20 F006          	lfsr	2,6
 13953  001076  5056               	movf	reply_message_serial_com@data,w,c
 13954  001078  26D9               	addwf	fsr2l,f,c
 13955  00107A  5057               	movf	reply_message_serial_com@data+1,w,c
 13956  00107C  22DA               	addwfc	fsr2h,f,c
 13957  00107E  CFDE F02A          	movff	postinc2,?i2_sprintf+14
 13958  001082  CFDD F02B          	movff	postdec2,?i2_sprintf+15
 13959  001086  EE20 F008          	lfsr	2,8
 13960  00108A  5056               	movf	reply_message_serial_com@data,w,c
 13961  00108C  26D9               	addwf	fsr2l,f,c
 13962  00108E  5057               	movf	reply_message_serial_com@data+1,w,c
 13963  001090  22DA               	addwfc	fsr2h,f,c
 13964  001092  CFDE F02C          	movff	postinc2,?i2_sprintf+16
 13965  001096  CFDD F02D          	movff	postdec2,?i2_sprintf+17
 13966  00109A  0E00               	movlw	0
 13967  00109C  6E2F               	movwf	?i2_sprintf+19,c
 13968  00109E  0EFE               	movlw	254
 13969  0010A0  6E2E               	movwf	?i2_sprintf+18,c
 13970  0010A2  EC0C  F01F         	call	i2_sprintf	;wreg free
 13971  0010A6  D151               	goto	i2l10006
 13972  0010A8                     i2l9998:
 13973                           
 13974                           ;serial_com.c: 35: sprintf(str,"%d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d
      +                           %d %d %d %d",0xFD,0xCA,data[0],data[1],data[2],data[3],data[4],data[5],data[6],data[7],
      +                          data[8],data[9],data[10],data[11],data[12],data[13],data[14],data[15],data[16],data[17],
      +                          data[
 13975  0010A8  0E00               	movlw	low reply_message_serial_com@str
 13976  0010AA  6E1C               	movwf	i2sprintf@wh,c
 13977  0010AC  0E01               	movlw	high reply_message_serial_com@str
 13978  0010AE  6E1D               	movwf	i2sprintf@wh+1,c
 13979  0010B0  0E0B               	movlw	low STR_11
 13980  0010B2  6E1E               	movwf	i2sprintf@f,c
 13981  0010B4  0E06               	movlw	high STR_11
 13982  0010B6  6E1F               	movwf	i2sprintf@f+1,c
 13983  0010B8  0E00               	movlw	0
 13984  0010BA  6E21               	movwf	?i2_sprintf+5,c
 13985  0010BC  0EFD               	movlw	253
 13986  0010BE  6E20               	movwf	?i2_sprintf+4,c
 13987  0010C0  0E00               	movlw	0
 13988  0010C2  6E23               	movwf	?i2_sprintf+7,c
 13989  0010C4  0ECA               	movlw	202
 13990  0010C6  6E22               	movwf	?i2_sprintf+6,c
 13991  0010C8  C056  FFD9         	movff	reply_message_serial_com@data,fsr2l
 13992  0010CC  C057  FFDA         	movff	reply_message_serial_com@data+1,fsr2h
 13993  0010D0  CFDE F024          	movff	postinc2,?i2_sprintf+8
 13994  0010D4  CFDD F025          	movff	postdec2,?i2_sprintf+9
 13995  0010D8  EE20 F002          	lfsr	2,2
 13996  0010DC  5056               	movf	reply_message_serial_com@data,w,c
 13997  0010DE  26D9               	addwf	fsr2l,f,c
 13998  0010E0  5057               	movf	reply_message_serial_com@data+1,w,c
 13999  0010E2  22DA               	addwfc	fsr2h,f,c
 14000  0010E4  CFDE F026          	movff	postinc2,?i2_sprintf+10
 14001  0010E8  CFDD F027          	movff	postdec2,?i2_sprintf+11
 14002  0010EC  EE20 F004          	lfsr	2,4
 14003  0010F0  5056               	movf	reply_message_serial_com@data,w,c
 14004  0010F2  26D9               	addwf	fsr2l,f,c
 14005  0010F4  5057               	movf	reply_message_serial_com@data+1,w,c
 14006  0010F6  22DA               	addwfc	fsr2h,f,c
 14007  0010F8  CFDE F028          	movff	postinc2,?i2_sprintf+12
 14008  0010FC  CFDD F029          	movff	postdec2,?i2_sprintf+13
 14009  001100  EE20 F006          	lfsr	2,6
 14010  001104  5056               	movf	reply_message_serial_com@data,w,c
 14011  001106  26D9               	addwf	fsr2l,f,c
 14012  001108  5057               	movf	reply_message_serial_com@data+1,w,c
 14013  00110A  22DA               	addwfc	fsr2h,f,c
 14014  00110C  CFDE F02A          	movff	postinc2,?i2_sprintf+14
 14015  001110  CFDD F02B          	movff	postdec2,?i2_sprintf+15
 14016  001114  EE20 F008          	lfsr	2,8
 14017  001118  5056               	movf	reply_message_serial_com@data,w,c
 14018  00111A  26D9               	addwf	fsr2l,f,c
 14019  00111C  5057               	movf	reply_message_serial_com@data+1,w,c
 14020  00111E  22DA               	addwfc	fsr2h,f,c
 14021  001120  CFDE F02C          	movff	postinc2,?i2_sprintf+16
 14022  001124  CFDD F02D          	movff	postdec2,?i2_sprintf+17
 14023  001128  EE20 F00A          	lfsr	2,10
 14024  00112C  5056               	movf	reply_message_serial_com@data,w,c
 14025  00112E  26D9               	addwf	fsr2l,f,c
 14026  001130  5057               	movf	reply_message_serial_com@data+1,w,c
 14027  001132  22DA               	addwfc	fsr2h,f,c
 14028  001134  CFDE F02E          	movff	postinc2,?i2_sprintf+18
 14029  001138  CFDD F02F          	movff	postdec2,?i2_sprintf+19
 14030  00113C  EE20 F00C          	lfsr	2,12
 14031  001140  5056               	movf	reply_message_serial_com@data,w,c
 14032  001142  26D9               	addwf	fsr2l,f,c
 14033  001144  5057               	movf	reply_message_serial_com@data+1,w,c
 14034  001146  22DA               	addwfc	fsr2h,f,c
 14035  001148  CFDE F030          	movff	postinc2,?i2_sprintf+20
 14036  00114C  CFDD F031          	movff	postdec2,?i2_sprintf+21
 14037  001150  EE20 F00E          	lfsr	2,14
 14038  001154  5056               	movf	reply_message_serial_com@data,w,c
 14039  001156  26D9               	addwf	fsr2l,f,c
 14040  001158  5057               	movf	reply_message_serial_com@data+1,w,c
 14041  00115A  22DA               	addwfc	fsr2h,f,c
 14042  00115C  CFDE F032          	movff	postinc2,?i2_sprintf+22
 14043  001160  CFDD F033          	movff	postdec2,?i2_sprintf+23
 14044  001164  EE20 F010          	lfsr	2,16
 14045  001168  5056               	movf	reply_message_serial_com@data,w,c
 14046  00116A  26D9               	addwf	fsr2l,f,c
 14047  00116C  5057               	movf	reply_message_serial_com@data+1,w,c
 14048  00116E  22DA               	addwfc	fsr2h,f,c
 14049  001170  CFDE F034          	movff	postinc2,?i2_sprintf+24
 14050  001174  CFDD F035          	movff	postdec2,?i2_sprintf+25
 14051  001178  EE20 F012          	lfsr	2,18
 14052  00117C  5056               	movf	reply_message_serial_com@data,w,c
 14053  00117E  26D9               	addwf	fsr2l,f,c
 14054  001180  5057               	movf	reply_message_serial_com@data+1,w,c
 14055  001182  22DA               	addwfc	fsr2h,f,c
 14056  001184  CFDE F036          	movff	postinc2,?i2_sprintf+26
 14057  001188  CFDD F037          	movff	postdec2,?i2_sprintf+27
 14058  00118C  EE20 F014          	lfsr	2,20
 14059  001190  5056               	movf	reply_message_serial_com@data,w,c
 14060  001192  26D9               	addwf	fsr2l,f,c
 14061  001194  5057               	movf	reply_message_serial_com@data+1,w,c
 14062  001196  22DA               	addwfc	fsr2h,f,c
 14063  001198  CFDE F038          	movff	postinc2,?i2_sprintf+28
 14064  00119C  CFDD F039          	movff	postdec2,?i2_sprintf+29
 14065  0011A0  EE20 F016          	lfsr	2,22
 14066  0011A4  5056               	movf	reply_message_serial_com@data,w,c
 14067  0011A6  26D9               	addwf	fsr2l,f,c
 14068  0011A8  5057               	movf	reply_message_serial_com@data+1,w,c
 14069  0011AA  22DA               	addwfc	fsr2h,f,c
 14070  0011AC  CFDE F03A          	movff	postinc2,?i2_sprintf+30
 14071  0011B0  CFDD F03B          	movff	postdec2,?i2_sprintf+31
 14072  0011B4  EE20 F018          	lfsr	2,24
 14073  0011B8  5056               	movf	reply_message_serial_com@data,w,c
 14074  0011BA  26D9               	addwf	fsr2l,f,c
 14075  0011BC  5057               	movf	reply_message_serial_com@data+1,w,c
 14076  0011BE  22DA               	addwfc	fsr2h,f,c
 14077  0011C0  CFDE F03C          	movff	postinc2,?i2_sprintf+32
 14078  0011C4  CFDD F03D          	movff	postdec2,?i2_sprintf+33
 14079  0011C8  EE20 F01A          	lfsr	2,26
 14080  0011CC  5056               	movf	reply_message_serial_com@data,w,c
 14081  0011CE  26D9               	addwf	fsr2l,f,c
 14082  0011D0  5057               	movf	reply_message_serial_com@data+1,w,c
 14083  0011D2  22DA               	addwfc	fsr2h,f,c
 14084  0011D4  CFDE F03E          	movff	postinc2,?i2_sprintf+34
 14085  0011D8  CFDD F03F          	movff	postdec2,?i2_sprintf+35
 14086  0011DC  EE20 F01C          	lfsr	2,28
 14087  0011E0  5056               	movf	reply_message_serial_com@data,w,c
 14088  0011E2  26D9               	addwf	fsr2l,f,c
 14089  0011E4  5057               	movf	reply_message_serial_com@data+1,w,c
 14090  0011E6  22DA               	addwfc	fsr2h,f,c
 14091  0011E8  CFDE F040          	movff	postinc2,?i2_sprintf+36
 14092  0011EC  CFDD F041          	movff	postdec2,?i2_sprintf+37
 14093  0011F0  EE20 F01E          	lfsr	2,30
 14094  0011F4  5056               	movf	reply_message_serial_com@data,w,c
 14095  0011F6  26D9               	addwf	fsr2l,f,c
 14096  0011F8  5057               	movf	reply_message_serial_com@data+1,w,c
 14097  0011FA  22DA               	addwfc	fsr2h,f,c
 14098  0011FC  CFDE F042          	movff	postinc2,?i2_sprintf+38
 14099  001200  CFDD F043          	movff	postdec2,?i2_sprintf+39
 14100  001204  EE20 F020          	lfsr	2,32
 14101  001208  5056               	movf	reply_message_serial_com@data,w,c
 14102  00120A  26D9               	addwf	fsr2l,f,c
 14103  00120C  5057               	movf	reply_message_serial_com@data+1,w,c
 14104  00120E  22DA               	addwfc	fsr2h,f,c
 14105  001210  CFDE F044          	movff	postinc2,?i2_sprintf+40
 14106  001214  CFDD F045          	movff	postdec2,?i2_sprintf+41
 14107  001218  EE20 F022          	lfsr	2,34
 14108  00121C  5056               	movf	reply_message_serial_com@data,w,c
 14109  00121E  26D9               	addwf	fsr2l,f,c
 14110  001220  5057               	movf	reply_message_serial_com@data+1,w,c
 14111  001222  22DA               	addwfc	fsr2h,f,c
 14112  001224  CFDE F046          	movff	postinc2,?i2_sprintf+42
 14113  001228  CFDD F047          	movff	postdec2,?i2_sprintf+43
 14114  00122C  EE20 F024          	lfsr	2,36
 14115  001230  5056               	movf	reply_message_serial_com@data,w,c
 14116  001232  26D9               	addwf	fsr2l,f,c
 14117  001234  5057               	movf	reply_message_serial_com@data+1,w,c
 14118  001236  22DA               	addwfc	fsr2h,f,c
 14119  001238  CFDE F048          	movff	postinc2,?i2_sprintf+44
 14120  00123C  CFDD F049          	movff	postdec2,?i2_sprintf+45
 14121  001240  EE20 F026          	lfsr	2,38
 14122  001244  5056               	movf	reply_message_serial_com@data,w,c
 14123  001246  26D9               	addwf	fsr2l,f,c
 14124  001248  5057               	movf	reply_message_serial_com@data+1,w,c
 14125  00124A  22DA               	addwfc	fsr2h,f,c
 14126  00124C  CFDE F04A          	movff	postinc2,?i2_sprintf+46
 14127  001250  CFDD F04B          	movff	postdec2,?i2_sprintf+47
 14128  001254  0E00               	movlw	0
 14129  001256  6E4D               	movwf	?i2_sprintf+49,c
 14130  001258  0EFE               	movlw	254
 14131  00125A  6E4C               	movwf	?i2_sprintf+48,c
 14132  00125C  EC0C  F01F         	call	i2_sprintf	;wreg free
 14133  001260  D074               	goto	i2l10006
 14134  001262                     i2l10000:
 14135                           
 14136                           ;serial_com.c: 37: sprintf(str,"%d %d %d %d %d %d %d %d",0xFD,0xCB,data[0],data[1],data[
      +                          2],data[3],data[4],0xFE); break;
 14137  001262  0E00               	movlw	low reply_message_serial_com@str
 14138  001264  6E1C               	movwf	i2sprintf@wh,c
 14139  001266  0E01               	movlw	high reply_message_serial_com@str
 14140  001268  6E1D               	movwf	i2sprintf@wh+1,c
 14141  00126A  0E38               	movlw	low (STR_11+45)
 14142  00126C  6E1E               	movwf	i2sprintf@f,c
 14143  00126E  0E06               	movlw	high (STR_11+45)
 14144  001270  6E1F               	movwf	i2sprintf@f+1,c
 14145  001272  0E00               	movlw	0
 14146  001274  6E21               	movwf	?i2_sprintf+5,c
 14147  001276  0EFD               	movlw	253
 14148  001278  6E20               	movwf	?i2_sprintf+4,c
 14149  00127A  0E00               	movlw	0
 14150  00127C  6E23               	movwf	?i2_sprintf+7,c
 14151  00127E  0ECB               	movlw	203
 14152  001280  6E22               	movwf	?i2_sprintf+6,c
 14153  001282  C056  FFD9         	movff	reply_message_serial_com@data,fsr2l
 14154  001286  C057  FFDA         	movff	reply_message_serial_com@data+1,fsr2h
 14155  00128A  CFDE F024          	movff	postinc2,?i2_sprintf+8
 14156  00128E  CFDD F025          	movff	postdec2,?i2_sprintf+9
 14157  001292  EE20 F002          	lfsr	2,2
 14158  001296  5056               	movf	reply_message_serial_com@data,w,c
 14159  001298  26D9               	addwf	fsr2l,f,c
 14160  00129A  5057               	movf	reply_message_serial_com@data+1,w,c
 14161  00129C  22DA               	addwfc	fsr2h,f,c
 14162  00129E  CFDE F026          	movff	postinc2,?i2_sprintf+10
 14163  0012A2  CFDD F027          	movff	postdec2,?i2_sprintf+11
 14164  0012A6  EE20 F004          	lfsr	2,4
 14165  0012AA  5056               	movf	reply_message_serial_com@data,w,c
 14166  0012AC  26D9               	addwf	fsr2l,f,c
 14167  0012AE  5057               	movf	reply_message_serial_com@data+1,w,c
 14168  0012B0  22DA               	addwfc	fsr2h,f,c
 14169  0012B2  CFDE F028          	movff	postinc2,?i2_sprintf+12
 14170  0012B6  CFDD F029          	movff	postdec2,?i2_sprintf+13
 14171  0012BA  EE20 F006          	lfsr	2,6
 14172  0012BE  5056               	movf	reply_message_serial_com@data,w,c
 14173  0012C0  26D9               	addwf	fsr2l,f,c
 14174  0012C2  5057               	movf	reply_message_serial_com@data+1,w,c
 14175  0012C4  22DA               	addwfc	fsr2h,f,c
 14176  0012C6  CFDE F02A          	movff	postinc2,?i2_sprintf+14
 14177  0012CA  CFDD F02B          	movff	postdec2,?i2_sprintf+15
 14178  0012CE  EE20 F008          	lfsr	2,8
 14179  0012D2  5056               	movf	reply_message_serial_com@data,w,c
 14180  0012D4  26D9               	addwf	fsr2l,f,c
 14181  0012D6  5057               	movf	reply_message_serial_com@data+1,w,c
 14182  0012D8  22DA               	addwfc	fsr2h,f,c
 14183  0012DA  CFDE F02C          	movff	postinc2,?i2_sprintf+16
 14184  0012DE  CFDD F02D          	movff	postdec2,?i2_sprintf+17
 14185  0012E2  0E00               	movlw	0
 14186  0012E4  6E2F               	movwf	?i2_sprintf+19,c
 14187  0012E6  0EFE               	movlw	254
 14188  0012E8  6E2E               	movwf	?i2_sprintf+18,c
 14189  0012EA  EC0C  F01F         	call	i2_sprintf	;wreg free
 14190                           
 14191                           ;serial_com.c: 40: }
 14192                           
 14193                           ;serial_com.c: 39: break;
 14194                           
 14195                           ;serial_com.c: 38: default:
 14196  0012EE  D02D               	goto	i2l10006
 14197  0012F0                     i2l10004:
 14198  0012F0  C054  F058         	movff	reply_message_serial_com@oper,??_reply_message_serial_com
 14199  0012F4  C055  F059         	movff	reply_message_serial_com@oper+1,??_reply_message_serial_com+1
 14200                           
 14201                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14202                           ; Switch size 1, requested type "space"
 14203                           ; Number of cases is 1, Range of values is 0 to 0
 14204                           ; switch strategies available:
 14205                           ; Name         Instructions Cycles
 14206                           ; simple_byte            4     3 (average)
 14207                           ;	Chosen strategy is simple_byte
 14208  0012F8  5059               	movf	??_reply_message_serial_com+1,w,c
 14209  0012FA  0A00               	xorlw	0	; case 0
 14210  0012FC  A4D8               	btfss	status,2,c
 14211  0012FE  D025               	goto	i2l10006
 14212                           
 14213                           ; Switch size 1, requested type "space"
 14214                           ; Number of cases is 12, Range of values is 192 to 203
 14215                           ; switch strategies available:
 14216                           ; Name         Instructions Cycles
 14217                           ; simple_byte           37    19 (average)
 14218                           ;	Chosen strategy is simple_byte
 14219  001300  5058               	movf	??_reply_message_serial_com,w,c
 14220  001302  0AC0               	xorlw	192	; case 192
 14221  001304  B4D8               	btfsc	status,2,c
 14222  001306  D540               	goto	i2l9978
 14223  001308  0A01               	xorlw	1	; case 193
 14224  00130A  B4D8               	btfsc	status,2,c
 14225  00130C  D570               	goto	i2l9980
 14226  00130E  0A03               	xorlw	3	; case 194
 14227  001310  B4D8               	btfsc	status,2,c
 14228  001312  D588               	goto	i2l9982
 14229  001314  0A01               	xorlw	1	; case 195
 14230  001316  B4D8               	btfsc	status,2,c
 14231  001318  D5AE               	goto	i2l9984
 14232  00131A  0A07               	xorlw	7	; case 196
 14233  00131C  B4D8               	btfsc	status,2,c
 14234  00131E  D5DE               	goto	i2l9986
 14235  001320  0A01               	xorlw	1	; case 197
 14236  001322  B4D8               	btfsc	status,2,c
 14237  001324  D5F6               	goto	i2l9988
 14238  001326  0A03               	xorlw	3	; case 198
 14239  001328  B4D8               	btfsc	status,2,c
 14240  00132A  D60E               	goto	i2l9990
 14241  00132C  0A01               	xorlw	1	; case 199
 14242  00132E  B4D8               	btfsc	status,2,c
 14243  001330  D63E               	goto	i2l9992
 14244  001332  0A0F               	xorlw	15	; case 200
 14245  001334  B4D8               	btfsc	status,2,c
 14246  001336  D656               	goto	i2l9994
 14247  001338  0A01               	xorlw	1	; case 201
 14248  00133A  B4D8               	btfsc	status,2,c
 14249  00133C  D66E               	goto	i2l9996
 14250  00133E  0A03               	xorlw	3	; case 202
 14251  001340  B4D8               	btfsc	status,2,c
 14252  001342  D6B2               	goto	i2l9998
 14253  001344  0A01               	xorlw	1	; case 203
 14254  001346  B4D8               	btfsc	status,2,c
 14255  001348  D78C               	goto	i2l10000
 14256  00134A                     i2l10006:
 14257                           
 14258                           ;serial_com.c: 41: return str;
 14259  00134A  0E00               	movlw	low reply_message_serial_com@str
 14260  00134C  6E54               	movwf	?_reply_message_serial_com,c
 14261  00134E  0E01               	movlw	high reply_message_serial_com@str
 14262  001350  6E55               	movwf	?_reply_message_serial_com+1,c
 14263  001352  0012               	return	
 14264  001354                     __end_of_reply_message_serial_com:
 14265                           	opt stack 0
 14266                           tosu	equ	0xFFF
 14267                           tosh	equ	0xFFE
 14268                           tosl	equ	0xFFD
 14269                           pclatu	equ	0xFFB
 14270                           pclath	equ	0xFFA
 14271                           tblptru	equ	0xFF8
 14272                           tblptrh	equ	0xFF7
 14273                           tblptrl	equ	0xFF6
 14274                           tablat	equ	0xFF5
 14275                           prodh	equ	0xFF4
 14276                           prodl	equ	0xFF3
 14277                           intcon	equ	0xFF2
 14278                           intcon2	equ	0xFF1
 14279                           indf0	equ	0xFEF
 14280                           postinc0	equ	0xFEE
 14281                           fsr0h	equ	0xFEA
 14282                           fsr0l	equ	0xFE9
 14283                           wreg	equ	0xFE8
 14284                           postdec1	equ	0xFE5
 14285                           plusw1	equ	0xFE3
 14286                           fsr1h	equ	0xFE2
 14287                           fsr1l	equ	0xFE1
 14288                           indf2	equ	0xFDF
 14289                           postinc2	equ	0xFDE
 14290                           postdec2	equ	0xFDD
 14291                           plusw2	equ	0xFDB
 14292                           fsr2h	equ	0xFDA
 14293                           fsr2l	equ	0xFD9
 14294                           status	equ	0xFD8
 14295                           
 14296 ;; *************** function i2_sprintf *****************
 14297 ;; Defined at:
 14298 ;;		line 13 in file "/opt/microchip/xc8/v1.41/sources/common/sprintf.c"
 14299 ;; Parameters:    Size  Location     Type
 14300 ;;  wh              2   27[COMRAM] PTR unsigned char 
 14301 ;;		 -> displayInterface@tmp(3), reply_message_serial_com@str(248), 
 14302 ;;  f               2   29[COMRAM] PTR const unsigned char 
 14303 ;;		 -> STR_45(3), STR_44(3), STR_43(3), STR_42(3), 
 14304 ;;		 -> STR_38(3), STR_37(4), STR_36(3), STR_35(4), 
 14305 ;;		 -> STR_34(3), STR_33(4), STR_23(3), STR_22(4), 
 14306 ;;		 -> STR_19(3), STR_18(4), STR_15(3), STR_14(4), 
 14307 ;;		 -> STR_12(24), STR_11(69), STR_10(24), STR_9(12), 
 14308 ;;		 -> STR_8(12), STR_7(18), STR_6(12), STR_5(12), 
 14309 ;;		 -> STR_4(18), STR_3(15), STR_2(12), STR_1(18), 
 14310 ;; Auto vars:     Size  Location     Type
 14311 ;;  sprintf         4   79[COMRAM] struct __prbuf
 14312 ;;  sprintf         2   77[COMRAM] PTR void [1]
 14313 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), ?_printf(2), 
 14314 ;; Return value:  Size  Location     Type
 14315 ;;                  2   27[COMRAM] int 
 14316 ;; Registers used:
 14317 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14318 ;; Tracked objects:
 14319 ;;		On entry : 0/0
 14320 ;;		On exit  : 0/0
 14321 ;;		Unchanged: 0/0
 14322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14323 ;;      Params:        50       0       0       0       0       0       0
 14324 ;;      Locals:         6       0       0       0       0       0       0
 14325 ;;      Temps:          0       0       0       0       0       0       0
 14326 ;;      Totals:        56       0       0       0       0       0       0
 14327 ;;Total ram usage:       56 bytes
 14328 ;; Hardware stack levels used:    1
 14329 ;; Hardware stack levels required when called:    2
 14330 ;; This function calls:
 14331 ;;		i2__doprnt
 14332 ;; This function is called by:
 14333 ;;		_reply_message_serial_com
 14334 ;; This function uses a non-reentrant model
 14335 ;;
 14336                           
 14337                           	psect	text67
 14338  003E18                     __ptext67:
 14339                           	opt stack 0
 14340  003E18                     i2_sprintf:
 14341                           	opt stack 19
 14342                           
 14343                           ;incstack = 0
 14344  003E18  C01C  F050         	movff	i2sprintf@wh,i2sprintf@pb
 14345  003E1C  C01D  F051         	movff	i2sprintf@wh+1,i2sprintf@pb+1
 14346  003E20  0E00               	movlw	0
 14347  003E22  6E52               	movwf	i2sprintf@pb+2,c
 14348  003E24  0E00               	movlw	0
 14349  003E26  6E53               	movwf	i2sprintf@pb+3,c
 14350  003E28  0E20               	movlw	low (?i2_sprintf+4)
 14351  003E2A  6E4E               	movwf	i2sprintf@ap,c
 14352  003E2C  0E00               	movlw	high (?i2_sprintf+4)
 14353  003E2E  6E4F               	movwf	i2sprintf@ap+1,c
 14354  003E30  0E50               	movlw	low i2sprintf@pb
 14355  003E32  6E0D               	movwf	i2__doprnt@pb,c
 14356  003E34  0E00               	movlw	high i2sprintf@pb
 14357  003E36  6E0E               	movwf	i2__doprnt@pb+1,c
 14358  003E38  C01E  F00F         	movff	i2sprintf@f,i2__doprnt@f
 14359  003E3C  C01F  F010         	movff	i2sprintf@f+1,i2__doprnt@f+1
 14360  003E40  0E4E               	movlw	low i2sprintf@ap
 14361  003E42  6E11               	movwf	i2__doprnt@ap,c
 14362  003E44  0E00               	movlw	high i2sprintf@ap
 14363  003E46  6E12               	movwf	i2__doprnt@ap+1,c
 14364  003E48  EC83  F010         	call	i2__doprnt	;wreg free
 14365  003E4C  C050  FFD9         	movff	i2sprintf@pb,fsr2l
 14366  003E50  C051  FFDA         	movff	i2sprintf@pb+1,fsr2h
 14367  003E54  0E00               	movlw	0
 14368  003E56  6EDF               	movwf	indf2,c
 14369  003E58  0012               	return	
 14370  003E5A                     __end_ofi2_sprintf:
 14371                           	opt stack 0
 14372                           tosu	equ	0xFFF
 14373                           tosh	equ	0xFFE
 14374                           tosl	equ	0xFFD
 14375                           pclatu	equ	0xFFB
 14376                           pclath	equ	0xFFA
 14377                           tblptru	equ	0xFF8
 14378                           tblptrh	equ	0xFF7
 14379                           tblptrl	equ	0xFF6
 14380                           tablat	equ	0xFF5
 14381                           prodh	equ	0xFF4
 14382                           prodl	equ	0xFF3
 14383                           intcon	equ	0xFF2
 14384                           intcon2	equ	0xFF1
 14385                           indf0	equ	0xFEF
 14386                           postinc0	equ	0xFEE
 14387                           fsr0h	equ	0xFEA
 14388                           fsr0l	equ	0xFE9
 14389                           wreg	equ	0xFE8
 14390                           postdec1	equ	0xFE5
 14391                           plusw1	equ	0xFE3
 14392                           fsr1h	equ	0xFE2
 14393                           fsr1l	equ	0xFE1
 14394                           indf2	equ	0xFDF
 14395                           postinc2	equ	0xFDE
 14396                           postdec2	equ	0xFDD
 14397                           plusw2	equ	0xFDB
 14398                           fsr2h	equ	0xFDA
 14399                           fsr2l	equ	0xFD9
 14400                           status	equ	0xFD8
 14401                           
 14402 ;; *************** function _memset *****************
 14403 ;; Defined at:
 14404 ;;		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/memset.c"
 14405 ;; Parameters:    Size  Location     Type
 14406 ;;  p1              2    0[COMRAM] PTR void 
 14407 ;;		 -> syn_serial_commun_isr@request_message(16), 
 14408 ;;  c               2    2[COMRAM] int 
 14409 ;;  n               2    4[COMRAM] unsigned int 
 14410 ;; Auto vars:     Size  Location     Type
 14411 ;;  p               2    6[COMRAM] PTR unsigned char 
 14412 ;;		 -> syn_serial_commun_isr@request_message(16), 
 14413 ;; Return value:  Size  Location     Type
 14414 ;;                  2    0[COMRAM] PTR void 
 14415 ;; Registers used:
 14416 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14417 ;; Tracked objects:
 14418 ;;		On entry : 0/0
 14419 ;;		On exit  : 0/0
 14420 ;;		Unchanged: 0/0
 14421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14422 ;;      Params:         6       0       0       0       0       0       0
 14423 ;;      Locals:         2       0       0       0       0       0       0
 14424 ;;      Temps:          0       0       0       0       0       0       0
 14425 ;;      Totals:         8       0       0       0       0       0       0
 14426 ;;Total ram usage:        8 bytes
 14427 ;; Hardware stack levels used:    1
 14428 ;; This function calls:
 14429 ;;		Nothing
 14430 ;; This function is called by:
 14431 ;;		_syn_serial_commun_isr
 14432 ;; This function uses a non-reentrant model
 14433 ;;
 14434                           
 14435                           	psect	text68
 14436  0040EC                     __ptext68:
 14437                           	opt stack 0
 14438  0040EC                     _memset:
 14439                           	opt stack 23
 14440                           
 14441                           ;incstack = 0
 14442  0040EC  C001  F007         	movff	memset@p1,memset@p
 14443  0040F0  C002  F008         	movff	memset@p1+1,memset@p+1
 14444  0040F4  D008               	goto	i2l5464
 14445  0040F6                     i2l5460:
 14446  0040F6  C007  FFD9         	movff	memset@p,fsr2l
 14447  0040FA  C008  FFDA         	movff	memset@p+1,fsr2h
 14448  0040FE  C003  FFDF         	movff	memset@c,indf2
 14449  004102  4A07               	infsnz	memset@p,f,c
 14450  004104  2A08               	incf	memset@p+1,f,c
 14451  004106                     i2l5464:
 14452  004106  0605               	decf	memset@n,f,c
 14453  004108  A0D8               	btfss	status,0,c
 14454  00410A  0606               	decf	memset@n+1,f,c
 14455  00410C  2805               	incf	memset@n,w,c
 14456  00410E  E1F3               	bnz	i2l5460
 14457  004110  2806               	incf	memset@n+1,w,c
 14458  004112  B4D8               	btfsc	status,2,c
 14459  004114  0012               	return	
 14460  004116  D7EF               	goto	i2l5460
 14461  004118                     __end_of_memset:
 14462                           	opt stack 0
 14463                           tosu	equ	0xFFF
 14464                           tosh	equ	0xFFE
 14465                           tosl	equ	0xFFD
 14466                           pclatu	equ	0xFFB
 14467                           pclath	equ	0xFFA
 14468                           tblptru	equ	0xFF8
 14469                           tblptrh	equ	0xFF7
 14470                           tblptrl	equ	0xFF6
 14471                           tablat	equ	0xFF5
 14472                           prodh	equ	0xFF4
 14473                           prodl	equ	0xFF3
 14474                           intcon	equ	0xFF2
 14475                           intcon2	equ	0xFF1
 14476                           indf0	equ	0xFEF
 14477                           postinc0	equ	0xFEE
 14478                           fsr0h	equ	0xFEA
 14479                           fsr0l	equ	0xFE9
 14480                           wreg	equ	0xFE8
 14481                           postdec1	equ	0xFE5
 14482                           plusw1	equ	0xFE3
 14483                           fsr1h	equ	0xFE2
 14484                           fsr1l	equ	0xFE1
 14485                           indf2	equ	0xFDF
 14486                           postinc2	equ	0xFDE
 14487                           postdec2	equ	0xFDD
 14488                           plusw2	equ	0xFDB
 14489                           fsr2h	equ	0xFDA
 14490                           fsr2l	equ	0xFD9
 14491                           status	equ	0xFD8
 14492                           
 14493 ;; *************** function _atoi *****************
 14494 ;; Defined at:
 14495 ;;		line 5 in file "/opt/microchip/xc8/v1.41/sources/common/atoi.c"
 14496 ;; Parameters:    Size  Location     Type
 14497 ;;  s               2    6[COMRAM] PTR const unsigned char 
 14498 ;;		 -> syn_serial_commun_isr@request_message(16), 
 14499 ;; Auto vars:     Size  Location     Type
 14500 ;;  a               2   11[COMRAM] int 
 14501 ;;  sign            1   10[COMRAM] unsigned char 
 14502 ;; Return value:  Size  Location     Type
 14503 ;;                  2    6[COMRAM] int 
 14504 ;; Registers used:
 14505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14506 ;; Tracked objects:
 14507 ;;		On entry : 0/0
 14508 ;;		On exit  : 0/0
 14509 ;;		Unchanged: 0/0
 14510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14511 ;;      Params:         2       0       0       0       0       0       0
 14512 ;;      Locals:         3       0       0       0       0       0       0
 14513 ;;      Temps:          2       0       0       0       0       0       0
 14514 ;;      Totals:         7       0       0       0       0       0       0
 14515 ;;Total ram usage:        7 bytes
 14516 ;; Hardware stack levels used:    1
 14517 ;; Hardware stack levels required when called:    1
 14518 ;; This function calls:
 14519 ;;		_isdigit
 14520 ;;		i2___wmul
 14521 ;; This function is called by:
 14522 ;;		_syn_serial_commun_isr
 14523 ;; This function uses a non-reentrant model
 14524 ;;
 14525                           
 14526                           	psect	text69
 14527  003226                     __ptext69:
 14528                           	opt stack 0
 14529  003226                     _atoi:
 14530                           	opt stack 22
 14531                           
 14532                           ;incstack = 0
 14533  003226  D002               	goto	i2l5470
 14534  003228                     i2l5468:
 14535  003228  4A07               	infsnz	atoi@s,f,c
 14536  00322A  2A08               	incf	atoi@s+1,f,c
 14537  00322C                     i2l5470:
 14538  00322C  C007  FFD9         	movff	atoi@s,fsr2l
 14539  003230  C008  FFDA         	movff	atoi@s+1,fsr2h
 14540  003234  0E20               	movlw	32
 14541  003236  18DE               	xorwf	postinc2,w,c
 14542  003238  B4D8               	btfsc	status,2,c
 14543  00323A  D7F6               	goto	i2l5468
 14544  00323C  C007  FFD9         	movff	atoi@s,fsr2l
 14545  003240  C008  FFDA         	movff	atoi@s+1,fsr2h
 14546  003244  0E09               	movlw	9
 14547  003246  18DE               	xorwf	postinc2,w,c
 14548  003248  B4D8               	btfsc	status,2,c
 14549  00324A  D7EE               	goto	i2l5468
 14550  00324C  0E00               	movlw	0
 14551  00324E  6E0D               	movwf	atoi@a+1,c
 14552  003250  0E00               	movlw	0
 14553  003252  6E0C               	movwf	atoi@a,c
 14554  003254  0E00               	movlw	0
 14555  003256  6E0B               	movwf	atoi@sign,c
 14556  003258  C007  FFD9         	movff	atoi@s,fsr2l
 14557  00325C  C008  FFDA         	movff	atoi@s+1,fsr2h
 14558  003260  0E2D               	movlw	45
 14559  003262  18DE               	xorwf	postinc2,w,c
 14560  003264  A4D8               	btfss	status,2,c
 14561  003266  D002               	goto	i2l5480
 14562  003268  2A0B               	incf	atoi@sign,f,c
 14563  00326A  D024               	goto	i2l5486
 14564  00326C                     i2l5480:
 14565  00326C  C007  FFD9         	movff	atoi@s,fsr2l
 14566  003270  C008  FFDA         	movff	atoi@s+1,fsr2h
 14567  003274  0E2B               	movlw	43
 14568  003276  18DE               	xorwf	postinc2,w,c
 14569  003278  A4D8               	btfss	status,2,c
 14570  00327A  D01E               	goto	i2l5488
 14571  00327C  D01B               	goto	i2l5486
 14572  00327E                     i2l5484:
 14573  00327E  C00C  F001         	movff	atoi@a,i2___wmul@multiplier
 14574  003282  C00D  F002         	movff	atoi@a+1,i2___wmul@multiplier+1
 14575  003286  0E00               	movlw	0
 14576  003288  6E04               	movwf	i2___wmul@multiplicand+1,c
 14577  00328A  0E0A               	movlw	10
 14578  00328C  6E03               	movwf	i2___wmul@multiplicand,c
 14579  00328E  ECB4  F020         	call	i2___wmul	;wreg free
 14580  003292  C007  FFD9         	movff	atoi@s,fsr2l
 14581  003296  C008  FFDA         	movff	atoi@s+1,fsr2h
 14582  00329A  50DF               	movf	indf2,w,c
 14583  00329C  6E09               	movwf	??_atoi& (0+255),c
 14584  00329E  6A0A               	clrf	(??_atoi+1)& (0+255),c
 14585  0032A0  5001               	movf	?i2___wmul,w,c
 14586  0032A2  2609               	addwf	??_atoi,f,c
 14587  0032A4  5002               	movf	?i2___wmul+1,w,c
 14588  0032A6  220A               	addwfc	??_atoi+1,f,c
 14589  0032A8  0ED0               	movlw	208
 14590  0032AA  2409               	addwf	??_atoi,w,c
 14591  0032AC  6E0C               	movwf	atoi@a,c
 14592  0032AE  0EFF               	movlw	255
 14593  0032B0  200A               	addwfc	??_atoi+1,w,c
 14594  0032B2  6E0D               	movwf	atoi@a+1,c
 14595  0032B4                     i2l5486:
 14596  0032B4  4A07               	infsnz	atoi@s,f,c
 14597  0032B6  2A08               	incf	atoi@s+1,f,c
 14598  0032B8                     i2l5488:
 14599  0032B8  C007  FFD9         	movff	atoi@s,fsr2l
 14600  0032BC  C008  FFDA         	movff	atoi@s+1,fsr2h
 14601  0032C0  50DF               	movf	indf2,w,c
 14602  0032C2  ECEA  F020         	call	_isdigit
 14603  0032C6  B0D8               	btfsc	status,0,c
 14604  0032C8  D7DA               	goto	i2l5484
 14605  0032CA  500B               	movf	atoi@sign,w,c
 14606  0032CC  B4D8               	btfsc	status,2,c
 14607  0032CE  D00D               	goto	i2l1267
 14608  0032D0  C00C  F009         	movff	atoi@a,??_atoi
 14609  0032D4  C00D  F00A         	movff	atoi@a+1,??_atoi+1
 14610  0032D8  1E09               	comf	??_atoi,f,c
 14611  0032DA  1E0A               	comf	??_atoi+1,f,c
 14612  0032DC  4A09               	infsnz	??_atoi,f,c
 14613  0032DE  2A0A               	incf	??_atoi+1,f,c
 14614  0032E0  C009  F007         	movff	??_atoi,?_atoi
 14615  0032E4  C00A  F008         	movff	??_atoi+1,?_atoi+1
 14616  0032E8  0012               	return	
 14617  0032EA                     i2l1267:
 14618  0032EA  C00C  F007         	movff	atoi@a,?_atoi
 14619  0032EE  C00D  F008         	movff	atoi@a+1,?_atoi+1
 14620  0032F2  0012               	return		;funcret
 14621  0032F4                     __end_of_atoi:
 14622                           	opt stack 0
 14623                           tosu	equ	0xFFF
 14624                           tosh	equ	0xFFE
 14625                           tosl	equ	0xFFD
 14626                           pclatu	equ	0xFFB
 14627                           pclath	equ	0xFFA
 14628                           tblptru	equ	0xFF8
 14629                           tblptrh	equ	0xFF7
 14630                           tblptrl	equ	0xFF6
 14631                           tablat	equ	0xFF5
 14632                           prodh	equ	0xFF4
 14633                           prodl	equ	0xFF3
 14634                           intcon	equ	0xFF2
 14635                           intcon2	equ	0xFF1
 14636                           indf0	equ	0xFEF
 14637                           postinc0	equ	0xFEE
 14638                           fsr0h	equ	0xFEA
 14639                           fsr0l	equ	0xFE9
 14640                           wreg	equ	0xFE8
 14641                           postdec1	equ	0xFE5
 14642                           plusw1	equ	0xFE3
 14643                           fsr1h	equ	0xFE2
 14644                           fsr1l	equ	0xFE1
 14645                           indf2	equ	0xFDF
 14646                           postinc2	equ	0xFDE
 14647                           postdec2	equ	0xFDD
 14648                           plusw2	equ	0xFDB
 14649                           fsr2h	equ	0xFDA
 14650                           fsr2l	equ	0xFD9
 14651                           status	equ	0xFD8
 14652                           
 14653 ;; *************** function i2___wmul *****************
 14654 ;; Defined at:
 14655 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
 14656 ;; Parameters:    Size  Location     Type
 14657 ;;  multiplier      2    0[COMRAM] unsigned int 
 14658 ;;  multiplicand    2    2[COMRAM] unsigned int 
 14659 ;; Auto vars:     Size  Location     Type
 14660 ;;  __wmul          2    4[COMRAM] unsigned int 
 14661 ;; Return value:  Size  Location     Type
 14662 ;;                  2    0[COMRAM] unsigned int 
 14663 ;; Registers used:
 14664 ;;		wreg, status,2, status,0, prodl, prodh
 14665 ;; Tracked objects:
 14666 ;;		On entry : 0/0
 14667 ;;		On exit  : 0/0
 14668 ;;		Unchanged: 0/0
 14669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14670 ;;      Params:         4       0       0       0       0       0       0
 14671 ;;      Locals:         2       0       0       0       0       0       0
 14672 ;;      Temps:          0       0       0       0       0       0       0
 14673 ;;      Totals:         6       0       0       0       0       0       0
 14674 ;;Total ram usage:        6 bytes
 14675 ;; Hardware stack levels used:    1
 14676 ;; This function calls:
 14677 ;;		Nothing
 14678 ;; This function is called by:
 14679 ;;		_timer1_isr
 14680 ;;		_syn_serial_commun_isr
 14681 ;;		_atoi
 14682 ;; This function uses a non-reentrant model
 14683 ;;
 14684                           
 14685                           	psect	text70
 14686  004168                     __ptext70:
 14687                           	opt stack 0
 14688  004168                     i2___wmul:
 14689                           	opt stack 23
 14690                           
 14691                           ;incstack = 0
 14692  004168  5001               	movf	i2___wmul@multiplier,w,c
 14693  00416A  0203               	mulwf	i2___wmul@multiplicand,c
 14694  00416C  CFF3 F005          	movff	prodl,i2___wmul@product
 14695  004170  CFF4 F006          	movff	prodh,i2___wmul@product+1
 14696  004174  5001               	movf	i2___wmul@multiplier,w,c
 14697  004176  0204               	mulwf	i2___wmul@multiplicand+1,c
 14698  004178  50F3               	movf	prodl,w,c
 14699  00417A  2606               	addwf	i2___wmul@product+1,f,c
 14700  00417C  5002               	movf	i2___wmul@multiplier+1,w,c
 14701  00417E  0203               	mulwf	i2___wmul@multiplicand,c
 14702  004180  50F3               	movf	prodl,w,c
 14703  004182  2606               	addwf	i2___wmul@product+1,f,c
 14704  004184  C005  F001         	movff	i2___wmul@product,?i2___wmul
 14705  004188  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 14706  00418C  0012               	return	
 14707  00418E                     __end_ofi2___wmul:
 14708                           	opt stack 0
 14709                           tosu	equ	0xFFF
 14710                           tosh	equ	0xFFE
 14711                           tosl	equ	0xFFD
 14712                           pclatu	equ	0xFFB
 14713                           pclath	equ	0xFFA
 14714                           tblptru	equ	0xFF8
 14715                           tblptrh	equ	0xFF7
 14716                           tblptrl	equ	0xFF6
 14717                           tablat	equ	0xFF5
 14718                           prodh	equ	0xFF4
 14719                           prodl	equ	0xFF3
 14720                           intcon	equ	0xFF2
 14721                           intcon2	equ	0xFF1
 14722                           indf0	equ	0xFEF
 14723                           postinc0	equ	0xFEE
 14724                           fsr0h	equ	0xFEA
 14725                           fsr0l	equ	0xFE9
 14726                           wreg	equ	0xFE8
 14727                           postdec1	equ	0xFE5
 14728                           plusw1	equ	0xFE3
 14729                           fsr1h	equ	0xFE2
 14730                           fsr1l	equ	0xFE1
 14731                           indf2	equ	0xFDF
 14732                           postinc2	equ	0xFDE
 14733                           postdec2	equ	0xFDD
 14734                           plusw2	equ	0xFDB
 14735                           fsr2h	equ	0xFDA
 14736                           fsr2l	equ	0xFD9
 14737                           status	equ	0xFD8
 14738                           
 14739 ;; *************** function _isdigit *****************
 14740 ;; Defined at:
 14741 ;;		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/isdigit.c"
 14742 ;; Parameters:    Size  Location     Type
 14743 ;;  c               1    wreg     unsigned char 
 14744 ;; Auto vars:     Size  Location     Type
 14745 ;;  c               1    2[COMRAM] unsigned char 
 14746 ;; Return value:  Size  Location     Type
 14747 ;;		None               void
 14748 ;; Registers used:
 14749 ;;		wreg, status,2, status,0
 14750 ;; Tracked objects:
 14751 ;;		On entry : 0/0
 14752 ;;		On exit  : 0/0
 14753 ;;		Unchanged: 0/0
 14754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14755 ;;      Params:         0       0       0       0       0       0       0
 14756 ;;      Locals:         2       0       0       0       0       0       0
 14757 ;;      Temps:          1       0       0       0       0       0       0
 14758 ;;      Totals:         3       0       0       0       0       0       0
 14759 ;;Total ram usage:        3 bytes
 14760 ;; Hardware stack levels used:    1
 14761 ;; This function calls:
 14762 ;;		Nothing
 14763 ;; This function is called by:
 14764 ;;		_atoi
 14765 ;; This function uses a non-reentrant model
 14766 ;;
 14767                           
 14768                           	psect	text71
 14769  0041D4                     __ptext71:
 14770                           	opt stack 0
 14771  0041D4                     _isdigit:
 14772                           	opt stack 22
 14773                           
 14774                           ;incstack = 0
 14775                           ;isdigit@c stored from wreg
 14776  0041D4  6E03               	movwf	isdigit@c,c
 14777  0041D6  0E00               	movlw	0
 14778  0041D8  6E02               	movwf	_isdigit$2308,c
 14779  0041DA  0E3A               	movlw	58
 14780  0041DC  6003               	cpfslt	isdigit@c,c
 14781  0041DE  D005               	goto	i2l5010
 14782  0041E0  0E2F               	movlw	47
 14783  0041E2  6403               	cpfsgt	isdigit@c,c
 14784  0041E4  D002               	goto	i2l5010
 14785  0041E6  0E01               	movlw	1
 14786  0041E8  6E02               	movwf	_isdigit$2308,c
 14787  0041EA                     i2l5010:
 14788  0041EA  C002  F001         	movff	_isdigit$2308,??_isdigit
 14789  0041EE  3001               	rrcf	??_isdigit,w,c
 14790  0041F0  0012               	return	
 14791  0041F2                     __end_of_isdigit:
 14792                           	opt stack 0
 14793                           tosu	equ	0xFFF
 14794                           tosh	equ	0xFFE
 14795                           tosl	equ	0xFFD
 14796                           pclatu	equ	0xFFB
 14797                           pclath	equ	0xFFA
 14798                           tblptru	equ	0xFF8
 14799                           tblptrh	equ	0xFF7
 14800                           tblptrl	equ	0xFF6
 14801                           tablat	equ	0xFF5
 14802                           prodh	equ	0xFF4
 14803                           prodl	equ	0xFF3
 14804                           intcon	equ	0xFF2
 14805                           intcon2	equ	0xFF1
 14806                           indf0	equ	0xFEF
 14807                           postinc0	equ	0xFEE
 14808                           fsr0h	equ	0xFEA
 14809                           fsr0l	equ	0xFE9
 14810                           wreg	equ	0xFE8
 14811                           postdec1	equ	0xFE5
 14812                           plusw1	equ	0xFE3
 14813                           fsr1h	equ	0xFE2
 14814                           fsr1l	equ	0xFE1
 14815                           indf2	equ	0xFDF
 14816                           postinc2	equ	0xFDE
 14817                           postdec2	equ	0xFDD
 14818                           plusw2	equ	0xFDB
 14819                           fsr2h	equ	0xFDA
 14820                           fsr2l	equ	0xFD9
 14821                           status	equ	0xFD8
 14822                           
 14823 ;; *************** function __fassert *****************
 14824 ;; Defined at:
 14825 ;;		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/assert.c"
 14826 ;; Parameters:    Size  Location     Type
 14827 ;;  line            2   41[COMRAM] int 
 14828 ;;  file            2   43[COMRAM] PTR const unsigned char 
 14829 ;;		 -> STR_54(7), STR_52(7), STR_50(7), STR_48(7), 
 14830 ;;		 -> STR_46(7), 
 14831 ;;  exp             2   45[COMRAM] PTR const unsigned char 
 14832 ;;		 -> STR_55(5), STR_53(11), STR_51(5), STR_49(11), 
 14833 ;;		 -> STR_47(11), 
 14834 ;; Auto vars:     Size  Location     Type
 14835 ;;		None
 14836 ;; Return value:  Size  Location     Type
 14837 ;;                  1    wreg      void 
 14838 ;; Registers used:
 14839 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14840 ;; Tracked objects:
 14841 ;;		On entry : 0/0
 14842 ;;		On exit  : 0/0
 14843 ;;		Unchanged: 0/0
 14844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14845 ;;      Params:         6       0       0       0       0       0       0
 14846 ;;      Locals:         0       0       0       0       0       0       0
 14847 ;;      Temps:          0       0       0       0       0       0       0
 14848 ;;      Totals:         6       0       0       0       0       0       0
 14849 ;;Total ram usage:        6 bytes
 14850 ;; Hardware stack levels used:    1
 14851 ;; Hardware stack levels required when called:    3
 14852 ;; This function calls:
 14853 ;;		_printf
 14854 ;; This function is called by:
 14855 ;;		_syn_serial_commun_isr
 14856 ;; This function uses a non-reentrant model
 14857 ;;
 14858                           
 14859                           	psect	text72
 14860  004140                     __ptext72:
 14861                           	opt stack 0
 14862  004140                     __fassert:
 14863                           	opt stack 20
 14864                           
 14865                           ;incstack = 0
 14866  004140  0E50               	movlw	low STR_57
 14867  004142  6E1C               	movwf	printf@f,c
 14868  004144  0E06               	movlw	high STR_57
 14869  004146  6E1D               	movwf	printf@f+1,c
 14870  004148  C02C  F01E         	movff	__fassert@file,?_printf+2
 14871  00414C  C02D  F01F         	movff	__fassert@file+1,?_printf+3
 14872  004150  C02A  F020         	movff	__fassert@line,?_printf+4
 14873  004154  C02B  F021         	movff	__fassert@line+1,?_printf+5
 14874  004158  C02E  F022         	movff	__fassert@exp,?_printf+6
 14875  00415C  C02F  F023         	movff	__fassert@exp+1,?_printf+7
 14876  004160  EC16  F020         	call	_printf	;wreg free
 14877  004164  00FF               	reset		;# 
 14878  004166  0012               	return	
 14879  004168                     __end_of__fassert:
 14880                           	opt stack 0
 14881                           tosu	equ	0xFFF
 14882                           tosh	equ	0xFFE
 14883                           tosl	equ	0xFFD
 14884                           pclatu	equ	0xFFB
 14885                           pclath	equ	0xFFA
 14886                           tblptru	equ	0xFF8
 14887                           tblptrh	equ	0xFF7
 14888                           tblptrl	equ	0xFF6
 14889                           tablat	equ	0xFF5
 14890                           prodh	equ	0xFF4
 14891                           prodl	equ	0xFF3
 14892                           intcon	equ	0xFF2
 14893                           intcon2	equ	0xFF1
 14894                           indf0	equ	0xFEF
 14895                           postinc0	equ	0xFEE
 14896                           fsr0h	equ	0xFEA
 14897                           fsr0l	equ	0xFE9
 14898                           wreg	equ	0xFE8
 14899                           postdec1	equ	0xFE5
 14900                           plusw1	equ	0xFE3
 14901                           fsr1h	equ	0xFE2
 14902                           fsr1l	equ	0xFE1
 14903                           indf2	equ	0xFDF
 14904                           postinc2	equ	0xFDE
 14905                           postdec2	equ	0xFDD
 14906                           plusw2	equ	0xFDB
 14907                           fsr2h	equ	0xFDA
 14908                           fsr2l	equ	0xFD9
 14909                           status	equ	0xFD8
 14910                           
 14911 ;; *************** function _printf *****************
 14912 ;; Defined at:
 14913 ;;		line 13 in file "/opt/microchip/xc8/v1.41/sources/common/printf.c"
 14914 ;; Parameters:    Size  Location     Type
 14915 ;;  f               2   27[COMRAM] PTR const unsigned char 
 14916 ;;		 -> STR_57(36), 
 14917 ;; Auto vars:     Size  Location     Type
 14918 ;;  pb              4   37[COMRAM] struct __prbuf
 14919 ;;  ap              2   35[COMRAM] PTR void [1]
 14920 ;;		 -> ?_sprintf(2), ?_printf(2), 
 14921 ;; Return value:  Size  Location     Type
 14922 ;;                  2   27[COMRAM] int 
 14923 ;; Registers used:
 14924 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14925 ;; Tracked objects:
 14926 ;;		On entry : 0/0
 14927 ;;		On exit  : 0/0
 14928 ;;		Unchanged: 0/0
 14929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14930 ;;      Params:         8       0       0       0       0       0       0
 14931 ;;      Locals:         6       0       0       0       0       0       0
 14932 ;;      Temps:          0       0       0       0       0       0       0
 14933 ;;      Totals:        14       0       0       0       0       0       0
 14934 ;;Total ram usage:       14 bytes
 14935 ;; Hardware stack levels used:    1
 14936 ;; Hardware stack levels required when called:    2
 14937 ;; This function calls:
 14938 ;;		i2__doprnt
 14939 ;; This function is called by:
 14940 ;;		__fassert
 14941 ;; This function uses a non-reentrant model
 14942 ;;
 14943                           
 14944                           	psect	text73
 14945  00402C                     __ptext73:
 14946                           	opt stack 0
 14947  00402C                     _printf:
 14948                           	opt stack 20
 14949                           
 14950                           ;incstack = 0
 14951  00402C  0E00               	movlw	0
 14952  00402E  6E26               	movwf	printf@pb,c
 14953  004030  0E00               	movlw	0
 14954  004032  6E27               	movwf	printf@pb+1,c
 14955  004034  0E8A               	movlw	low i2_putch
 14956  004036  6E28               	movwf	printf@pb+2,c
 14957  004038  0E43               	movlw	high i2_putch
 14958  00403A  6E29               	movwf	printf@pb+3,c
 14959  00403C  0E1E               	movlw	low (?_printf+2)
 14960  00403E  6E24               	movwf	printf@ap,c
 14961  004040  0E00               	movlw	high (?_printf+2)
 14962  004042  6E25               	movwf	printf@ap+1,c
 14963                           
 14964                           ;	Return value of _printf is never used
 14965  004044  0E26               	movlw	low printf@pb
 14966  004046  6E0D               	movwf	i2__doprnt@pb,c
 14967  004048  0E00               	movlw	high printf@pb
 14968  00404A  6E0E               	movwf	i2__doprnt@pb+1,c
 14969  00404C  C01C  F00F         	movff	printf@f,i2__doprnt@f
 14970  004050  C01D  F010         	movff	printf@f+1,i2__doprnt@f+1
 14971  004054  0E24               	movlw	low printf@ap
 14972  004056  6E11               	movwf	i2__doprnt@ap,c
 14973  004058  0E00               	movlw	high printf@ap
 14974  00405A  6E12               	movwf	i2__doprnt@ap+1,c
 14975  00405C  EC83  F010         	call	i2__doprnt	;wreg free
 14976  004060  0012               	return	
 14977  004062                     __end_of_printf:
 14978                           	opt stack 0
 14979                           tosu	equ	0xFFF
 14980                           tosh	equ	0xFFE
 14981                           tosl	equ	0xFFD
 14982                           pclatu	equ	0xFFB
 14983                           pclath	equ	0xFFA
 14984                           tblptru	equ	0xFF8
 14985                           tblptrh	equ	0xFF7
 14986                           tblptrl	equ	0xFF6
 14987                           tablat	equ	0xFF5
 14988                           prodh	equ	0xFF4
 14989                           prodl	equ	0xFF3
 14990                           intcon	equ	0xFF2
 14991                           intcon2	equ	0xFF1
 14992                           indf0	equ	0xFEF
 14993                           postinc0	equ	0xFEE
 14994                           fsr0h	equ	0xFEA
 14995                           fsr0l	equ	0xFE9
 14996                           wreg	equ	0xFE8
 14997                           postdec1	equ	0xFE5
 14998                           plusw1	equ	0xFE3
 14999                           fsr1h	equ	0xFE2
 15000                           fsr1l	equ	0xFE1
 15001                           indf2	equ	0xFDF
 15002                           postinc2	equ	0xFDE
 15003                           postdec2	equ	0xFDD
 15004                           plusw2	equ	0xFDB
 15005                           fsr2h	equ	0xFDA
 15006                           fsr2l	equ	0xFD9
 15007                           status	equ	0xFD8
 15008                           
 15009 ;; *************** function i2__doprnt *****************
 15010 ;; Defined at:
 15011 ;;		line 458 in file "/opt/microchip/xc8/v1.41/sources/common/doprnt.c"
 15012 ;; Parameters:    Size  Location     Type
 15013 ;;  pb              2   12[COMRAM] PTR struct __prbuf
 15014 ;;		 -> sprintf@pb(4), printf@pb(4), 
 15015 ;;  f               2   14[COMRAM] PTR const unsigned char 
 15016 ;;		 -> STR_57(36), STR_45(3), STR_44(3), STR_43(3), 
 15017 ;;		 -> STR_42(3), STR_38(3), STR_37(4), STR_36(3), 
 15018 ;;		 -> STR_35(4), STR_34(3), STR_33(4), STR_23(3), 
 15019 ;;		 -> STR_22(4), STR_19(3), STR_18(4), STR_15(3), 
 15020 ;;		 -> STR_14(4), STR_12(24), STR_11(69), STR_10(24), 
 15021 ;;		 -> STR_9(12), STR_8(12), STR_7(18), STR_6(12), 
 15022 ;;		 -> STR_5(12), STR_4(18), STR_3(15), STR_2(12), 
 15023 ;;		 -> STR_1(18), 
 15024 ;;  ap              2   16[COMRAM] PTR PTR void 
 15025 ;;		 -> sprintf@ap(2), printf@ap(2), 
 15026 ;; Auto vars:     Size  Location     Type
 15027 ;;  _doprnt         4    0        struct .
 15028 ;;  _doprnt         2   24[COMRAM] PTR const unsigned char 
 15029 ;;		 -> ?_sprintf(2), ?_printf(2), NULL(0), STR_56(7), 
 15030 ;;		 -> STR_55(5), STR_54(7), STR_53(11), STR_52(7), 
 15031 ;;		 -> STR_51(5), STR_50(7), STR_49(11), STR_48(7), 
 15032 ;;		 -> STR_47(11), STR_46(7), displayInterface@tmp(3), reply_message_serial_com@str(248), 
 15033 ;;  _doprnt         2   22[COMRAM] unsigned int 
 15034 ;;  _doprnt         2    0        unsigned int 
 15035 ;;  _doprnt         1   26[COMRAM] char 
 15036 ;;  _doprnt         1   21[COMRAM] char 
 15037 ;;  _doprnt         1   20[COMRAM] unsigned char 
 15038 ;; Return value:  Size  Location     Type
 15039 ;;                  2   12[COMRAM] int 
 15040 ;; Registers used:
 15041 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15042 ;; Tracked objects:
 15043 ;;		On entry : 0/0
 15044 ;;		On exit  : 0/0
 15045 ;;		Unchanged: 0/0
 15046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15047 ;;      Params:         6       0       0       0       0       0       0
 15048 ;;      Locals:         7       0       0       0       0       0       0
 15049 ;;      Temps:          2       0       0       0       0       0       0
 15050 ;;      Totals:        15       0       0       0       0       0       0
 15051 ;;Total ram usage:       15 bytes
 15052 ;; Hardware stack levels used:    1
 15053 ;; Hardware stack levels required when called:    1
 15054 ;; This function calls:
 15055 ;;		Absolute function
 15056 ;;		i2___lwdiv
 15057 ;;		i2___lwmod
 15058 ;;		i2_putch
 15059 ;; This function is called by:
 15060 ;;		_printf
 15061 ;;		i2_sprintf
 15062 ;; This function uses a non-reentrant model
 15063 ;;
 15064                           
 15065                           	psect	text74
 15066  002106                     __ptext74:
 15067                           	opt stack 0
 15068  002106                     i2__doprnt:
 15069                           	opt stack 19
 15070                           
 15071                           ;doprnt.c: 499: signed char c;
 15072                           ;doprnt.c: 506: signed char prec;
 15073                           ;doprnt.c: 508: unsigned char flag;
 15074                           ;doprnt.c: 523: union {
 15075                           ;doprnt.c: 524: unsigned long vd;
 15076                           ;doprnt.c: 525: double integ;
 15077                           ;doprnt.c: 526: } tmpval;
 15078                           ;doprnt.c: 528: unsigned int val;
 15079                           ;doprnt.c: 529: unsigned len;
 15080                           ;doprnt.c: 530: const char * cp;
 15081                           ;doprnt.c: 536: while(c = *f++) {
 15082                           
 15083                           ;incstack = 0
 15084  002106  D19D               	goto	i2l9962
 15085  002108                     i2l9880:
 15086                           
 15087                           ;doprnt.c: 538: if(c != '%')
 15088  002108  0E25               	movlw	37
 15089  00210A  181B               	xorwf	i2__doprnt@c,w,c
 15090  00210C  B4D8               	btfsc	status,2,c
 15091  00210E  D033               	goto	i2l9890
 15092                           
 15093                           ;doprnt.c: 540: {
 15094                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 15095  002110  EE20 F002          	lfsr	2,2
 15096  002114  500D               	movf	i2__doprnt@pb,w,c
 15097  002116  26D9               	addwf	fsr2l,f,c
 15098  002118  500E               	movf	i2__doprnt@pb+1,w,c
 15099  00211A  22DA               	addwfc	fsr2h,f,c
 15100  00211C  50DE               	movf	postinc2,w,c
 15101  00211E  10DE               	iorwf	postinc2,w,c
 15102  002120  B4D8               	btfsc	status,2,c
 15103  002122  D013               	goto	i2l9886
 15104  002124  EE20 F002          	lfsr	2,2
 15105  002128  500D               	movf	i2__doprnt@pb,w,c
 15106  00212A  26D9               	addwf	fsr2l,f,c
 15107  00212C  500E               	movf	i2__doprnt@pb+1,w,c
 15108  00212E  22DA               	addwfc	fsr2h,f,c
 15109  002130  D801               	call	i2u1266_48
 15110  002132  D187               	goto	i2l9962
 15111  002134                     i2u1266_48:
 15112  002134  0005               	push	
 15113  002136  6EFA               	movwf	pclath,c
 15114  002138  50DE               	movf	postinc2,w,c
 15115  00213A  6EFD               	movwf	tosl,c
 15116  00213C  50DE               	movf	postinc2,w,c
 15117  00213E  6EFE               	movwf	tosh,c
 15118  002140  50F8               	movf	tblptru,w,c
 15119  002142  6EFF               	movwf	tosu,c
 15120  002144  50FA               	movf	pclath,w,c
 15121  002146  501B               	movf	i2__doprnt@c,w,c
 15122  002148  0012               	return		;indir
 15123  00214A                     i2l9886:
 15124  00214A  C00D  FFD9         	movff	i2__doprnt@pb,fsr2l
 15125  00214E  C00E  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 15126  002152  CFDE F013          	movff	postinc2,??i2__doprnt
 15127  002156  CFDD F014          	movff	postdec2,??i2__doprnt+1
 15128  00215A  C013  FFD9         	movff	??i2__doprnt,fsr2l
 15129  00215E  C014  FFDA         	movff	??i2__doprnt+1,fsr2h
 15130  002162  C01B  FFDF         	movff	i2__doprnt@c,indf2
 15131  002166  C00D  FFD9         	movff	i2__doprnt@pb,fsr2l
 15132  00216A  C00E  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 15133  00216E  2ADE               	incf	postinc2,f,c
 15134  002170  0E00               	movlw	0
 15135  002172  22DD               	addwfc	postdec2,f,c
 15136                           
 15137                           ;doprnt.c: 542: continue;
 15138  002174  D166               	goto	i2l9962
 15139  002176                     i2l9890:
 15140                           
 15141                           ;doprnt.c: 543: }
 15142                           ;doprnt.c: 548: flag = 0;
 15143  002176  0E00               	movlw	0
 15144  002178  6E15               	movwf	i2__doprnt@flag,c
 15145                           
 15146                           ;doprnt.c: 635: switch(c = *f++) {
 15147  00217A  D086               	goto	i2l9914
 15148  00217C                     i2l9892:
 15149                           
 15150                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 15151  00217C  C011  FFD9         	movff	i2__doprnt@ap,fsr2l
 15152  002180  C012  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 15153  002184  CFDF F013          	movff	indf2,??i2__doprnt
 15154  002188  0E02               	movlw	2
 15155  00218A  26DE               	addwf	postinc2,f,c
 15156  00218C  CFDF F014          	movff	indf2,??i2__doprnt+1
 15157  002190  0E00               	movlw	0
 15158  002192  22DD               	addwfc	postdec2,f,c
 15159  002194  C013  FFD9         	movff	??i2__doprnt,fsr2l
 15160  002198  C014  FFDA         	movff	??i2__doprnt+1,fsr2h
 15161  00219C  CFDE F019          	movff	postinc2,i2__doprnt@cp
 15162  0021A0  CFDD F01A          	movff	postdec2,i2__doprnt@cp+1
 15163                           
 15164                           ;doprnt.c: 740: if(!cp)
 15165  0021A4  5019               	movf	i2__doprnt@cp,w,c
 15166  0021A6  101A               	iorwf	i2__doprnt@cp+1,w,c
 15167  0021A8  A4D8               	btfss	status,2,c
 15168  0021AA  D05A               	goto	i2l9910
 15169                           
 15170                           ;doprnt.c: 741: cp = "(null)";
 15171  0021AC  0E95               	movlw	low STR_56
 15172  0021AE  6E19               	movwf	i2__doprnt@cp,c
 15173  0021B0  0E06               	movlw	high STR_56
 15174  0021B2  6E1A               	movwf	i2__doprnt@cp+1,c
 15175                           
 15176                           ;doprnt.c: 777: while(*cp)
 15177  0021B4  D055               	goto	i2l9910
 15178  0021B6                     i2l9898:
 15179                           
 15180                           ;doprnt.c: 778: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
 15181  0021B6  EE20 F002          	lfsr	2,2
 15182  0021BA  500D               	movf	i2__doprnt@pb,w,c
 15183  0021BC  26D9               	addwf	fsr2l,f,c
 15184  0021BE  500E               	movf	i2__doprnt@pb+1,w,c
 15185  0021C0  22DA               	addwfc	fsr2h,f,c
 15186  0021C2  50DE               	movf	postinc2,w,c
 15187  0021C4  10DE               	iorwf	postinc2,w,c
 15188  0021C6  B4D8               	btfsc	status,2,c
 15189  0021C8  D025               	goto	i2l9904
 15190  0021CA  EE20 F002          	lfsr	2,2
 15191  0021CE  500D               	movf	i2__doprnt@pb,w,c
 15192  0021D0  26D9               	addwf	fsr2l,f,c
 15193  0021D2  500E               	movf	i2__doprnt@pb+1,w,c
 15194  0021D4  22DA               	addwfc	fsr2h,f,c
 15195  0021D6  D801               	call	i2u1269_48
 15196  0021D8  D01A               	goto	i2l9902
 15197  0021DA                     i2u1269_48:
 15198  0021DA  0005               	push	
 15199  0021DC  6EFA               	movwf	pclath,c
 15200  0021DE  50DE               	movf	postinc2,w,c
 15201  0021E0  6EFD               	movwf	tosl,c
 15202  0021E2  50DE               	movf	postinc2,w,c
 15203  0021E4  6EFE               	movwf	tosh,c
 15204  0021E6  50F8               	movf	tblptru,w,c
 15205  0021E8  6EFF               	movwf	tosu,c
 15206  0021EA  50FA               	movf	pclath,w,c
 15207  0021EC  C019  FFF6         	movff	i2__doprnt@cp,tblptrl
 15208  0021F0  C01A  FFF7         	movff	i2__doprnt@cp+1,tblptrh
 15209  0021F4  6AF8               	clrf	tblptru,c
 15210  0021F6  0E05               	movlw	(high __ramtop+-1)
 15211  0021F8  64F7               	cpfsgt	tblptrh,c
 15212  0021FA  D003               	bra	i2u1270_47
 15213  0021FC  0008               	tblrd		*
 15214  0021FE  50F5               	movf	tablat,w,c
 15215  002200  D005               	bra	i2u1270_40
 15216  002202                     i2u1270_47:
 15217  002202  CFF6 FFE9          	movff	tblptrl,fsr0l
 15218  002206  CFF7 FFEA          	movff	tblptrh,fsr0h
 15219  00220A  50EF               	movf	indf0,w,c
 15220  00220C                     i2u1270_40:
 15221  00220C  0012               	return		;indir
 15222  00220E                     i2l9902:
 15223  00220E  4A19               	infsnz	i2__doprnt@cp,f,c
 15224  002210  2A1A               	incf	i2__doprnt@cp+1,f,c
 15225  002212  D026               	goto	i2l9910
 15226  002214                     i2l9904:
 15227  002214  C019  FFF6         	movff	i2__doprnt@cp,tblptrl
 15228  002218  C01A  FFF7         	movff	i2__doprnt@cp+1,tblptrh
 15229  00221C  6AF8               	clrf	tblptru,c
 15230  00221E  C00D  FFD9         	movff	i2__doprnt@pb,fsr2l
 15231  002222  C00E  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 15232  002226  CFDE F013          	movff	postinc2,??i2__doprnt
 15233  00222A  CFDD F014          	movff	postdec2,??i2__doprnt+1
 15234  00222E  C013  FFD9         	movff	??i2__doprnt,fsr2l
 15235  002232  C014  FFDA         	movff	??i2__doprnt+1,fsr2h
 15236  002236  0E05               	movlw	(high __ramtop+-1)
 15237  002238  64F7               	cpfsgt	tblptrh,c
 15238  00223A  D003               	bra	i2u1271_47
 15239  00223C  0008               	tblrd		*
 15240  00223E  50F5               	movf	tablat,w,c
 15241  002240  D005               	bra	i2u1271_40
 15242  002242                     i2u1271_47:
 15243  002242  CFF6 FFE9          	movff	tblptrl,fsr0l
 15244  002246  CFF7 FFEA          	movff	tblptrh,fsr0h
 15245  00224A  50EF               	movf	indf0,w,c
 15246  00224C                     i2u1271_40:
 15247  00224C  6EDF               	movwf	indf2,c
 15248  00224E  4A19               	infsnz	i2__doprnt@cp,f,c
 15249  002250  2A1A               	incf	i2__doprnt@cp+1,f,c
 15250  002252  C00D  FFD9         	movff	i2__doprnt@pb,fsr2l
 15251  002256  C00E  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 15252  00225A  2ADE               	incf	postinc2,f,c
 15253  00225C  0E00               	movlw	0
 15254  00225E  22DD               	addwfc	postdec2,f,c
 15255  002260                     i2l9910:
 15256  002260  C019  FFF6         	movff	i2__doprnt@cp,tblptrl
 15257  002264  C01A  FFF7         	movff	i2__doprnt@cp+1,tblptrh
 15258  002268  6AF8               	clrf	tblptru,c
 15259  00226A  0E05               	movlw	(high __ramtop+-1)
 15260  00226C  64F7               	cpfsgt	tblptrh,c
 15261  00226E  D003               	bra	i2u1272_47
 15262  002270  0008               	tblrd		*
 15263  002272  50F5               	movf	tablat,w,c
 15264  002274  D005               	bra	i2u1272_40
 15265  002276                     i2u1272_47:
 15266  002276  CFF6 FFE9          	movff	tblptrl,fsr0l
 15267  00227A  CFF7 FFEA          	movff	tblptrh,fsr0h
 15268  00227E  50EF               	movf	indf0,w,c
 15269  002280                     i2u1272_40:
 15270  002280  0900               	iorlw	0
 15271  002282  B4D8               	btfsc	status,2,c
 15272  002284  D0DE               	goto	i2l9962
 15273  002286  D797               	goto	i2l9898
 15274  002288                     i2l9914:
 15275  002288  C00F  FFF6         	movff	i2__doprnt@f,tblptrl
 15276  00228C  C010  FFF7         	movff	i2__doprnt@f+1,tblptrh
 15277  002290  4A0F               	infsnz	i2__doprnt@f,f,c
 15278  002292  2A10               	incf	i2__doprnt@f+1,f,c
 15279  002294                     	if	0	;tblptru may be non-zero
 15280  002294                     	endif
 15281  002294                     	if	0	;tblptru may be non-zero
 15282  002294                     	endif
 15283  002294  0008               	tblrd		*
 15284  002296  CFF5 F01B          	movff	tablat,i2__doprnt@c
 15285  00229A  501B               	movf	i2__doprnt@c,w,c
 15286                           
 15287                           ; Switch size 1, requested type "space"
 15288                           ; Number of cases is 4, Range of values is 0 to 115
 15289                           ; switch strategies available:
 15290                           ; Name         Instructions Cycles
 15291                           ; simple_byte           13     7 (average)
 15292                           ;	Chosen strategy is simple_byte
 15293  00229C  0A00               	xorlw	0	; case 0
 15294  00229E  B4D8               	btfsc	status,2,c
 15295  0022A0  D0DC               	goto	i2l9964
 15296  0022A2  0A64               	xorlw	100	; case 100
 15297  0022A4  B4D8               	btfsc	status,2,c
 15298  0022A6  D007               	goto	i2l9916
 15299  0022A8  0A0D               	xorlw	13	; case 105
 15300  0022AA  B4D8               	btfsc	status,2,c
 15301  0022AC  D004               	goto	i2l9916
 15302  0022AE  0A1A               	xorlw	26	; case 115
 15303  0022B0  B4D8               	btfsc	status,2,c
 15304  0022B2  D764               	goto	i2l9892
 15305  0022B4  D0C6               	goto	i2l9962
 15306  0022B6                     i2l9916:
 15307                           
 15308                           ;doprnt.c: 1253: {
 15309                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 15310  0022B6  C011  FFD9         	movff	i2__doprnt@ap,fsr2l
 15311  0022BA  C012  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 15312  0022BE  CFDF F013          	movff	indf2,??i2__doprnt
 15313  0022C2  0E02               	movlw	2
 15314  0022C4  26DE               	addwf	postinc2,f,c
 15315  0022C6  CFDF F014          	movff	indf2,??i2__doprnt+1
 15316  0022CA  0E00               	movlw	0
 15317  0022CC  22DD               	addwfc	postdec2,f,c
 15318  0022CE  C013  FFD9         	movff	??i2__doprnt,fsr2l
 15319  0022D2  C014  FFDA         	movff	??i2__doprnt+1,fsr2h
 15320  0022D6  CFDE F017          	movff	postinc2,i2__doprnt@val
 15321  0022DA  CFDD F018          	movff	postdec2,i2__doprnt@val+1
 15322                           
 15323                           ;doprnt.c: 1261: if((int)val < 0) {
 15324  0022DE  AE18               	btfss	i2__doprnt@val+1,7,c
 15325  0022E0  D006               	goto	i2l9924
 15326                           
 15327                           ;doprnt.c: 1262: flag |= 0x03;
 15328  0022E2  0E03               	movlw	3
 15329  0022E4  1215               	iorwf	i2__doprnt@flag,f,c
 15330                           
 15331                           ;doprnt.c: 1263: val = -val;
 15332  0022E6  6C17               	negf	i2__doprnt@val,c
 15333  0022E8  1E18               	comf	i2__doprnt@val+1,f,c
 15334  0022EA  B0D8               	btfsc	status,0,c
 15335  0022EC  2A18               	incf	i2__doprnt@val+1,f,c
 15336  0022EE                     i2l9924:
 15337                           
 15338                           ;doprnt.c: 1264: }
 15339                           ;doprnt.c: 1266: }
 15340                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 15341  0022EE  0E01               	movlw	1
 15342  0022F0  6E1B               	movwf	i2__doprnt@c,c
 15343  0022F2                     i2l9926:
 15344  0022F2  0E05               	movlw	5
 15345  0022F4  181B               	xorwf	i2__doprnt@c,w,c
 15346  0022F6  B4D8               	btfsc	status,2,c
 15347  0022F8  D012               	goto	i2l9938
 15348                           
 15349                           ;doprnt.c: 1306: if(val < dpowers[c])
 15350  0022FA  501B               	movf	i2__doprnt@c,w,c
 15351  0022FC  0D02               	mullw	2
 15352  0022FE  0E01               	movlw	low _dpowers
 15353  002300  24F3               	addwf	prodl,w,c
 15354  002302  6EF6               	movwf	tblptrl,c
 15355  002304  0E06               	movlw	high _dpowers
 15356  002306  20F4               	addwfc	prodh,w,c
 15357  002308  6EF7               	movwf	tblptrh,c
 15358  00230A                     	if	0	;There are less than 3 active tblptr bytes
 15359  00230A                     	endif
 15360  00230A  0009               	tblrd		*+
 15361  00230C  50F5               	movf	tablat,w,c
 15362  00230E  5C17               	subwf	i2__doprnt@val,w,c
 15363  002310  0009               	tblrd		*+
 15364  002312  50F5               	movf	tablat,w,c
 15365  002314  5818               	subwfb	i2__doprnt@val+1,w,c
 15366  002316  A0D8               	btfss	status,0,c
 15367  002318  D002               	goto	i2l9938
 15368                           
 15369                           ;doprnt.c: 1307: break;
 15370  00231A  2A1B               	incf	i2__doprnt@c,f,c
 15371  00231C  D7EA               	goto	i2l9926
 15372  00231E                     i2l9938:
 15373                           
 15374                           ;doprnt.c: 1422: {
 15375                           ;doprnt.c: 1438: if(flag & 0x03)
 15376  00231E  C015  F013         	movff	i2__doprnt@flag,??i2__doprnt
 15377  002322  0E03               	movlw	3
 15378  002324  1613               	andwf	??i2__doprnt,f,c
 15379  002326  B4D8               	btfsc	status,2,c
 15380  002328  D032               	goto	i2l9948
 15381                           
 15382                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 15383  00232A  EE20 F002          	lfsr	2,2
 15384  00232E  500D               	movf	i2__doprnt@pb,w,c
 15385  002330  26D9               	addwf	fsr2l,f,c
 15386  002332  500E               	movf	i2__doprnt@pb+1,w,c
 15387  002334  22DA               	addwfc	fsr2h,f,c
 15388  002336  50DE               	movf	postinc2,w,c
 15389  002338  10DE               	iorwf	postinc2,w,c
 15390  00233A  B4D8               	btfsc	status,2,c
 15391  00233C  D013               	goto	i2l9944
 15392  00233E  EE20 F002          	lfsr	2,2
 15393  002342  500D               	movf	i2__doprnt@pb,w,c
 15394  002344  26D9               	addwf	fsr2l,f,c
 15395  002346  500E               	movf	i2__doprnt@pb+1,w,c
 15396  002348  22DA               	addwfc	fsr2h,f,c
 15397  00234A  D801               	call	i2u1280_48
 15398  00234C  D020               	goto	i2l9948
 15399  00234E                     i2u1280_48:
 15400  00234E  0005               	push	
 15401  002350  6EFA               	movwf	pclath,c
 15402  002352  50DE               	movf	postinc2,w,c
 15403  002354  6EFD               	movwf	tosl,c
 15404  002356  50DE               	movf	postinc2,w,c
 15405  002358  6EFE               	movwf	tosh,c
 15406  00235A  50F8               	movf	tblptru,w,c
 15407  00235C  6EFF               	movwf	tosu,c
 15408  00235E  50FA               	movf	pclath,w,c
 15409  002360  0E2D               	movlw	45
 15410  002362  0012               	return		;indir
 15411  002364                     i2l9944:
 15412  002364  C00D  FFD9         	movff	i2__doprnt@pb,fsr2l
 15413  002368  C00E  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 15414  00236C  CFDE F013          	movff	postinc2,??i2__doprnt
 15415  002370  CFDD F014          	movff	postdec2,??i2__doprnt+1
 15416  002374  C013  FFD9         	movff	??i2__doprnt,fsr2l
 15417  002378  C014  FFDA         	movff	??i2__doprnt+1,fsr2h
 15418  00237C  0E2D               	movlw	45
 15419  00237E  6EDF               	movwf	indf2,c
 15420  002380  C00D  FFD9         	movff	i2__doprnt@pb,fsr2l
 15421  002384  C00E  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 15422  002388  2ADE               	incf	postinc2,f,c
 15423  00238A  0E00               	movlw	0
 15424  00238C  22DD               	addwfc	postdec2,f,c
 15425  00238E                     i2l9948:
 15426                           
 15427                           ;doprnt.c: 1469: }
 15428                           ;doprnt.c: 1472: prec = c;
 15429  00238E  C01B  F016         	movff	i2__doprnt@c,i2__doprnt@prec
 15430                           
 15431                           ;doprnt.c: 1474: while(prec--) {
 15432  002392  D053               	goto	i2l9960
 15433  002394                     i2l9950:
 15434                           
 15435                           ;doprnt.c: 1478: {
 15436                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 15437  002394  5016               	movf	i2__doprnt@prec,w,c
 15438  002396  0D02               	mullw	2
 15439  002398  0E01               	movlw	low _dpowers
 15440  00239A  24F3               	addwf	prodl,w,c
 15441  00239C  6EF6               	movwf	tblptrl,c
 15442  00239E  0E06               	movlw	high _dpowers
 15443  0023A0  20F4               	addwfc	prodh,w,c
 15444  0023A2  6EF7               	movwf	tblptrh,c
 15445  0023A4                     	if	0	;There are less than 3 active tblptr bytes
 15446  0023A4                     	endif
 15447  0023A4  0009               	tblrd		*+
 15448  0023A6  CFF5 F003          	movff	tablat,i2___lwdiv@divisor
 15449  0023AA  000A               	tblrd		*-
 15450  0023AC  CFF5 F004          	movff	tablat,i2___lwdiv@divisor+1
 15451  0023B0  C017  F001         	movff	i2__doprnt@val,i2___lwdiv@dividend
 15452  0023B4  C018  F002         	movff	i2__doprnt@val+1,i2___lwdiv@dividend+1
 15453  0023B8  EC9F  F01E         	call	i2___lwdiv
 15454  0023BC  C001  F008         	movff	?i2___lwdiv,i2___lwmod@dividend
 15455  0023C0  C002  F009         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
 15456  0023C4  0E00               	movlw	0
 15457  0023C6  6E0B               	movwf	i2___lwmod@divisor+1,c
 15458  0023C8  0E0A               	movlw	10
 15459  0023CA  6E0A               	movwf	i2___lwmod@divisor,c
 15460  0023CC  EC2D  F01F         	call	i2___lwmod	;wreg free
 15461  0023D0  5008               	movf	?i2___lwmod,w,c
 15462  0023D2  0F30               	addlw	48
 15463  0023D4  6E1B               	movwf	i2__doprnt@c,c
 15464                           
 15465                           ;doprnt.c: 1523: }
 15466                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 15467  0023D6  EE20 F002          	lfsr	2,2
 15468  0023DA  500D               	movf	i2__doprnt@pb,w,c
 15469  0023DC  26D9               	addwf	fsr2l,f,c
 15470  0023DE  500E               	movf	i2__doprnt@pb+1,w,c
 15471  0023E0  22DA               	addwfc	fsr2h,f,c
 15472  0023E2  50DE               	movf	postinc2,w,c
 15473  0023E4  10DE               	iorwf	postinc2,w,c
 15474  0023E6  B4D8               	btfsc	status,2,c
 15475  0023E8  D013               	goto	i2l9956
 15476  0023EA  EE20 F002          	lfsr	2,2
 15477  0023EE  500D               	movf	i2__doprnt@pb,w,c
 15478  0023F0  26D9               	addwf	fsr2l,f,c
 15479  0023F2  500E               	movf	i2__doprnt@pb+1,w,c
 15480  0023F4  22DA               	addwfc	fsr2h,f,c
 15481  0023F6  D801               	call	i2u1282_48
 15482  0023F8  D020               	goto	i2l9960
 15483  0023FA                     i2u1282_48:
 15484  0023FA  0005               	push	
 15485  0023FC  6EFA               	movwf	pclath,c
 15486  0023FE  50DE               	movf	postinc2,w,c
 15487  002400  6EFD               	movwf	tosl,c
 15488  002402  50DE               	movf	postinc2,w,c
 15489  002404  6EFE               	movwf	tosh,c
 15490  002406  50F8               	movf	tblptru,w,c
 15491  002408  6EFF               	movwf	tosu,c
 15492  00240A  50FA               	movf	pclath,w,c
 15493  00240C  501B               	movf	i2__doprnt@c,w,c
 15494  00240E  0012               	return		;indir
 15495  002410                     i2l9956:
 15496  002410  C00D  FFD9         	movff	i2__doprnt@pb,fsr2l
 15497  002414  C00E  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 15498  002418  CFDE F013          	movff	postinc2,??i2__doprnt
 15499  00241C  CFDD F014          	movff	postdec2,??i2__doprnt+1
 15500  002420  C013  FFD9         	movff	??i2__doprnt,fsr2l
 15501  002424  C014  FFDA         	movff	??i2__doprnt+1,fsr2h
 15502  002428  C01B  FFDF         	movff	i2__doprnt@c,indf2
 15503  00242C  C00D  FFD9         	movff	i2__doprnt@pb,fsr2l
 15504  002430  C00E  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 15505  002434  2ADE               	incf	postinc2,f,c
 15506  002436  0E00               	movlw	0
 15507  002438  22DD               	addwfc	postdec2,f,c
 15508  00243A                     i2l9960:
 15509  00243A  0616               	decf	i2__doprnt@prec,f,c
 15510  00243C  2816               	incf	i2__doprnt@prec,w,c
 15511  00243E  A4D8               	btfss	status,2,c
 15512  002440  D7A9               	goto	i2l9950
 15513  002442                     i2l9962:
 15514  002442  C00F  FFF6         	movff	i2__doprnt@f,tblptrl
 15515  002446  C010  FFF7         	movff	i2__doprnt@f+1,tblptrh
 15516  00244A  4A0F               	infsnz	i2__doprnt@f,f,c
 15517  00244C  2A10               	incf	i2__doprnt@f+1,f,c
 15518  00244E                     	if	0	;tblptru may be non-zero
 15519  00244E                     	endif
 15520  00244E                     	if	0	;tblptru may be non-zero
 15521  00244E                     	endif
 15522  00244E  0008               	tblrd		*
 15523  002450  CFF5 F01B          	movff	tablat,i2__doprnt@c
 15524  002454  501B               	movf	i2__doprnt@c,w,c
 15525  002456  A4D8               	btfss	status,2,c
 15526  002458  D657               	goto	i2l9880
 15527  00245A                     i2l9964:
 15528                           
 15529                           ;doprnt.c: 1540: return 0;
 15530  00245A  0E00               	movlw	0
 15531  00245C  6E0E               	movwf	?i2__doprnt+1,c
 15532  00245E  0E00               	movlw	0
 15533  002460  6E0D               	movwf	?i2__doprnt,c
 15534  002462  0012               	return	
 15535  002464                     __end_ofi2__doprnt:
 15536                           	opt stack 0
 15537                           tosu	equ	0xFFF
 15538                           tosh	equ	0xFFE
 15539                           tosl	equ	0xFFD
 15540                           pclatu	equ	0xFFB
 15541                           pclath	equ	0xFFA
 15542                           tblptru	equ	0xFF8
 15543                           tblptrh	equ	0xFF7
 15544                           tblptrl	equ	0xFF6
 15545                           tablat	equ	0xFF5
 15546                           prodh	equ	0xFF4
 15547                           prodl	equ	0xFF3
 15548                           intcon	equ	0xFF2
 15549                           intcon2	equ	0xFF1
 15550                           indf0	equ	0xFEF
 15551                           postinc0	equ	0xFEE
 15552                           fsr0h	equ	0xFEA
 15553                           fsr0l	equ	0xFE9
 15554                           wreg	equ	0xFE8
 15555                           postdec1	equ	0xFE5
 15556                           plusw1	equ	0xFE3
 15557                           fsr1h	equ	0xFE2
 15558                           fsr1l	equ	0xFE1
 15559                           indf2	equ	0xFDF
 15560                           postinc2	equ	0xFDE
 15561                           postdec2	equ	0xFDD
 15562                           plusw2	equ	0xFDB
 15563                           fsr2h	equ	0xFDA
 15564                           fsr2l	equ	0xFD9
 15565                           status	equ	0xFD8
 15566                           
 15567 ;; *************** function i2_putch *****************
 15568 ;; Defined at:
 15569 ;;		line 7 in file "/opt/microchip/xc8/v1.41/sources/common/putch.c"
 15570 ;; Parameters:    Size  Location     Type
 15571 ;;  c               1    wreg     unsigned char 
 15572 ;; Auto vars:     Size  Location     Type
 15573 ;;  c               1  (no storage) unsigned char 
 15574 ;; Return value:  Size  Location     Type
 15575 ;;                  1    wreg      void 
 15576 ;; Registers used:
 15577 ;;		wreg
 15578 ;; Tracked objects:
 15579 ;;		On entry : 0/0
 15580 ;;		On exit  : 0/0
 15581 ;;		Unchanged: 0/0
 15582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15583 ;;      Params:         0       0       0       0       0       0       0
 15584 ;;      Locals:         0       0       0       0       0       0       0
 15585 ;;      Temps:          0       0       0       0       0       0       0
 15586 ;;      Totals:         0       0       0       0       0       0       0
 15587 ;;Total ram usage:        0 bytes
 15588 ;; Hardware stack levels used:    1
 15589 ;; This function calls:
 15590 ;;		Nothing
 15591 ;; This function is called by:
 15592 ;;		_printf
 15593 ;; This function uses a non-reentrant model
 15594 ;;
 15595                           
 15596                           	psect	text75
 15597  00438A                     __ptext75:
 15598                           	opt stack 0
 15599  00438A                     i2_putch:
 15600                           	opt stack 19
 15601                           
 15602                           ;incstack = 0
 15603  00438A  0012               	return		;funcret
 15604  00438C                     __end_ofi2_putch:
 15605                           	opt stack 0
 15606                           tosu	equ	0xFFF
 15607                           tosh	equ	0xFFE
 15608                           tosl	equ	0xFFD
 15609                           pclatu	equ	0xFFB
 15610                           pclath	equ	0xFFA
 15611                           tblptru	equ	0xFF8
 15612                           tblptrh	equ	0xFF7
 15613                           tblptrl	equ	0xFF6
 15614                           tablat	equ	0xFF5
 15615                           prodh	equ	0xFF4
 15616                           prodl	equ	0xFF3
 15617                           intcon	equ	0xFF2
 15618                           intcon2	equ	0xFF1
 15619                           indf0	equ	0xFEF
 15620                           postinc0	equ	0xFEE
 15621                           fsr0h	equ	0xFEA
 15622                           fsr0l	equ	0xFE9
 15623                           wreg	equ	0xFE8
 15624                           postdec1	equ	0xFE5
 15625                           plusw1	equ	0xFE3
 15626                           fsr1h	equ	0xFE2
 15627                           fsr1l	equ	0xFE1
 15628                           indf2	equ	0xFDF
 15629                           postinc2	equ	0xFDE
 15630                           postdec2	equ	0xFDD
 15631                           plusw2	equ	0xFDB
 15632                           fsr2h	equ	0xFDA
 15633                           fsr2l	equ	0xFD9
 15634                           status	equ	0xFD8
 15635                           
 15636 ;; *************** function i2___lwmod *****************
 15637 ;; Defined at:
 15638 ;;		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/lwmod.c"
 15639 ;; Parameters:    Size  Location     Type
 15640 ;;  dividend        2    7[COMRAM] unsigned int 
 15641 ;;  divisor         2    9[COMRAM] unsigned int 
 15642 ;; Auto vars:     Size  Location     Type
 15643 ;;  __lwmod         1   11[COMRAM] unsigned char 
 15644 ;; Return value:  Size  Location     Type
 15645 ;;                  2    7[COMRAM] unsigned int 
 15646 ;; Registers used:
 15647 ;;		wreg, status,2, status,0
 15648 ;; Tracked objects:
 15649 ;;		On entry : 0/0
 15650 ;;		On exit  : 0/0
 15651 ;;		Unchanged: 0/0
 15652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15653 ;;      Params:         4       0       0       0       0       0       0
 15654 ;;      Locals:         1       0       0       0       0       0       0
 15655 ;;      Temps:          0       0       0       0       0       0       0
 15656 ;;      Totals:         5       0       0       0       0       0       0
 15657 ;;Total ram usage:        5 bytes
 15658 ;; Hardware stack levels used:    1
 15659 ;; This function calls:
 15660 ;;		Nothing
 15661 ;; This function is called by:
 15662 ;;		i2__doprnt
 15663 ;; This function uses a non-reentrant model
 15664 ;;
 15665                           
 15666                           	psect	text76
 15667  003E5A                     __ptext76:
 15668                           	opt stack 0
 15669  003E5A                     i2___lwmod:
 15670                           	opt stack 19
 15671                           
 15672                           ;incstack = 0
 15673  003E5A  500A               	movf	i2___lwmod@divisor,w,c
 15674  003E5C  100B               	iorwf	i2___lwmod@divisor+1,w,c
 15675  003E5E  B4D8               	btfsc	status,2,c
 15676  003E60  D018               	goto	i2l1552
 15677  003E62  0E01               	movlw	1
 15678  003E64  6E0C               	movwf	i2___lwmod@counter,c
 15679  003E66  D004               	goto	i2l4278
 15680  003E68                     i2l4276:
 15681  003E68  90D8               	bcf	status,0,c
 15682  003E6A  360A               	rlcf	i2___lwmod@divisor,f,c
 15683  003E6C  360B               	rlcf	i2___lwmod@divisor+1,f,c
 15684  003E6E  2A0C               	incf	i2___lwmod@counter,f,c
 15685  003E70                     i2l4278:
 15686  003E70  AE0B               	btfss	i2___lwmod@divisor+1,7,c
 15687  003E72  D7FA               	goto	i2l4276
 15688  003E74                     i2l4280:
 15689  003E74  500A               	movf	i2___lwmod@divisor,w,c
 15690  003E76  5C08               	subwf	i2___lwmod@dividend,w,c
 15691  003E78  500B               	movf	i2___lwmod@divisor+1,w,c
 15692  003E7A  5809               	subwfb	i2___lwmod@dividend+1,w,c
 15693  003E7C  A0D8               	btfss	status,0,c
 15694  003E7E  D004               	goto	i2l4284
 15695  003E80  500A               	movf	i2___lwmod@divisor,w,c
 15696  003E82  5E08               	subwf	i2___lwmod@dividend,f,c
 15697  003E84  500B               	movf	i2___lwmod@divisor+1,w,c
 15698  003E86  5A09               	subwfb	i2___lwmod@dividend+1,f,c
 15699  003E88                     i2l4284:
 15700  003E88  90D8               	bcf	status,0,c
 15701  003E8A  320B               	rrcf	i2___lwmod@divisor+1,f,c
 15702  003E8C  320A               	rrcf	i2___lwmod@divisor,f,c
 15703  003E8E  2E0C               	decfsz	i2___lwmod@counter,f,c
 15704  003E90  D7F1               	goto	i2l4280
 15705  003E92                     i2l1552:
 15706  003E92  C008  F008         	movff	i2___lwmod@dividend,?i2___lwmod
 15707  003E96  C009  F009         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
 15708  003E9A  0012               	return		;funcret
 15709  003E9C                     __end_ofi2___lwmod:
 15710                           	opt stack 0
 15711                           tosu	equ	0xFFF
 15712                           tosh	equ	0xFFE
 15713                           tosl	equ	0xFFD
 15714                           pclatu	equ	0xFFB
 15715                           pclath	equ	0xFFA
 15716                           tblptru	equ	0xFF8
 15717                           tblptrh	equ	0xFF7
 15718                           tblptrl	equ	0xFF6
 15719                           tablat	equ	0xFF5
 15720                           prodh	equ	0xFF4
 15721                           prodl	equ	0xFF3
 15722                           intcon	equ	0xFF2
 15723                           intcon2	equ	0xFF1
 15724                           indf0	equ	0xFEF
 15725                           postinc0	equ	0xFEE
 15726                           fsr0h	equ	0xFEA
 15727                           fsr0l	equ	0xFE9
 15728                           wreg	equ	0xFE8
 15729                           postdec1	equ	0xFE5
 15730                           plusw1	equ	0xFE3
 15731                           fsr1h	equ	0xFE2
 15732                           fsr1l	equ	0xFE1
 15733                           indf2	equ	0xFDF
 15734                           postinc2	equ	0xFDE
 15735                           postdec2	equ	0xFDD
 15736                           plusw2	equ	0xFDB
 15737                           fsr2h	equ	0xFDA
 15738                           fsr2l	equ	0xFD9
 15739                           status	equ	0xFD8
 15740                           
 15741 ;; *************** function i2___lwdiv *****************
 15742 ;; Defined at:
 15743 ;;		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/lwdiv.c"
 15744 ;; Parameters:    Size  Location     Type
 15745 ;;  dividend        2    0[COMRAM] unsigned int 
 15746 ;;  divisor         2    2[COMRAM] unsigned int 
 15747 ;; Auto vars:     Size  Location     Type
 15748 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 15749 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 15750 ;; Return value:  Size  Location     Type
 15751 ;;                  2    0[COMRAM] unsigned int 
 15752 ;; Registers used:
 15753 ;;		wreg, status,2, status,0
 15754 ;; Tracked objects:
 15755 ;;		On entry : 0/0
 15756 ;;		On exit  : 0/0
 15757 ;;		Unchanged: 0/0
 15758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15759 ;;      Params:         4       0       0       0       0       0       0
 15760 ;;      Locals:         3       0       0       0       0       0       0
 15761 ;;      Temps:          0       0       0       0       0       0       0
 15762 ;;      Totals:         7       0       0       0       0       0       0
 15763 ;;Total ram usage:        7 bytes
 15764 ;; Hardware stack levels used:    1
 15765 ;; This function calls:
 15766 ;;		Nothing
 15767 ;; This function is called by:
 15768 ;;		i2__doprnt
 15769 ;; This function uses a non-reentrant model
 15770 ;;
 15771                           
 15772                           	psect	text77
 15773  003D3E                     __ptext77:
 15774                           	opt stack 0
 15775  003D3E                     i2___lwdiv:
 15776                           	opt stack 19
 15777                           
 15778                           ;incstack = 0
 15779  003D3E  0E00               	movlw	0
 15780  003D40  6E06               	movwf	i2___lwdiv@quotient+1,c
 15781  003D42  0E00               	movlw	0
 15782  003D44  6E05               	movwf	i2___lwdiv@quotient,c
 15783  003D46  5003               	movf	i2___lwdiv@divisor,w,c
 15784  003D48  1004               	iorwf	i2___lwdiv@divisor+1,w,c
 15785  003D4A  B4D8               	btfsc	status,2,c
 15786  003D4C  D01C               	goto	i2l1542
 15787  003D4E  0E01               	movlw	1
 15788  003D50  6E07               	movwf	i2___lwdiv@counter,c
 15789  003D52  D004               	goto	i2l4258
 15790  003D54                     i2l4256:
 15791  003D54  90D8               	bcf	status,0,c
 15792  003D56  3603               	rlcf	i2___lwdiv@divisor,f,c
 15793  003D58  3604               	rlcf	i2___lwdiv@divisor+1,f,c
 15794  003D5A  2A07               	incf	i2___lwdiv@counter,f,c
 15795  003D5C                     i2l4258:
 15796  003D5C  AE04               	btfss	i2___lwdiv@divisor+1,7,c
 15797  003D5E  D7FA               	goto	i2l4256
 15798  003D60                     i2l4260:
 15799  003D60  90D8               	bcf	status,0,c
 15800  003D62  3605               	rlcf	i2___lwdiv@quotient,f,c
 15801  003D64  3606               	rlcf	i2___lwdiv@quotient+1,f,c
 15802  003D66  5003               	movf	i2___lwdiv@divisor,w,c
 15803  003D68  5C01               	subwf	i2___lwdiv@dividend,w,c
 15804  003D6A  5004               	movf	i2___lwdiv@divisor+1,w,c
 15805  003D6C  5802               	subwfb	i2___lwdiv@dividend+1,w,c
 15806  003D6E  A0D8               	btfss	status,0,c
 15807  003D70  D005               	goto	i2l4268
 15808  003D72  5003               	movf	i2___lwdiv@divisor,w,c
 15809  003D74  5E01               	subwf	i2___lwdiv@dividend,f,c
 15810  003D76  5004               	movf	i2___lwdiv@divisor+1,w,c
 15811  003D78  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
 15812  003D7A  8005               	bsf	i2___lwdiv@quotient,0,c
 15813  003D7C                     i2l4268:
 15814  003D7C  90D8               	bcf	status,0,c
 15815  003D7E  3204               	rrcf	i2___lwdiv@divisor+1,f,c
 15816  003D80  3203               	rrcf	i2___lwdiv@divisor,f,c
 15817  003D82  2E07               	decfsz	i2___lwdiv@counter,f,c
 15818  003D84  D7ED               	goto	i2l4260
 15819  003D86                     i2l1542:
 15820  003D86  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
 15821  003D8A  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 15822  003D8E  0012               	return		;funcret
 15823  003D90                     __end_ofi2___lwdiv:
 15824                           	opt stack 0
 15825                           tosu	equ	0xFFF
 15826                           tosh	equ	0xFFE
 15827                           tosl	equ	0xFFD
 15828                           pclatu	equ	0xFFB
 15829                           pclath	equ	0xFFA
 15830                           tblptru	equ	0xFF8
 15831                           tblptrh	equ	0xFF7
 15832                           tblptrl	equ	0xFF6
 15833                           tablat	equ	0xFF5
 15834                           prodh	equ	0xFF4
 15835                           prodl	equ	0xFF3
 15836                           intcon	equ	0xFF2
 15837                           intcon2	equ	0xFF1
 15838                           indf0	equ	0xFEF
 15839                           postinc0	equ	0xFEE
 15840                           fsr0h	equ	0xFEA
 15841                           fsr0l	equ	0xFE9
 15842                           wreg	equ	0xFE8
 15843                           postdec1	equ	0xFE5
 15844                           plusw1	equ	0xFE3
 15845                           fsr1h	equ	0xFE2
 15846                           fsr1l	equ	0xFE1
 15847                           indf2	equ	0xFDF
 15848                           postinc2	equ	0xFDE
 15849                           postdec2	equ	0xFDD
 15850                           plusw2	equ	0xFDB
 15851                           fsr2h	equ	0xFDA
 15852                           fsr2l	equ	0xFD9
 15853                           status	equ	0xFD8
 15854                           
 15855 ;; *************** function _WriteUSART *****************
 15856 ;; Defined at:
 15857 ;;		line 168 in file "USART/usart.c"
 15858 ;; Parameters:    Size  Location     Type
 15859 ;;  data            1    wreg     unsigned char 
 15860 ;; Auto vars:     Size  Location     Type
 15861 ;;  data            1    0[COMRAM] unsigned char 
 15862 ;; Return value:  Size  Location     Type
 15863 ;;                  1    wreg      void 
 15864 ;; Registers used:
 15865 ;;		wreg
 15866 ;; Tracked objects:
 15867 ;;		On entry : 0/0
 15868 ;;		On exit  : 0/0
 15869 ;;		Unchanged: 0/0
 15870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15871 ;;      Params:         0       0       0       0       0       0       0
 15872 ;;      Locals:         1       0       0       0       0       0       0
 15873 ;;      Temps:          0       0       0       0       0       0       0
 15874 ;;      Totals:         1       0       0       0       0       0       0
 15875 ;;Total ram usage:        1 bytes
 15876 ;; Hardware stack levels used:    1
 15877 ;; This function calls:
 15878 ;;		Nothing
 15879 ;; This function is called by:
 15880 ;;		_assync_serial_commun
 15881 ;;		_syn_serial_commun_isr
 15882 ;;		_putsUSART
 15883 ;;		_putrsUSART
 15884 ;; This function uses a non-reentrant model
 15885 ;;
 15886                           
 15887                           	psect	text78
 15888  0042D0                     __ptext78:
 15889                           	opt stack 0
 15890  0042D0                     _WriteUSART:
 15891                           	opt stack 22
 15892                           
 15893                           ;incstack = 0
 15894                           ;WriteUSART@data stored from wreg
 15895  0042D0  6E01               	movwf	WriteUSART@data,c
 15896                           
 15897                           ;usart.c: 170: if(TXSTAbits.TX9)
 15898  0042D2  ACAC               	btfss	4012,6,c	;volatile
 15899  0042D4  D004               	goto	i2l4748
 15900                           
 15901                           ;usart.c: 171: {
 15902                           ;usart.c: 172: TXSTAbits.TX9D = 0;
 15903  0042D6  90AC               	bcf	4012,0,c	;volatile
 15904                           
 15905                           ;usart.c: 173: if(USART_Status.TX_NINE)
 15906  0042D8  0100               	movlb	0	; () banked
 15907  0042DA  B3F9               	btfsc	_USART_Status& (0+255),1,b
 15908                           
 15909                           ; BSR set to: 0
 15910                           ;usart.c: 174: TXSTAbits.TX9D = 1;
 15911  0042DC  80AC               	bsf	4012,0,c	;volatile
 15912  0042DE                     i2l4748:
 15913                           
 15914                           ;usart.c: 175: }
 15915                           ;usart.c: 177: TXREG = data;
 15916  0042DE  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
 15917  0042E2  0012               	return		;funcret
 15918  0042E4                     __end_of_WriteUSART:
 15919                           	opt stack 0
 15920                           tosu	equ	0xFFF
 15921                           tosh	equ	0xFFE
 15922                           tosl	equ	0xFFD
 15923                           pclatu	equ	0xFFB
 15924                           pclath	equ	0xFFA
 15925                           tblptru	equ	0xFF8
 15926                           tblptrh	equ	0xFF7
 15927                           tblptrl	equ	0xFF6
 15928                           tablat	equ	0xFF5
 15929                           prodh	equ	0xFF4
 15930                           prodl	equ	0xFF3
 15931                           intcon	equ	0xFF2
 15932                           intcon2	equ	0xFF1
 15933                           indf0	equ	0xFEF
 15934                           postinc0	equ	0xFEE
 15935                           fsr0h	equ	0xFEA
 15936                           fsr0l	equ	0xFE9
 15937                           wreg	equ	0xFE8
 15938                           postdec1	equ	0xFE5
 15939                           plusw1	equ	0xFE3
 15940                           fsr1h	equ	0xFE2
 15941                           fsr1l	equ	0xFE1
 15942                           indf2	equ	0xFDF
 15943                           postinc2	equ	0xFDE
 15944                           postdec2	equ	0xFDD
 15945                           plusw2	equ	0xFDB
 15946                           fsr2h	equ	0xFDA
 15947                           fsr2l	equ	0xFD9
 15948                           status	equ	0xFD8
 15949                           
 15950 ;; *************** function _ReadUSART *****************
 15951 ;; Defined at:
 15952 ;;		line 138 in file "USART/usart.c"
 15953 ;; Parameters:    Size  Location     Type
 15954 ;;		None
 15955 ;; Auto vars:     Size  Location     Type
 15956 ;;  data            1    0[COMRAM] unsigned char 
 15957 ;; Return value:  Size  Location     Type
 15958 ;;                  1    wreg      unsigned char 
 15959 ;; Registers used:
 15960 ;;		wreg, status,2, status,0
 15961 ;; Tracked objects:
 15962 ;;		On entry : 0/0
 15963 ;;		On exit  : 0/0
 15964 ;;		Unchanged: 0/0
 15965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15966 ;;      Params:         0       0       0       0       0       0       0
 15967 ;;      Locals:         1       0       0       0       0       0       0
 15968 ;;      Temps:          0       0       0       0       0       0       0
 15969 ;;      Totals:         1       0       0       0       0       0       0
 15970 ;;Total ram usage:        1 bytes
 15971 ;; Hardware stack levels used:    1
 15972 ;; This function calls:
 15973 ;;		Nothing
 15974 ;; This function is called by:
 15975 ;;		_syn_serial_commun_isr
 15976 ;;		_getsUSART
 15977 ;; This function uses a non-reentrant model
 15978 ;;
 15979                           
 15980                           	psect	text79
 15981  004092                     __ptext79:
 15982                           	opt stack 0
 15983  004092                     _ReadUSART:
 15984                           	opt stack 23
 15985                           
 15986                           ;usart.c: 140: char data;
 15987                           ;usart.c: 142: USART_Status.val &= 0xf2;
 15988                           
 15989                           ;incstack = 0
 15990  004092  0EF2               	movlw	242
 15991  004094  0100               	movlb	0	; () banked
 15992  004096  17F9               	andwf	_USART_Status& (0+255),f,b
 15993                           
 15994                           ; BSR set to: 0
 15995                           ;usart.c: 144: if(RCSTAbits.RX9)
 15996  004098  ACAB               	btfss	4011,6,c	;volatile
 15997  00409A  D006               	goto	i2l149
 15998                           
 15999                           ; BSR set to: 0
 16000                           ;usart.c: 145: {
 16001                           ;usart.c: 146: USART_Status.RX_NINE = 0;
 16002  00409C  0100               	movlb	0	; () banked
 16003  00409E  91F9               	bcf	_USART_Status& (0+255),0,b
 16004                           
 16005                           ;usart.c: 147: if(RCSTAbits.RX9D)
 16006  0040A0  A0AB               	btfss	4011,0,c	;volatile
 16007  0040A2  D002               	goto	i2l149
 16008                           
 16009                           ; BSR set to: 0
 16010                           ;usart.c: 148: USART_Status.RX_NINE = 1;
 16011  0040A4  0100               	movlb	0	; () banked
 16012  0040A6  81F9               	bsf	_USART_Status& (0+255),0,b
 16013  0040A8                     i2l149:
 16014                           
 16015                           ; BSR set to: 0
 16016                           ;usart.c: 149: }
 16017                           ;usart.c: 151: if(RCSTAbits.FERR)
 16018  0040A8  A4AB               	btfss	4011,2,c	;volatile
 16019  0040AA  D002               	goto	i2l151
 16020                           
 16021                           ; BSR set to: 0
 16022                           ;usart.c: 152: USART_Status.FRAME_ERROR = 1;
 16023  0040AC  0100               	movlb	0	; () banked
 16024  0040AE  85F9               	bsf	_USART_Status& (0+255),2,b
 16025  0040B0                     i2l151:
 16026                           
 16027                           ; BSR set to: 0
 16028                           ;usart.c: 154: if(RCSTAbits.OERR)
 16029  0040B0  A2AB               	btfss	4011,1,c	;volatile
 16030  0040B2  D002               	goto	i2l152
 16031                           
 16032                           ; BSR set to: 0
 16033                           ;usart.c: 155: USART_Status.OVERRUN_ERROR = 1;
 16034  0040B4  0100               	movlb	0	; () banked
 16035  0040B6  87F9               	bsf	_USART_Status& (0+255),3,b
 16036  0040B8                     i2l152:
 16037                           
 16038                           ; BSR set to: 0
 16039                           ;usart.c: 157: data = RCREG;
 16040  0040B8  CFAE F001          	movff	4014,ReadUSART@data	;volatile
 16041                           
 16042                           ; BSR set to: 0
 16043                           ;usart.c: 159: return (data);
 16044  0040BC  5001               	movf	ReadUSART@data,w,c
 16045  0040BE  0012               	return	
 16046  0040C0                     __end_of_ReadUSART:
 16047                           	opt stack 0
 16048                           tosu	equ	0xFFF
 16049                           tosh	equ	0xFFE
 16050                           tosl	equ	0xFFD
 16051                           pclatu	equ	0xFFB
 16052                           pclath	equ	0xFFA
 16053                           tblptru	equ	0xFF8
 16054                           tblptrh	equ	0xFF7
 16055                           tblptrl	equ	0xFF6
 16056                           tablat	equ	0xFF5
 16057                           prodh	equ	0xFF4
 16058                           prodl	equ	0xFF3
 16059                           intcon	equ	0xFF2
 16060                           intcon2	equ	0xFF1
 16061                           indf0	equ	0xFEF
 16062                           postinc0	equ	0xFEE
 16063                           fsr0h	equ	0xFEA
 16064                           fsr0l	equ	0xFE9
 16065                           wreg	equ	0xFE8
 16066                           postdec1	equ	0xFE5
 16067                           plusw1	equ	0xFE3
 16068                           fsr1h	equ	0xFE2
 16069                           fsr1l	equ	0xFE1
 16070                           indf2	equ	0xFDF
 16071                           postinc2	equ	0xFDE
 16072                           postdec2	equ	0xFDD
 16073                           plusw2	equ	0xFDB
 16074                           fsr2h	equ	0xFDA
 16075                           fsr2l	equ	0xFD9
 16076                           status	equ	0xFD8
 16077                           
 16078 ;; *************** function _rb0_isr *****************
 16079 ;; Defined at:
 16080 ;;		line 632 in file "main.c"
 16081 ;; Parameters:    Size  Location     Type
 16082 ;;		None
 16083 ;; Auto vars:     Size  Location     Type
 16084 ;;		None
 16085 ;; Return value:  Size  Location     Type
 16086 ;;                  1    wreg      void 
 16087 ;; Registers used:
 16088 ;;		wreg, status,2, status,0, cstack
 16089 ;; Tracked objects:
 16090 ;;		On entry : 0/0
 16091 ;;		On exit  : 0/0
 16092 ;;		Unchanged: 0/0
 16093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16094 ;;      Params:         0       0       0       0       0       0       0
 16095 ;;      Locals:         0       0       0       0       0       0       0
 16096 ;;      Temps:          0       0       0       0       0       0       0
 16097 ;;      Totals:         0       0       0       0       0       0       0
 16098 ;;Total ram usage:        0 bytes
 16099 ;; Hardware stack levels used:    1
 16100 ;; Hardware stack levels required when called:    1
 16101 ;; This function calls:
 16102 ;;		_timer0_init
 16103 ;;		_timer0_reset
 16104 ;; This function is called by:
 16105 ;;		_ISR
 16106 ;; This function uses a non-reentrant model
 16107 ;;
 16108                           
 16109                           	psect	text80
 16110  00363E                     __ptext80:
 16111                           	opt stack 0
 16112  00363E                     _rb0_isr:
 16113                           	opt stack 23
 16114                           
 16115                           ;main.c: 635: INTCONbits.INT0IF = 0;
 16116                           
 16117                           ; BSR set to: 0
 16118                           ;incstack = 0
 16119  00363E  92F2               	bcf	intcon,1,c	;volatile
 16120                           
 16121                           ;main.c: 638: countTINA=0;
 16122  003640  0E00               	movlw	0
 16123  003642  0100               	movlb	0	; () banked
 16124  003644  6FF6               	movwf	(_countTINA+1)& (0+255),b	;volatile
 16125  003646  0E00               	movlw	0
 16126  003648  6FF5               	movwf	_countTINA& (0+255),b	;volatile
 16127                           
 16128                           ; BSR set to: 0
 16129                           ;main.c: 640: if(goToSleep==1){
 16130  00364A  0102               	movlb	2	; () banked
 16131  00364C  0593               	decf	_goToSleep& (0+255),w,b	;volatile
 16132  00364E  0102               	movlb	2	; () banked
 16133  003650  1194               	iorwf	(_goToSleep+1)& (0+255),w,b	;volatile
 16134  003652  A4D8               	btfss	status,2,c
 16135  003654  D006               	goto	i2l6020
 16136                           
 16137                           ; BSR set to: 2
 16138                           ;main.c: 642: goToSleep=0;
 16139  003656  0E00               	movlw	0
 16140  003658  0102               	movlb	2	; () banked
 16141  00365A  6F94               	movwf	(_goToSleep+1)& (0+255),b	;volatile
 16142  00365C  0E00               	movlw	0
 16143  00365E  6F93               	movwf	_goToSleep& (0+255),b	;volatile
 16144                           
 16145                           ;main.c: 643: }
 16146  003660  D032               	goto	i2l6038
 16147  003662                     i2l6020:
 16148                           
 16149                           ; BSR set to: 2
 16150                           ;main.c: 644: else if(mode==0){
 16151  003662  507B               	movf	_mode,w,c	;volatile
 16152  003664  107C               	iorwf	_mode+1,w,c	;volatile
 16153  003666  A4D8               	btfss	status,2,c
 16154  003668  D015               	goto	i2l6026
 16155                           
 16156                           ; BSR set to: 2
 16157                           ;main.c: 646: mode=1;
 16158  00366A  0E00               	movlw	0
 16159  00366C  6E7C               	movwf	_mode+1,c	;volatile
 16160  00366E  0E01               	movlw	1
 16161  003670  6E7B               	movwf	_mode,c	;volatile
 16162                           
 16163                           ;main.c: 647: status=0;
 16164  003672  0E00               	movlw	0
 16165  003674  0102               	movlb	2	; () banked
 16166  003676  6F29               	movwf	(_status+1)& (0+255),b	;volatile
 16167  003678  0E00               	movlw	0
 16168  00367A  6F28               	movwf	_status& (0+255),b	;volatile
 16169                           
 16170                           ;main.c: 648: wALTON = wALLON = 0;
 16171  00367C  0E00               	movlw	0
 16172  00367E  0102               	movlb	2	; () banked
 16173  003680  6F9A               	movwf	(_wALLON+1)& (0+255),b	;volatile
 16174  003682  0E00               	movlw	0
 16175  003684  6F99               	movwf	_wALLON& (0+255),b	;volatile
 16176  003686  C299  F29B         	movff	_wALLON,_wALTON	;volatile
 16177  00368A  C29A  F29C         	movff	_wALLON+1,_wALTON+1	;volatile
 16178                           
 16179                           ; BSR set to: 2
 16180                           ;main.c: 649: timer0_init();
 16181  00368E  EC53  F021         	call	_timer0_init
 16182                           
 16183                           ;main.c: 650: }
 16184  003692  D019               	goto	i2l6038
 16185  003694                     i2l6026:
 16186                           
 16187                           ;main.c: 651: else{
 16188                           ;main.c: 653: if(status==7){
 16189  003694  0E07               	movlw	7
 16190  003696  0102               	movlb	2	; () banked
 16191  003698  1928               	xorwf	_status& (0+255),w,b	;volatile
 16192  00369A  0102               	movlb	2	; () banked
 16193  00369C  1129               	iorwf	(_status+1)& (0+255),w,b	;volatile
 16194  00369E  A4D8               	btfss	status,2,c
 16195  0036A0  D00A               	goto	i2l6034
 16196                           
 16197                           ; BSR set to: 2
 16198                           ;main.c: 654: mode=0;
 16199  0036A2  0E00               	movlw	0
 16200  0036A4  6E7C               	movwf	_mode+1,c	;volatile
 16201  0036A6  0E00               	movlw	0
 16202  0036A8  6E7B               	movwf	_mode,c	;volatile
 16203                           
 16204                           ; BSR set to: 2
 16205                           ;main.c: 655: status=-1;
 16206  0036AA  0102               	movlb	2	; () banked
 16207  0036AC  6928               	setf	_status& (0+255),b	;volatile
 16208  0036AE  6929               	setf	(_status+1)& (0+255),b	;volatile
 16209                           
 16210                           ; BSR set to: 2
 16211                           ;main.c: 656: timer0_reset();
 16212  0036B0  ECBD  F021         	call	_timer0_reset	;wreg free
 16213                           
 16214                           ;main.c: 657: }
 16215  0036B4  D008               	goto	i2l6038
 16216  0036B6                     i2l6034:
 16217                           
 16218                           ;main.c: 659: else
 16219                           ;main.c: 660: {status++;pressedMode=0;}
 16220  0036B6  0102               	movlb	2	; () banked
 16221  0036B8  4B28               	infsnz	_status& (0+255),f,b	;volatile
 16222  0036BA  2B29               	incf	(_status+1)& (0+255),f,b	;volatile
 16223                           
 16224                           ; BSR set to: 2
 16225  0036BC  0E00               	movlw	0
 16226  0036BE  0102               	movlb	2	; () banked
 16227  0036C0  6F92               	movwf	(_pressedMode+1)& (0+255),b	;volatile
 16228  0036C2  0E00               	movlw	0
 16229  0036C4  6F91               	movwf	_pressedMode& (0+255),b	;volatile
 16230  0036C6                     i2l6038:
 16231                           
 16232                           ;main.c: 661: }
 16233                           ;main.c: 664: updateDisplay = 1;
 16234  0036C6  0E00               	movlw	0
 16235  0036C8  0102               	movlb	2	; () banked
 16236  0036CA  6F98               	movwf	(_updateDisplay+1)& (0+255),b	;volatile
 16237  0036CC  0E01               	movlw	1
 16238  0036CE  6F97               	movwf	_updateDisplay& (0+255),b	;volatile
 16239                           
 16240                           ; BSR set to: 2
 16241  0036D0  0012               	return		;funcret
 16242  0036D2                     __end_of_rb0_isr:
 16243                           	opt stack 0
 16244                           tosu	equ	0xFFF
 16245                           tosh	equ	0xFFE
 16246                           tosl	equ	0xFFD
 16247                           pclatu	equ	0xFFB
 16248                           pclath	equ	0xFFA
 16249                           tblptru	equ	0xFF8
 16250                           tblptrh	equ	0xFF7
 16251                           tblptrl	equ	0xFF6
 16252                           tablat	equ	0xFF5
 16253                           prodh	equ	0xFF4
 16254                           prodl	equ	0xFF3
 16255                           intcon	equ	0xFF2
 16256                           intcon2	equ	0xFF1
 16257                           indf0	equ	0xFEF
 16258                           postinc0	equ	0xFEE
 16259                           fsr0h	equ	0xFEA
 16260                           fsr0l	equ	0xFE9
 16261                           wreg	equ	0xFE8
 16262                           postdec1	equ	0xFE5
 16263                           plusw1	equ	0xFE3
 16264                           fsr1h	equ	0xFE2
 16265                           fsr1l	equ	0xFE1
 16266                           indf2	equ	0xFDF
 16267                           postinc2	equ	0xFDE
 16268                           postdec2	equ	0xFDD
 16269                           plusw2	equ	0xFDB
 16270                           fsr2h	equ	0xFDA
 16271                           fsr2l	equ	0xFD9
 16272                           status	equ	0xFD8
 16273                           
 16274 ;; *************** function _timer0_reset *****************
 16275 ;; Defined at:
 16276 ;;		line 1045 in file "main.c"
 16277 ;; Parameters:    Size  Location     Type
 16278 ;;		None
 16279 ;; Auto vars:     Size  Location     Type
 16280 ;;		None
 16281 ;; Return value:  Size  Location     Type
 16282 ;;                  1    wreg      void 
 16283 ;; Registers used:
 16284 ;;		None
 16285 ;; Tracked objects:
 16286 ;;		On entry : 0/0
 16287 ;;		On exit  : 0/0
 16288 ;;		Unchanged: 0/0
 16289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16290 ;;      Params:         0       0       0       0       0       0       0
 16291 ;;      Locals:         0       0       0       0       0       0       0
 16292 ;;      Temps:          0       0       0       0       0       0       0
 16293 ;;      Totals:         0       0       0       0       0       0       0
 16294 ;;Total ram usage:        0 bytes
 16295 ;; Hardware stack levels used:    1
 16296 ;; This function calls:
 16297 ;;		Nothing
 16298 ;; This function is called by:
 16299 ;;		_rb0_isr
 16300 ;; This function uses a non-reentrant model
 16301 ;;
 16302                           
 16303                           	psect	text81
 16304  00437A                     __ptext81:
 16305                           	opt stack 0
 16306  00437A                     _timer0_reset:
 16307                           	opt stack 23
 16308                           
 16309                           ;main.c: 1048: INTCONbits.TMR0IE = 1;
 16310                           
 16311                           ; BSR set to: 2
 16312                           ;incstack = 0
 16313  00437A  8AF2               	bsf	intcon,5,c	;volatile
 16314                           
 16315                           ;main.c: 1051: T0CONbits.TMR0ON = 0;
 16316  00437C  9ED5               	bcf	4053,7,c	;volatile
 16317  00437E  0012               	return		;funcret
 16318  004380                     __end_of_timer0_reset:
 16319                           	opt stack 0
 16320                           tosu	equ	0xFFF
 16321                           tosh	equ	0xFFE
 16322                           tosl	equ	0xFFD
 16323                           pclatu	equ	0xFFB
 16324                           pclath	equ	0xFFA
 16325                           tblptru	equ	0xFF8
 16326                           tblptrh	equ	0xFF7
 16327                           tblptrl	equ	0xFF6
 16328                           tablat	equ	0xFF5
 16329                           prodh	equ	0xFF4
 16330                           prodl	equ	0xFF3
 16331                           intcon	equ	0xFF2
 16332                           intcon2	equ	0xFF1
 16333                           indf0	equ	0xFEF
 16334                           postinc0	equ	0xFEE
 16335                           fsr0h	equ	0xFEA
 16336                           fsr0l	equ	0xFE9
 16337                           wreg	equ	0xFE8
 16338                           postdec1	equ	0xFE5
 16339                           plusw1	equ	0xFE3
 16340                           fsr1h	equ	0xFE2
 16341                           fsr1l	equ	0xFE1
 16342                           indf2	equ	0xFDF
 16343                           postinc2	equ	0xFDE
 16344                           postdec2	equ	0xFDD
 16345                           plusw2	equ	0xFDB
 16346                           fsr2h	equ	0xFDA
 16347                           fsr2l	equ	0xFD9
 16348                           status	equ	0xFD8
 16349                           
 16350 ;; *************** function _timer0_init *****************
 16351 ;; Defined at:
 16352 ;;		line 925 in file "main.c"
 16353 ;; Parameters:    Size  Location     Type
 16354 ;;		None
 16355 ;; Auto vars:     Size  Location     Type
 16356 ;;		None
 16357 ;; Return value:  Size  Location     Type
 16358 ;;                  1    wreg      void 
 16359 ;; Registers used:
 16360 ;;		wreg, status,2
 16361 ;; Tracked objects:
 16362 ;;		On entry : 0/0
 16363 ;;		On exit  : 0/0
 16364 ;;		Unchanged: 0/0
 16365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16366 ;;      Params:         0       0       0       0       0       0       0
 16367 ;;      Locals:         0       0       0       0       0       0       0
 16368 ;;      Temps:          0       0       0       0       0       0       0
 16369 ;;      Totals:         0       0       0       0       0       0       0
 16370 ;;Total ram usage:        0 bytes
 16371 ;; Hardware stack levels used:    1
 16372 ;; This function calls:
 16373 ;;		Nothing
 16374 ;; This function is called by:
 16375 ;;		_rb0_isr
 16376 ;; This function uses a non-reentrant model
 16377 ;;
 16378                           
 16379                           	psect	text82
 16380  0042A6                     __ptext82:
 16381                           	opt stack 0
 16382  0042A6                     _timer0_init:
 16383                           	opt stack 23
 16384                           
 16385                           ;main.c: 928: TMR0 = 0XFF;
 16386                           
 16387                           ;incstack = 0
 16388  0042A6  0E00               	movlw	0
 16389  0042A8  6ED7               	movwf	4055,c	;volatile
 16390  0042AA  68D6               	setf	4054,c	;volatile
 16391                           
 16392                           ;main.c: 930: T0CONbits.T08BIT = 1;
 16393  0042AC  8CD5               	bsf	4053,6,c	;volatile
 16394                           
 16395                           ;main.c: 931: T0CONbits.T0CS = 1;
 16396  0042AE  8AD5               	bsf	4053,5,c	;volatile
 16397                           
 16398                           ;main.c: 932: T0CONbits.T0SE = 1;
 16399  0042B0  88D5               	bsf	4053,4,c	;volatile
 16400                           
 16401                           ;main.c: 933: T0CONbits.PSA = 1;
 16402  0042B2  86D5               	bsf	4053,3,c	;volatile
 16403                           
 16404                           ;main.c: 936: INTCONbits.TMR0IE = 1;
 16405  0042B4  8AF2               	bsf	intcon,5,c	;volatile
 16406                           
 16407                           ;main.c: 937: INTCONbits.TMR0IF = 0;
 16408  0042B6  94F2               	bcf	intcon,2,c	;volatile
 16409                           
 16410                           ;main.c: 940: T0CONbits.TMR0ON = 1;
 16411  0042B8  8ED5               	bsf	4053,7,c	;volatile
 16412  0042BA  0012               	return		;funcret
 16413  0042BC                     __end_of_timer0_init:
 16414                           	opt stack 0
 16415                           tosu	equ	0xFFF
 16416                           tosh	equ	0xFFE
 16417                           tosl	equ	0xFFD
 16418                           pclatu	equ	0xFFB
 16419                           pclath	equ	0xFFA
 16420                           tblptru	equ	0xFF8
 16421                           tblptrh	equ	0xFF7
 16422                           tblptrl	equ	0xFF6
 16423                           tablat	equ	0xFF5
 16424                           prodh	equ	0xFF4
 16425                           prodl	equ	0xFF3
 16426                           intcon	equ	0xFF2
 16427                           intcon2	equ	0xFF1
 16428                           indf0	equ	0xFEF
 16429                           postinc0	equ	0xFEE
 16430                           fsr0h	equ	0xFEA
 16431                           fsr0l	equ	0xFE9
 16432                           wreg	equ	0xFE8
 16433                           postdec1	equ	0xFE5
 16434                           plusw1	equ	0xFE3
 16435                           fsr1h	equ	0xFE2
 16436                           fsr1l	equ	0xFE1
 16437                           indf2	equ	0xFDF
 16438                           postinc2	equ	0xFDE
 16439                           postdec2	equ	0xFDD
 16440                           plusw2	equ	0xFDB
 16441                           fsr2h	equ	0xFDA
 16442                           fsr2l	equ	0xFD9
 16443                           status	equ	0xFD8
 16444                           
 16445 ;; *************** function _ra4_isr *****************
 16446 ;; Defined at:
 16447 ;;		line 668 in file "main.c"
 16448 ;; Parameters:    Size  Location     Type
 16449 ;;		None
 16450 ;; Auto vars:     Size  Location     Type
 16451 ;;		None
 16452 ;; Return value:  Size  Location     Type
 16453 ;;                  1    wreg      void 
 16454 ;; Registers used:
 16455 ;;		wreg, status,2, status,0, cstack
 16456 ;; Tracked objects:
 16457 ;;		On entry : 0/0
 16458 ;;		On exit  : 0/0
 16459 ;;		Unchanged: 0/0
 16460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16461 ;;      Params:         0       0       0       0       0       0       0
 16462 ;;      Locals:         0       0       0       0       0       0       0
 16463 ;;      Temps:          2       0       0       0       0       0       0
 16464 ;;      Totals:         2       0       0       0       0       0       0
 16465 ;;Total ram usage:        2 bytes
 16466 ;; Hardware stack levels used:    1
 16467 ;; Hardware stack levels required when called:    1
 16468 ;; This function calls:
 16469 ;;		___awmod
 16470 ;; This function is called by:
 16471 ;;		_ISR
 16472 ;; This function uses a non-reentrant model
 16473 ;;
 16474                           
 16475                           	psect	text83
 16476  0029E0                     __ptext83:
 16477                           	opt stack 0
 16478  0029E0                     _ra4_isr:
 16479                           	opt stack 23
 16480                           
 16481                           ;main.c: 671: TMR0 = 0XFF;
 16482                           
 16483                           ;incstack = 0
 16484  0029E0  0E00               	movlw	0
 16485  0029E2  6ED7               	movwf	4055,c	;volatile
 16486  0029E4  68D6               	setf	4054,c	;volatile
 16487                           
 16488                           ;main.c: 672: INTCONbits.TMR0IF = 0;
 16489  0029E6  94F2               	bcf	intcon,2,c	;volatile
 16490                           
 16491                           ;main.c: 675: countTINA=0;
 16492  0029E8  0E00               	movlw	0
 16493  0029EA  0100               	movlb	0	; () banked
 16494  0029EC  6FF6               	movwf	(_countTINA+1)& (0+255),b	;volatile
 16495  0029EE  0E00               	movlw	0
 16496  0029F0  6FF5               	movwf	_countTINA& (0+255),b	;volatile
 16497                           
 16498                           ;main.c: 678: pressedMode=1;
 16499  0029F2  0E00               	movlw	0
 16500  0029F4  0102               	movlb	2	; () banked
 16501  0029F6  6F92               	movwf	(_pressedMode+1)& (0+255),b	;volatile
 16502  0029F8  0E01               	movlw	1
 16503  0029FA  6F91               	movwf	_pressedMode& (0+255),b	;volatile
 16504                           
 16505                           ;main.c: 680: switch(status){
 16506  0029FC  D085               	goto	i2l6076
 16507  0029FE                     i2l6044:
 16508                           
 16509                           ; BSR set to: 2
 16510                           ;main.c: 682: displayHours++;
 16511  0029FE  0102               	movlb	2	; () banked
 16512  002A00  4BA9               	infsnz	_displayHours& (0+255),f,b	;volatile
 16513  002A02  2BAA               	incf	(_displayHours+1)& (0+255),f,b	;volatile
 16514                           
 16515                           ; BSR set to: 2
 16516                           ;main.c: 683: displayHours %= 24;
 16517  002A04  C2A9  F001         	movff	_displayHours,___awmod@dividend	;volatile
 16518  002A08  C2AA  F002         	movff	_displayHours+1,___awmod@dividend+1	;volatile
 16519  002A0C  0E00               	movlw	0
 16520  002A0E  6E04               	movwf	___awmod@divisor+1,c
 16521  002A10  0E18               	movlw	24
 16522  002A12  6E03               	movwf	___awmod@divisor,c
 16523  002A14  EC1C  F01D         	call	___awmod	;wreg free
 16524  002A18  C001  F2A9         	movff	?___awmod,_displayHours	;volatile
 16525  002A1C  C002  F2AA         	movff	?___awmod+1,_displayHours+1	;volatile
 16526                           
 16527                           ;main.c: 684: hours = displayHours;
 16528  002A20  C2A9  F236         	movff	_displayHours,_hours	;volatile
 16529  002A24  C2AA  F237         	movff	_displayHours+1,_hours+1	;volatile
 16530                           
 16531                           ;main.c: 685: break;
 16532  002A28  D090               	goto	i2l6078
 16533  002A2A                     i2l6050:
 16534                           
 16535                           ;main.c: 687: displayMinutes++;
 16536  002A2A  0102               	movlb	2	; () banked
 16537  002A2C  4BA7               	infsnz	_displayMinutes& (0+255),f,b	;volatile
 16538  002A2E  2BA8               	incf	(_displayMinutes+1)& (0+255),f,b	;volatile
 16539                           
 16540                           ; BSR set to: 2
 16541                           ;main.c: 688: displayMinutes %= 60;
 16542  002A30  C2A7  F001         	movff	_displayMinutes,___awmod@dividend	;volatile
 16543  002A34  C2A8  F002         	movff	_displayMinutes+1,___awmod@dividend+1	;volatile
 16544  002A38  0E00               	movlw	0
 16545  002A3A  6E04               	movwf	___awmod@divisor+1,c
 16546  002A3C  0E3C               	movlw	60
 16547  002A3E  6E03               	movwf	___awmod@divisor,c
 16548  002A40  EC1C  F01D         	call	___awmod	;wreg free
 16549  002A44  C001  F2A7         	movff	?___awmod,_displayMinutes	;volatile
 16550  002A48  C002  F2A8         	movff	?___awmod+1,_displayMinutes+1	;volatile
 16551                           
 16552                           ;main.c: 689: minutes = displayMinutes;
 16553  002A4C  C2A7  F234         	movff	_displayMinutes,_minutes	;volatile
 16554  002A50  C2A8  F235         	movff	_displayMinutes+1,_minutes+1	;volatile
 16555                           
 16556                           ;main.c: 690: break;
 16557  002A54  D07A               	goto	i2l6078
 16558  002A56                     i2l6056:
 16559                           
 16560                           ;main.c: 692: displaySeconds++;
 16561  002A56  0102               	movlb	2	; () banked
 16562  002A58  4BA5               	infsnz	_displaySeconds& (0+255),f,b	;volatile
 16563  002A5A  2BA6               	incf	(_displaySeconds+1)& (0+255),f,b	;volatile
 16564                           
 16565                           ; BSR set to: 2
 16566                           ;main.c: 693: displaySeconds %= 60;
 16567  002A5C  C2A5  F001         	movff	_displaySeconds,___awmod@dividend	;volatile
 16568  002A60  C2A6  F002         	movff	_displaySeconds+1,___awmod@dividend+1	;volatile
 16569  002A64  0E00               	movlw	0
 16570  002A66  6E04               	movwf	___awmod@divisor+1,c
 16571  002A68  0E3C               	movlw	60
 16572  002A6A  6E03               	movwf	___awmod@divisor,c
 16573  002A6C  EC1C  F01D         	call	___awmod	;wreg free
 16574  002A70  C001  F2A5         	movff	?___awmod,_displaySeconds	;volatile
 16575  002A74  C002  F2A6         	movff	?___awmod+1,_displaySeconds+1	;volatile
 16576                           
 16577                           ;main.c: 694: countClock = seconds = displaySeconds;
 16578  002A78  C2A5  F232         	movff	_displaySeconds,_seconds	;volatile
 16579  002A7C  C2A6  F233         	movff	_displaySeconds+1,_seconds+1	;volatile
 16580  002A80  C232  F1FA         	movff	_seconds,_countClock	;volatile
 16581  002A84  C233  F1FB         	movff	_seconds+1,_countClock+1	;volatile
 16582                           
 16583                           ;main.c: 695: break;
 16584  002A88  D060               	goto	i2l6078
 16585  002A8A                     i2l871:
 16586                           
 16587                           ; BSR set to: 2
 16588                           ;main.c: 697: displayTemperature = minTemperature;
 16589  002A8A  C22C  F29F         	movff	_minTemperature,_displayTemperature	;volatile
 16590  002A8E  C22D  F2A0         	movff	_minTemperature+1,_displayTemperature+1	;volatile
 16591                           
 16592                           ;main.c: 698: displayLuminosity = minLuminosity;
 16593  002A92  C22A  F29D         	movff	_minLuminosity,_displayLuminosity	;volatile
 16594  002A96  C22B  F29E         	movff	_minLuminosity+1,_displayLuminosity+1	;volatile
 16595                           
 16596                           ;main.c: 699: break;
 16597  002A9A  D057               	goto	i2l6078
 16598  002A9C                     i2l872:
 16599                           
 16600                           ; BSR set to: 2
 16601                           ;main.c: 701: displayTemperature = maxTemperature;
 16602  002A9C  C230  F29F         	movff	_maxTemperature,_displayTemperature	;volatile
 16603  002AA0  C231  F2A0         	movff	_maxTemperature+1,_displayTemperature+1	;volatile
 16604                           
 16605                           ;main.c: 702: displayLuminosity = maxLuminosity;
 16606  002AA4  C22E  F29D         	movff	_maxLuminosity,_displayLuminosity	;volatile
 16607  002AA8  C22F  F29E         	movff	_maxLuminosity+1,_displayLuminosity+1	;volatile
 16608                           
 16609                           ;main.c: 703: break;
 16610  002AAC  D04E               	goto	i2l6078
 16611  002AAE                     i2l6062:
 16612                           
 16613                           ; BSR set to: 2
 16614                           ;main.c: 705: ALAT++;
 16615  002AAE  0102               	movlb	2	; () banked
 16616  002AB0  4B3A               	infsnz	_ALAT& (0+255),f,b	;volatile
 16617  002AB2  2B3B               	incf	(_ALAT+1)& (0+255),f,b	;volatile
 16618                           
 16619                           ; BSR set to: 2
 16620                           ;main.c: 706: ALAT%=51;
 16621  002AB4  C23A  F001         	movff	_ALAT,___awmod@dividend	;volatile
 16622  002AB8  C23B  F002         	movff	_ALAT+1,___awmod@dividend+1	;volatile
 16623  002ABC  0E00               	movlw	0
 16624  002ABE  6E04               	movwf	___awmod@divisor+1,c
 16625  002AC0  0E33               	movlw	51
 16626  002AC2  6E03               	movwf	___awmod@divisor,c
 16627  002AC4  EC1C  F01D         	call	___awmod	;wreg free
 16628  002AC8  C001  F23A         	movff	?___awmod,_ALAT	;volatile
 16629  002ACC  C002  F23B         	movff	?___awmod+1,_ALAT+1	;volatile
 16630                           
 16631                           ;main.c: 707: break;
 16632  002AD0  D03C               	goto	i2l6078
 16633  002AD2                     i2l6066:
 16634                           
 16635                           ;main.c: 709: ALAL++;
 16636  002AD2  0102               	movlb	2	; () banked
 16637  002AD4  4B38               	infsnz	_ALAL& (0+255),f,b	;volatile
 16638  002AD6  2B39               	incf	(_ALAL+1)& (0+255),f,b	;volatile
 16639                           
 16640                           ; BSR set to: 2
 16641                           ;main.c: 710: ALAL%=6;
 16642  002AD8  C238  F001         	movff	_ALAL,___awmod@dividend	;volatile
 16643  002ADC  C239  F002         	movff	_ALAL+1,___awmod@dividend+1	;volatile
 16644  002AE0  0E00               	movlw	0
 16645  002AE2  6E04               	movwf	___awmod@divisor+1,c
 16646  002AE4  0E06               	movlw	6
 16647  002AE6  6E03               	movwf	___awmod@divisor,c
 16648  002AE8  EC1C  F01D         	call	___awmod	;wreg free
 16649  002AEC  C001  F238         	movff	?___awmod,_ALAL	;volatile
 16650  002AF0  C002  F239         	movff	?___awmod+1,_ALAL+1	;volatile
 16651                           
 16652                           ;main.c: 711: break;
 16653  002AF4  D02A               	goto	i2l6078
 16654  002AF6                     i2l6070:
 16655                           
 16656                           ;main.c: 713: ALAF++;
 16657  002AF6  0102               	movlb	2	; () banked
 16658  002AF8  4BAB               	infsnz	_ALAF& (0+255),f,b	;volatile
 16659  002AFA  2BAC               	incf	(_ALAF+1)& (0+255),f,b	;volatile
 16660                           
 16661                           ; BSR set to: 2
 16662                           ;main.c: 714: ALAF%=2;
 16663  002AFC  0E01               	movlw	1
 16664  002AFE  0102               	movlb	2	; () banked
 16665  002B00  17AB               	andwf	_ALAF& (0+255),f,b	;volatile
 16666  002B02  0E00               	movlw	0
 16667  002B04  17AC               	andwf	(_ALAF+1)& (0+255),f,b	;volatile
 16668                           
 16669                           ; BSR set to: 2
 16670                           ;main.c: 718: }
 16671                           
 16672                           ; BSR set to: 2
 16673                           ;main.c: 717: break;
 16674                           
 16675                           ;main.c: 716: default:
 16676                           
 16677                           ;main.c: 715: break;
 16678  002B06  D021               	goto	i2l6078
 16679  002B08                     i2l6076:
 16680                           
 16681                           ; BSR set to: 2
 16682  002B08  C228  F007         	movff	_status,??_ra4_isr	;volatile
 16683  002B0C  C229  F008         	movff	_status+1,??_ra4_isr+1	;volatile
 16684                           
 16685                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16686                           ; Switch size 1, requested type "space"
 16687                           ; Number of cases is 1, Range of values is 0 to 0
 16688                           ; switch strategies available:
 16689                           ; Name         Instructions Cycles
 16690                           ; simple_byte            4     3 (average)
 16691                           ;	Chosen strategy is simple_byte
 16692  002B10  5008               	movf	??_ra4_isr+1,w,c
 16693  002B12  0A00               	xorlw	0	; case 0
 16694  002B14  A4D8               	btfss	status,2,c
 16695  002B16  D019               	goto	i2l6078
 16696                           
 16697                           ; BSR set to: 2
 16698                           ; Switch size 1, requested type "space"
 16699                           ; Number of cases is 8, Range of values is 0 to 7
 16700                           ; switch strategies available:
 16701                           ; Name         Instructions Cycles
 16702                           ; simple_byte           25    13 (average)
 16703                           ;	Chosen strategy is simple_byte
 16704  002B18  5007               	movf	??_ra4_isr,w,c
 16705  002B1A  0A00               	xorlw	0	; case 0
 16706  002B1C  B4D8               	btfsc	status,2,c
 16707  002B1E  D76F               	goto	i2l6044
 16708  002B20  0A01               	xorlw	1	; case 1
 16709  002B22  B4D8               	btfsc	status,2,c
 16710  002B24  D782               	goto	i2l6050
 16711  002B26  0A03               	xorlw	3	; case 2
 16712  002B28  B4D8               	btfsc	status,2,c
 16713  002B2A  D795               	goto	i2l6056
 16714  002B2C  0A01               	xorlw	1	; case 3
 16715  002B2E  B4D8               	btfsc	status,2,c
 16716  002B30  D7AC               	goto	i2l871
 16717  002B32  0A07               	xorlw	7	; case 4
 16718  002B34  B4D8               	btfsc	status,2,c
 16719  002B36  D7B2               	goto	i2l872
 16720  002B38  0A01               	xorlw	1	; case 5
 16721  002B3A  B4D8               	btfsc	status,2,c
 16722  002B3C  D7B8               	goto	i2l6062
 16723  002B3E  0A03               	xorlw	3	; case 6
 16724  002B40  B4D8               	btfsc	status,2,c
 16725  002B42  D7C7               	goto	i2l6066
 16726  002B44  0A01               	xorlw	1	; case 7
 16727  002B46  B4D8               	btfsc	status,2,c
 16728  002B48  D7D6               	goto	i2l6070
 16729  002B4A                     i2l6078:
 16730                           
 16731                           ;main.c: 721: updateDisplay = 1;
 16732  002B4A  0E00               	movlw	0
 16733  002B4C  0102               	movlb	2	; () banked
 16734  002B4E  6F98               	movwf	(_updateDisplay+1)& (0+255),b	;volatile
 16735  002B50  0E01               	movlw	1
 16736  002B52  6F97               	movwf	_updateDisplay& (0+255),b	;volatile
 16737                           
 16738                           ; BSR set to: 2
 16739  002B54  0012               	return		;funcret
 16740  002B56                     __end_of_ra4_isr:
 16741                           	opt stack 0
 16742                           tosu	equ	0xFFF
 16743                           tosh	equ	0xFFE
 16744                           tosl	equ	0xFFD
 16745                           pclatu	equ	0xFFB
 16746                           pclath	equ	0xFFA
 16747                           tblptru	equ	0xFF8
 16748                           tblptrh	equ	0xFF7
 16749                           tblptrl	equ	0xFF6
 16750                           tablat	equ	0xFF5
 16751                           prodh	equ	0xFF4
 16752                           prodl	equ	0xFF3
 16753                           intcon	equ	0xFF2
 16754                           intcon2	equ	0xFF1
 16755                           indf0	equ	0xFEF
 16756                           postinc0	equ	0xFEE
 16757                           fsr0h	equ	0xFEA
 16758                           fsr0l	equ	0xFE9
 16759                           wreg	equ	0xFE8
 16760                           postdec1	equ	0xFE5
 16761                           plusw1	equ	0xFE3
 16762                           fsr1h	equ	0xFE2
 16763                           fsr1l	equ	0xFE1
 16764                           indf2	equ	0xFDF
 16765                           postinc2	equ	0xFDE
 16766                           postdec2	equ	0xFDD
 16767                           plusw2	equ	0xFDB
 16768                           fsr2h	equ	0xFDA
 16769                           fsr2l	equ	0xFD9
 16770                           status	equ	0xFD8
 16771                           
 16772 ;; *************** function ___awmod *****************
 16773 ;; Defined at:
 16774 ;;		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/awmod.c"
 16775 ;; Parameters:    Size  Location     Type
 16776 ;;  dividend        2    0[COMRAM] int 
 16777 ;;  divisor         2    2[COMRAM] int 
 16778 ;; Auto vars:     Size  Location     Type
 16779 ;;  sign            1    5[COMRAM] unsigned char 
 16780 ;;  counter         1    4[COMRAM] unsigned char 
 16781 ;; Return value:  Size  Location     Type
 16782 ;;                  2    0[COMRAM] int 
 16783 ;; Registers used:
 16784 ;;		wreg, status,2, status,0
 16785 ;; Tracked objects:
 16786 ;;		On entry : 0/0
 16787 ;;		On exit  : 0/0
 16788 ;;		Unchanged: 0/0
 16789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16790 ;;      Params:         4       0       0       0       0       0       0
 16791 ;;      Locals:         2       0       0       0       0       0       0
 16792 ;;      Temps:          0       0       0       0       0       0       0
 16793 ;;      Totals:         6       0       0       0       0       0       0
 16794 ;;Total ram usage:        6 bytes
 16795 ;; Hardware stack levels used:    1
 16796 ;; This function calls:
 16797 ;;		Nothing
 16798 ;; This function is called by:
 16799 ;;		_ra4_isr
 16800 ;; This function uses a non-reentrant model
 16801 ;;
 16802                           
 16803                           	psect	text84
 16804  003A38                     __ptext84:
 16805                           	opt stack 0
 16806  003A38                     ___awmod:
 16807                           	opt stack 23
 16808                           
 16809                           ; BSR set to: 2
 16810                           ;incstack = 0
 16811  003A38  0E00               	movlw	0
 16812  003A3A  6E06               	movwf	___awmod@sign,c
 16813  003A3C  AE02               	btfss	___awmod@dividend+1,7,c
 16814  003A3E  D006               	goto	i2l5504
 16815  003A40  6C01               	negf	___awmod@dividend,c
 16816  003A42  1E02               	comf	___awmod@dividend+1,f,c
 16817  003A44  B0D8               	btfsc	status,0,c
 16818  003A46  2A02               	incf	___awmod@dividend+1,f,c
 16819  003A48  0E01               	movlw	1
 16820  003A4A  6E06               	movwf	___awmod@sign,c
 16821  003A4C                     i2l5504:
 16822  003A4C  AE04               	btfss	___awmod@divisor+1,7,c
 16823  003A4E  D004               	goto	i2l5508
 16824  003A50  6C03               	negf	___awmod@divisor,c
 16825  003A52  1E04               	comf	___awmod@divisor+1,f,c
 16826  003A54  B0D8               	btfsc	status,0,c
 16827  003A56  2A04               	incf	___awmod@divisor+1,f,c
 16828  003A58                     i2l5508:
 16829  003A58  5003               	movf	___awmod@divisor,w,c
 16830  003A5A  1004               	iorwf	___awmod@divisor+1,w,c
 16831  003A5C  B4D8               	btfsc	status,2,c
 16832  003A5E  D018               	goto	i2l5524
 16833  003A60  0E01               	movlw	1
 16834  003A62  6E05               	movwf	___awmod@counter,c
 16835  003A64  D004               	goto	i2l5514
 16836  003A66                     i2l5512:
 16837  003A66  90D8               	bcf	status,0,c
 16838  003A68  3603               	rlcf	___awmod@divisor,f,c
 16839  003A6A  3604               	rlcf	___awmod@divisor+1,f,c
 16840  003A6C  2A05               	incf	___awmod@counter,f,c
 16841  003A6E                     i2l5514:
 16842  003A6E  AE04               	btfss	___awmod@divisor+1,7,c
 16843  003A70  D7FA               	goto	i2l5512
 16844  003A72                     i2l5516:
 16845  003A72  5003               	movf	___awmod@divisor,w,c
 16846  003A74  5C01               	subwf	___awmod@dividend,w,c
 16847  003A76  5004               	movf	___awmod@divisor+1,w,c
 16848  003A78  5802               	subwfb	___awmod@dividend+1,w,c
 16849  003A7A  A0D8               	btfss	status,0,c
 16850  003A7C  D004               	goto	i2l5520
 16851  003A7E  5003               	movf	___awmod@divisor,w,c
 16852  003A80  5E01               	subwf	___awmod@dividend,f,c
 16853  003A82  5004               	movf	___awmod@divisor+1,w,c
 16854  003A84  5A02               	subwfb	___awmod@dividend+1,f,c
 16855  003A86                     i2l5520:
 16856  003A86  90D8               	bcf	status,0,c
 16857  003A88  3204               	rrcf	___awmod@divisor+1,f,c
 16858  003A8A  3203               	rrcf	___awmod@divisor,f,c
 16859  003A8C  2E05               	decfsz	___awmod@counter,f,c
 16860  003A8E  D7F1               	goto	i2l5516
 16861  003A90                     i2l5524:
 16862  003A90  5006               	movf	___awmod@sign,w,c
 16863  003A92  B4D8               	btfsc	status,2,c
 16864  003A94  D004               	goto	i2l5528
 16865  003A96  6C01               	negf	___awmod@dividend,c
 16866  003A98  1E02               	comf	___awmod@dividend+1,f,c
 16867  003A9A  B0D8               	btfsc	status,0,c
 16868  003A9C  2A02               	incf	___awmod@dividend+1,f,c
 16869  003A9E                     i2l5528:
 16870  003A9E  C001  F001         	movff	___awmod@dividend,?___awmod
 16871  003AA2  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 16872  003AA6  0012               	return	
 16873  003AA8                     __end_of___awmod:
 16874                           	opt stack 0
 16875                           tosu	equ	0xFFF
 16876                           tosh	equ	0xFFE
 16877                           tosl	equ	0xFFD
 16878                           pclatu	equ	0xFFB
 16879                           pclath	equ	0xFFA
 16880                           tblptru	equ	0xFF8
 16881                           tblptrh	equ	0xFF7
 16882                           tblptrl	equ	0xFF6
 16883                           tablat	equ	0xFF5
 16884                           prodh	equ	0xFF4
 16885                           prodl	equ	0xFF3
 16886                           intcon	equ	0xFF2
 16887                           intcon2	equ	0xFF1
 16888                           indf0	equ	0xFEF
 16889                           postinc0	equ	0xFEE
 16890                           fsr0h	equ	0xFEA
 16891                           fsr0l	equ	0xFE9
 16892                           wreg	equ	0xFE8
 16893                           postdec1	equ	0xFE5
 16894                           plusw1	equ	0xFE3
 16895                           fsr1h	equ	0xFE2
 16896                           fsr1l	equ	0xFE1
 16897                           indf2	equ	0xFDF
 16898                           postinc2	equ	0xFDE
 16899                           postdec2	equ	0xFDD
 16900                           plusw2	equ	0xFDB
 16901                           fsr2h	equ	0xFDA
 16902                           fsr2l	equ	0xFD9
 16903                           status	equ	0xFD8
 16904                           tosu	equ	0xFFF
 16905                           tosh	equ	0xFFE
 16906                           tosl	equ	0xFFD
 16907                           pclatu	equ	0xFFB
 16908                           pclath	equ	0xFFA
 16909                           tblptru	equ	0xFF8
 16910                           tblptrh	equ	0xFF7
 16911                           tblptrl	equ	0xFF6
 16912                           tablat	equ	0xFF5
 16913                           prodh	equ	0xFF4
 16914                           prodl	equ	0xFF3
 16915                           intcon	equ	0xFF2
 16916                           intcon2	equ	0xFF1
 16917                           indf0	equ	0xFEF
 16918                           postinc0	equ	0xFEE
 16919                           fsr0h	equ	0xFEA
 16920                           fsr0l	equ	0xFE9
 16921                           wreg	equ	0xFE8
 16922                           postdec1	equ	0xFE5
 16923                           plusw1	equ	0xFE3
 16924                           fsr1h	equ	0xFE2
 16925                           fsr1l	equ	0xFE1
 16926                           indf2	equ	0xFDF
 16927                           postinc2	equ	0xFDE
 16928                           postdec2	equ	0xFDD
 16929                           plusw2	equ	0xFDB
 16930                           fsr2h	equ	0xFDA
 16931                           fsr2l	equ	0xFD9
 16932                           status	equ	0xFD8
 16933                           
 16934                           	psect	text85
 16935  000000                     __ptext85:
 16936                           	opt stack 0
 16937                           tosu	equ	0xFFF
 16938                           tosh	equ	0xFFE
 16939                           tosl	equ	0xFFD
 16940                           pclatu	equ	0xFFB
 16941                           pclath	equ	0xFFA
 16942                           tblptru	equ	0xFF8
 16943                           tblptrh	equ	0xFF7
 16944                           tblptrl	equ	0xFF6
 16945                           tablat	equ	0xFF5
 16946                           prodh	equ	0xFF4
 16947                           prodl	equ	0xFF3
 16948                           intcon	equ	0xFF2
 16949                           intcon2	equ	0xFF1
 16950                           indf0	equ	0xFEF
 16951                           postinc0	equ	0xFEE
 16952                           fsr0h	equ	0xFEA
 16953                           fsr0l	equ	0xFE9
 16954                           wreg	equ	0xFE8
 16955                           postdec1	equ	0xFE5
 16956                           plusw1	equ	0xFE3
 16957                           fsr1h	equ	0xFE2
 16958                           fsr1l	equ	0xFE1
 16959                           indf2	equ	0xFDF
 16960                           postinc2	equ	0xFDE
 16961                           postdec2	equ	0xFDD
 16962                           plusw2	equ	0xFDB
 16963                           fsr2h	equ	0xFDA
 16964                           fsr2l	equ	0xFD9
 16965                           status	equ	0xFD8
 16966                           
 16967                           	psect	rparam
 16968  0000                     tosu	equ	0xFFF
 16969                           tosh	equ	0xFFE
 16970                           tosl	equ	0xFFD
 16971                           pclatu	equ	0xFFB
 16972                           pclath	equ	0xFFA
 16973                           tblptru	equ	0xFF8
 16974                           tblptrh	equ	0xFF7
 16975                           tblptrl	equ	0xFF6
 16976                           tablat	equ	0xFF5
 16977                           prodh	equ	0xFF4
 16978                           prodl	equ	0xFF3
 16979                           intcon	equ	0xFF2
 16980                           intcon2	equ	0xFF1
 16981                           indf0	equ	0xFEF
 16982                           postinc0	equ	0xFEE
 16983                           fsr0h	equ	0xFEA
 16984                           fsr0l	equ	0xFE9
 16985                           wreg	equ	0xFE8
 16986                           postdec1	equ	0xFE5
 16987                           plusw1	equ	0xFE3
 16988                           fsr1h	equ	0xFE2
 16989                           fsr1l	equ	0xFE1
 16990                           indf2	equ	0xFDF
 16991                           postinc2	equ	0xFDE
 16992                           postdec2	equ	0xFDD
 16993                           plusw2	equ	0xFDB
 16994                           fsr2h	equ	0xFDA
 16995                           fsr2l	equ	0xFD9
 16996                           status	equ	0xFD8
 16997                           
 16998                           	psect	temp
 16999  00007F                     btemp:
 17000                           	opt stack 0
 17001  00007F                     	ds	1
 17002  0000                     int$flags	set	btemp
 17003                           tosu	equ	0xFFF
 17004                           tosh	equ	0xFFE
 17005                           tosl	equ	0xFFD
 17006                           pclatu	equ	0xFFB
 17007                           pclath	equ	0xFFA
 17008                           tblptru	equ	0xFF8
 17009                           tblptrh	equ	0xFF7
 17010                           tblptrl	equ	0xFF6
 17011                           tablat	equ	0xFF5
 17012                           prodh	equ	0xFF4
 17013                           prodl	equ	0xFF3
 17014                           intcon	equ	0xFF2
 17015                           intcon2	equ	0xFF1
 17016                           indf0	equ	0xFEF
 17017                           postinc0	equ	0xFEE
 17018                           fsr0h	equ	0xFEA
 17019                           fsr0l	equ	0xFE9
 17020                           wreg	equ	0xFE8
 17021                           postdec1	equ	0xFE5
 17022                           plusw1	equ	0xFE3
 17023                           fsr1h	equ	0xFE2
 17024                           fsr1l	equ	0xFE1
 17025                           indf2	equ	0xFDF
 17026                           postinc2	equ	0xFDE
 17027                           postdec2	equ	0xFDD
 17028                           plusw2	equ	0xFDB
 17029                           fsr2h	equ	0xFDA
 17030                           fsr2l	equ	0xFD9
 17031                           status	equ	0xFD8


Data Sizes:
    Strings     181
    Constant    10
    Data        94
    BSS         71
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    122     126
    BANK0           128     85     122
    BANK1           256    248     256
    BANK2           256     57     173
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 248
		 -> reply_message_serial_com@str(BANK1[248]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 248
		 -> reply_message_serial_com@str(BANK1[248]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 69
		 -> STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[3]), 
		 -> STR_38(CODE[3]), STR_37(CODE[4]), STR_36(CODE[3]), STR_35(CODE[4]), 
		 -> STR_34(CODE[3]), STR_33(CODE[4]), STR_23(CODE[3]), STR_22(CODE[4]), 
		 -> STR_19(CODE[3]), STR_18(CODE[4]), STR_15(CODE[3]), STR_14(CODE[4]), 
		 -> STR_12(CODE[24]), STR_11(CODE[69]), STR_10(CODE[24]), STR_9(CODE[12]), 
		 -> STR_8(CODE[12]), STR_7(CODE[18]), STR_6(CODE[12]), STR_5(CODE[12]), 
		 -> STR_4(CODE[18]), STR_3(CODE[15]), STR_2(CODE[12]), STR_1(CODE[18]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_sprintf(COMRAM[2]), ?_sprintf(BANK2[2]), ?_printf(COMRAM[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 248
		 -> displayInterface@tmp(BANK2[3]), reply_message_serial_com@str(BANK1[248]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 248
		 -> NULL(NULL[0]), displayInterface@tmp(BANK2[3]), reply_message_serial_com@str(BANK1[248]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_57(CODE[36]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK2[2]), ?_printf(COMRAM[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> i2_putch(), putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 248
		 -> NULL(NULL[0]), displayInterface@tmp(BANK2[3]), reply_message_serial_com@str(BANK1[248]), 

    memset@p1	PTR void  size(2) Largest target is 16
		 -> syn_serial_commun_isr@request_message(BANK0[16]), 

    memset@p	PTR unsigned char  size(2) Largest target is 16
		 -> syn_serial_commun_isr@request_message(BANK0[16]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(COMRAM[2]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> syn_serial_commun_isr@request_message(BANK0[16]), 

    _fassert@exp	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_55(CODE[5]), STR_53(CODE[11]), STR_51(CODE[5]), STR_49(CODE[11]), 
		 -> STR_47(CODE[11]), 

    _fassert@file	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_54(CODE[7]), STR_52(CODE[7]), STR_50(CODE[7]), STR_48(CODE[7]), 
		 -> STR_46(CODE[7]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 69
		 -> STR_57(CODE[36]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[3]), STR_38(CODE[3]), STR_37(CODE[4]), STR_36(CODE[3]), 
		 -> STR_35(CODE[4]), STR_34(CODE[3]), STR_33(CODE[4]), STR_23(CODE[3]), 
		 -> STR_22(CODE[4]), STR_19(CODE[3]), STR_18(CODE[4]), STR_15(CODE[3]), 
		 -> STR_14(CODE[4]), STR_12(CODE[24]), STR_11(CODE[69]), STR_10(CODE[24]), 
		 -> STR_9(CODE[12]), STR_8(CODE[12]), STR_7(CODE[18]), STR_6(CODE[12]), 
		 -> STR_5(CODE[12]), STR_4(CODE[18]), STR_3(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[18]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK2[2]), printf@ap(COMRAM[2]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK2[2]), ?_printf(COMRAM[2]), NULL(NULL[0]), STR_56(CODE[7]), 
		 -> STR_55(CODE[5]), STR_54(CODE[7]), STR_53(CODE[11]), STR_52(CODE[7]), 
		 -> STR_51(CODE[5]), STR_50(CODE[7]), STR_49(CODE[11]), STR_48(CODE[7]), 
		 -> STR_47(CODE[11]), STR_46(CODE[7]), displayInterface@tmp(BANK2[3]), reply_message_serial_com@str(BANK1[248]), 

    S2002__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    S2002__prbuf$ptr	PTR unsigned char  size(2) Largest target is 248
		 -> NULL(NULL[0]), displayInterface@tmp(BANK2[3]), reply_message_serial_com@str(BANK1[248]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 248
		 -> NULL(NULL[0]), displayInterface@tmp(BANK2[3]), reply_message_serial_com@str(BANK1[248]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 5
		 -> sprintf@pb(BANK2[4]), printf@pb(COMRAM[4]), 

    syn_serial_commun_isr@reply_message	PTR unsigned char  size(2) Largest target is 248
		 -> reply_message_serial_com@str(BANK1[248]), 

    sp__memset	PTR void  size(2) Largest target is 16
		 -> syn_serial_commun_isr@request_message(BANK0[16]), 

    assync_serial_commun@reply_message	PTR unsigned char  size(2) Largest target is 248
		 -> reply_message_serial_com@str(BANK1[248]), 

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 3
		 -> displayInterface@tmp(BANK2[3]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_40(CODE[2]), STR_39(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), 
		 -> STR_29(CODE[2]), STR_28(CODE[2]), STR_27(CODE[2]), STR_26(CODE[2]), 
		 -> STR_25(CODE[3]), STR_24(CODE[3]), STR_20(CODE[2]), STR_16(CODE[2]), 

    sp__reply_message_serial_com	PTR unsigned char  size(2) Largest target is 248
		 -> reply_message_serial_com@str(BANK1[248]), 

    reply_message_serial_com@data	PTR int  size(2) Largest target is 40
		 -> syn_serial_commun_isr@reply_data(BANK0[40]), assync_serial_commun@reply_data(COMRAM[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_timer1_isr
    _timer1_isr->_assync_serial_commun
    _getTemperature->i2_WriteI2C
    _getLuminosity->_floor
    _floor->___altoft
    ___ftadd->___ftpack
    ___altoft->___fttol
    ___awtoft->___awdiv
    ___awtoft->___ftpack
    _assync_serial_commun->_reply_message_serial_com
    _syn_serial_commun_isr->_reply_message_serial_com
    i2_readEEEPROM->i2_WriteI2C
    _reply_message_serial_com->i2_sprintf
    i2_sprintf->i2__doprnt
    _atoi->i2___wmul
    __fassert->_printf
    _printf->i2__doprnt
    i2__doprnt->i2___lwmod
    i2___lwmod->i2___lwdiv
    _ra4_isr->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_syn_serial_commun_isr

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    _assync_serial_commun->_reply_message_serial_com
    _syn_serial_commun_isr->_reply_message_serial_com

Critical Paths under _main in BANK2

    _main->_displayInterface
    _writeEEEPROM->___wmul
    _meteo_init_EEEPROM->_readEEEPROM
    _readEEEPROM->_WriteI2C
    _displayInterface->_sprintf
    _sprintf->__doprnt
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _putsXLCD->_WriteDataXLCD
    _putrsXLCD->_WriteDataXLCD
    _USART_init->_OpenUSART
    _TC74_init->_OpenI2C
    _LCD_init->_OpenXLCD
    _DelayXLCD->_Delay1KTCYx
    _DelayPORXLCD->_Delay1KTCYx
    _Delay1KTCYx->___lmul

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   19965
                                             48 BANK2      9     9      0
                           _BusyXLCD
                _DelayExternalEEPROM
                           _LCD_init
                           _RA4_init
                           _RBO_init
                          _TC74_init
                         _USART_init
                       _WriteCmdXLCD
                             ___wmul
                        _buzzer_init
                   _displayInterface
                        _global_init
                 _meteo_init_EEEPROM
                        _readEEEPROM
                        _timer1_init
                       _writeEEEPROM
                       _writeIEEPROM
 ---------------------------------------------------------------------------------
 (1) _writeIEEPROM                                         3     2      1     579
                                              0 BANK2      3     2      1
 ---------------------------------------------------------------------------------
 (1) _writeEEEPROM                                         4     2      2     216
                                              6 BANK2      4     2      2
                           _WriteI2C
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _timer1_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _meteo_init_EEEPROM                                   7     7      0     724
                                              6 BANK2      7     7      0
                        _readEEEPROM
 ---------------------------------------------------------------------------------
 (1) _readEEEPROM                                          4     3      1     255
                                              2 BANK2      4     3      1
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      22
                                              0 BANK2      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _global_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _displayInterface                                     9     5      4   15084
                                             39 BANK2      9     5      4
                           _BusyXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
                          _putrsXLCD
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             12     6      6   10775
                                             27 BANK2     12     6      6
                            __doprnt
 ---------------------------------------------------------------------------------
 (3) __doprnt                                             21    15      6    4133
                                             12 BANK2     15     9      6
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     287
                                              7 BANK2      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     290
                                              0 BANK2      7     3      4
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _putsXLCD                                             2     0      2     409
                                              1 BANK2      2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _putrsXLCD                                            2     0      2     857
                                              1 BANK2      2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (3) _WriteDataXLCD                                        1     1      0      44
                                              0 BANK2      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _buzzer_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     821
                                              0 BANK2      6     2      4
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           0     0      0     284
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                              0 BANK2      3     1      2
 ---------------------------------------------------------------------------------
 (1) _TC74_init                                            0     0      0     108
                            _OpenI2C
 ---------------------------------------------------------------------------------
 (2) _OpenI2C                                              2     1      1     108
                                              0 BANK2      2     1      1
 ---------------------------------------------------------------------------------
 (1) _RBO_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RA4_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0    1054
                           _OpenXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0    1054
                                             20 BANK2      1     1      0
                           _BusyXLCD
                      _DelayFor18TCY
                       _DelayPORXLCD
                          _DelayXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      44
                                              0 BANK2      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _SetDDRamAddr                                         4     4      0      44
                                              0 BANK2      4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayXLCD                                            0     0      0     472
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         0     0      0     472
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay1KTCYx                                          8     4      4     472
                                             12 BANK2      8     4      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     322
                                              0 BANK2     12     4      8
 ---------------------------------------------------------------------------------
 (3) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _DelayExternalEEPROM                                  2     2      0      46
                                              0 BANK2      2     2      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (4) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                 14    14      0   52190
                                            108 COMRAM    14    14      0
                            _ra4_isr
                            _rb0_isr
              _syn_serial_commun_isr
                         _timer1_isr
 ---------------------------------------------------------------------------------
 (7) _timer1_isr                                           4     4      0   24385
                                            104 COMRAM     4     4      0
                          _OffBuffer
                           _OnBuffer
               _assync_serial_commun
                      _getLuminosity
                     _getTemperature
                           i2___wmul
 ---------------------------------------------------------------------------------
 (8) _getTemperature                                       2     2      0      68
                                              2 COMRAM     2     2      0
                          i2_ReadI2C
                         i2_WriteI2C
 ---------------------------------------------------------------------------------
 (8) _getLuminosity                                       12    10      2   10185
                                             33 COMRAM    12    10      2
                            _BusyADC
                           _CloseADC
                         _ConvertADC
                        _Delay10TCYx
                            _OpenADC
                            _ReadADC
                            ___awdiv
                           ___awtoft
                            ___fttol
                              _floor
 ---------------------------------------------------------------------------------
 (9) _floor                                                8     5      3    6731
                                             25 COMRAM     8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (10) _frexp                                               7     2      5     336
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (10) ___fttol                                            15    11      4     380
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (10) ___ftge                                              9     3      6     264
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (10) ___ftadd                                            12     6      6    3203
                                              8 COMRAM    12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (10) ___altoft                                           10     6      4    2233
                                             15 COMRAM    10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (9) ___awtoft                                             4     1      3    2186
                                              8 COMRAM     4     1      3
                            ___awdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (11) ___ftpack                                            8     3      5    2031
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              8     4      4     428
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (9) _ReadADC                                              4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _OpenADC                                              5     3      2     282
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (9) _Delay10TCYx                                          4     0      4      86
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (9) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _CloseADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _assync_serial_commun                                15    15      0   12781
                                             89 COMRAM    15    15      0
                         _WriteUSART
           _reply_message_serial_com
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _OnBuffer                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _OffBuffer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _syn_serial_commun_isr                               87    87      0   26869
                                             89 COMRAM     2     2      0
                                              0 BANK0     85    85      0
                          _ReadUSART
                         _WriteUSART
                           __fassert
                               _atoi
                             _memset
           _reply_message_serial_com
                             _strlen
              i2_DelayExternalEEPROM
                           i2___wmul
                      i2_readEEEPROM
 ---------------------------------------------------------------------------------
 (8) i2_readEEEPROM                                        4     3      1     115
                                              2 COMRAM     4     3      1
                          i2_ReadI2C
                         i2_WriteI2C
 ---------------------------------------------------------------------------------
 (9) i2_WriteI2C                                           2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (9) i2_ReadI2C                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i2_DelayExternalEEPROM                                2     2      0      46
                                              0 COMRAM     2     2      0
                    i2_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (9) i2_DelayFor18TCY                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _strlen                                               6     4      2     218
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (9) _reply_message_serial_com                           254   250      4   10946
                                             83 COMRAM     6     2      4
                                              0 BANK1    248   248      0
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (10) i2_sprintf                                          56     6     50    6125
                                             27 COMRAM    56     6     50
                          i2__doprnt
 ---------------------------------------------------------------------------------
 (8) _memset                                               8     2      6     288
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (8) _atoi                                                 7     5      2     881
                                              6 COMRAM     7     5      2
                            _isdigit
                           i2___wmul
 ---------------------------------------------------------------------------------
 (8) i2___wmul                                             6     2      4     521
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (8) __fassert                                             6     0      6    7197
                                             41 COMRAM     6     0      6
                             _printf
 ---------------------------------------------------------------------------------
 (9) _printf                                              14     6      8    5067
                                             27 COMRAM    14     6      8
                          i2__doprnt
 ---------------------------------------------------------------------------------
 (11) i2__doprnt                                          21    15      6    3879
                                             12 COMRAM    15     9      6
                   Absolute function *
                          i2___lwdiv
                          i2___lwmod
                            i2_putch *
 ---------------------------------------------------------------------------------
 (12) i2_putch                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (12) i2___lwmod                                           5     1      4     211
                                              7 COMRAM     5     1      4
                          i2___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (12) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _WriteUSART                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _rb0_isr                                              0     0      0       0
                        _timer0_init
                       _timer0_reset
 ---------------------------------------------------------------------------------
 (8) _timer0_reset                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ra4_isr                                              2     2      0     936
                                              6 COMRAM     2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     936
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyXLCD
     _DelayFor18TCY
   _DelayExternalEEPROM
     _DelayFor18TCY
   _LCD_init
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
       _DelayFor18TCY
       _DelayPORXLCD
         _Delay1KTCYx
           ___lmul
       _DelayXLCD
         _Delay1KTCYx
           ___lmul
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
   _RA4_init
   _RBO_init
   _TC74_init
     _OpenI2C
   _USART_init
     _OpenUSART
   _WriteCmdXLCD
     _DelayFor18TCY
   ___wmul
   _buzzer_init
   _displayInterface
     _BusyXLCD
       _DelayFor18TCY
     _SetDDRamAddr
       _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
     _putrsXLCD
       _BusyXLCD
         _DelayFor18TCY
       _WriteDataXLCD
         _DelayFor18TCY
     _putsXLCD
       _BusyXLCD
         _DelayFor18TCY
       _WriteDataXLCD
         _DelayFor18TCY
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _global_init
   _meteo_init_EEEPROM
     _readEEEPROM
       _ReadI2C
       _WriteI2C
   _readEEEPROM
     _ReadI2C
     _WriteI2C
   _timer1_init
   _writeEEEPROM
     _WriteI2C
     ___wmul (ARG)
   _writeIEEPROM

 _ISR (ROOT)
   _ra4_isr
     ___awmod
   _rb0_isr
     _timer0_init
     _timer0_reset
   _syn_serial_commun_isr
     _ReadUSART
     _WriteUSART
     __fassert
       _printf
         i2__doprnt
           Absolute function(Fake) *
           i2___lwdiv *
           i2___lwmod *
             i2___lwdiv (ARG)
           i2_putch *
     _atoi
       _isdigit
       i2___wmul
     _memset
     _reply_message_serial_com
       i2_sprintf
         i2__doprnt
           Absolute function(Fake) *
           i2___lwdiv *
           i2___lwmod *
             i2___lwdiv (ARG)
           i2_putch *
     _strlen
     i2_DelayExternalEEPROM
       i2_DelayFor18TCY
     i2___wmul
     i2_readEEEPROM
       i2_ReadI2C
       i2_WriteI2C
   _timer1_isr
     _OffBuffer
     _OnBuffer
     _assync_serial_commun
       _WriteUSART
       _reply_message_serial_com
         i2_sprintf
           i2__doprnt
             Absolute function(Fake) *
             i2___lwdiv *
             i2___lwmod *
               i2___lwdiv (ARG)
             i2_putch *
       _strlen
     _getLuminosity
       _BusyADC
       _CloseADC
       _ConvertADC
       _Delay10TCYx
       _OpenADC
       _ReadADC
       ___awdiv
       ___awtoft
         ___awdiv (ARG)
         ___ftpack (ARG)
       ___fttol
       _floor
         ___altoft
           ___ftpack
           ___fttol (ARG)
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
         _frexp
     _getTemperature
       i2_ReadI2C
       i2_WriteI2C
     i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100     39      AD       8       67.6%
BITBANK1           100      0       0       5        0.0%
BANK1              100     F8     100       6      100.0%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     55      7A       4       95.3%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7A      7E       1      100.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2A5      14        0.0%
DATA                 0      0     2A5      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu May 25 10:01:05 2017

                        ___altoft@exp 0018                       ??_getLuminosity 0024  
                         _SSPSTATbits 000FC7                         ___altoft@sign 0019  
                                  l80 4204                                    l81 4206  
                                  l91 3ACA              _reply_message_serial_com 0D86  
                        ___awdiv@sign 0006              __end_of_displayInterface 0D86  
                 ___wmul@multiplicand 023E                    i2___lwdiv@dividend 0001  
                         __CFG_BORV$3 000000                            i2_WriteI2C 3BD6  
                        __CFG_CP0$OFF 000000                          __CFG_CP1$OFF 000000  
                        __CFG_CP2$OFF 000000                          __CFG_CP3$OFF 000000  
                        ___ftadd@exp1 0014                          ___ftadd@exp2 0013  
                    ??_getTemperature 0003                          ___ftadd@sign 0012  
                                 l100 3AEA                                   l141 3A0A  
                                 l142 3A0C                                   l143 3A18  
                                 l144 3A1A                                   l137 39F0  
                                 l192 3F3A                                   l615 0AA0  
                                 l801 2C7C                                   l583 0926  
                                 l807 3F00                                   l747 2FB6  
                                 l765 3070                                   l774 2B7A  
                                 l789 2C0E                          __CFG_CPB$OFF 000000  
                                 _PR2 000FCB                          __CFG_CPD$OFF 000000  
                                 _ISR 0008                 __size_of_WriteCmdXLCD 0044  
                        ___awmod@sign 0006                          ?_global_init 0001  
                                 tosl 000FFD                                   wreg 000FE8  
               _syn_serial_commun_isr 1354                          ?_readEEEPROM 023E  
                        __CFG_LVP$OFF 000000                                  ?_ISR 0001  
                        __CFG_WDT$OFF 000000                                  l1027 2DA6  
                                l1542 3854                                  l1552 3BCC  
                                l5304 4082                                  l5400 2C12  
                                l4290 3960                                  l5154 39F2  
                                l5146 39E0                                  l4602 3804  
                                l4428 3C94                                  l5260 31C2  
                                l4604 3810                                  l5404 2C36  
                                l4294 3986                                  l4614 3846  
                                l4606 3816                                  l4630 3BBE  
                                l4622 3B88                                  l6310 2D40  
                                l5280 3214                                  l5272 31F4  
                                l5264 31D4                                  l4624 3B94  
                                l5408 2C5C                                  l6304 2D1C  
                                l4626 3B9A                                  l6322 2D8A  
                                l5276 3204                                  l5268 31E4  
                                l4732 3AD6                                  l6316 2D66  
                                l5294 3FE2                                  l5390 2BA2  
                                l6326 2D92                                  l5288 3FC2  
                                l4736 3AEE                                  l5384 2B5A  
                                l5298 4064                                  l5394 2BC8  
                                l5386 2B7E                                  l6292 2CD0  
                                l5820 2F96                                  l5582 40E0  
                                l5398 2BEE                                  l6286 2CB0  
                                l5830 3004                                  l5822 2FBA  
                                l6288 2CBA                                  l5578 40CA  
                                l5834 302A                                  l5826 2FDE  
                                l5838 3050                                  _ALAF 02AB  
                                _ALAL 0238                                  _ALAT 023A  
                                STR_1 063E                                  STR_2 0644  
                                STR_3 0641                                  STR_4 063E  
                                STR_5 0644                                  STR_6 0644  
                                STR_7 063E                                  STR_8 0644  
                                STR_9 0644                                  u5135 3B30  
                                u5080 3AFA                                  u5088 3AFE  
                                u6320 2B8A                                  u6410 2C1E  
                                u6340 2BAE                                  u7220 2FA2  
                                i2l21 3C90                                  u6430 2C42  
                                u7310 3036                                  u6360 2BD4  
                                u6328 2B8E                                  u6450 2C68  
                                u6418 2C22                                  u6290 2B66  
                                u7330 305C                                  u7250 2FC6  
                                u6380 2BFA                                  u6348 2BB2  
                                u7228 2FA6                                  u6438 2C46  
                                u7318 303A                                  u7270 2FEA  
                                i2l80 4220                                  u6368 2BD8  
                                i2l81 4222                                  u6458 2C6C  
                                u6298 2B6A                                  u7338 3060  
                                u7290 3010                                  u7258 2FCA  
                                i2l91 3BF6                                  u6388 2BFE  
                                u7278 2FEE                                  u7375 3F0E  
                                u7376 3F10                                  u7298 3014  
                                u7930 2CAE                                  _PMON 01FE  
                                _TINA 01FC                                  _TMR0 000FD6  
                                _TSOM 007D                ?i2_DelayExternalEEPROM 0001  
                                _atoi 3226                                  _main 2650  
                         i2__doprnt@c 001B                          ___ftpack@arg 0001  
                         i2__doprnt@f 000F                                  _mode 007B  
                        ___ftpack@exp 0004                                  fsr0h 000FEA  
                                fsr1h 000FE2                    i2___lwdiv@quotient 0005  
                                indf0 000FEF                                  fsr2h 000FDA  
                                fsr0l 000FE9                                  indf2 000FDF  
                                fsr1l 000FE1                                  fsr2l 000FD9  
                                btemp 007F                __size_of_WriteDataXLCD 0044  
                                prodh 000FF4                                  prodl 000FF3  
                  __size_of_TC74_init 0012                                  start 000E  
                       __CFG_IESO$OFF 000000                  DelayExternalEEPROM@i 023C  
                     __end_ofi2_putch 438C                         __CFG_MCLRE$ON 000000  
        reply_message_serial_com@data 0056                    getLuminosity@level 002A  
                        ___param_bank 000000                       __end_of_BusyADC 434E  
                        main@dataOut1 0270                          main@dataOut2 026F  
                     __end_of_ReadI2C 420E                       __end_of_ReadADC 4336  
        reply_message_serial_com@oper 0054                                 ??_ISR 006D  
                  _meteo_init_EEEPROM 2C86                           _Delay10TCYx 4118  
                     __end_of_OpenI2C 41B2                       __end_of_OpenADC 3C94  
                        ___fttol@exp1 000F                          ___fttol@lval 000B  
                        _WriteCmdXLCD 3DD4                      ?i2_DelayFor18TCY 0001  
                         _Delay1KTCYx 3C94                      __end_of_LCD_init 4328  
                               l10100 20FA                                 l10022 1DA6  
                               l10040 1E80                                 l10016 1D5C  
                               l10034 1E1C                                 l10050 1EF6  
                               l10026 1DD2                                 l10060 1F66  
                               l10028 1DDA                                 l10052 1F28  
                               l10212 08A0                                 l10204 0874  
                               l10062 1F6C                                 l10038 1E78  
                               l10046 1ECE                                 l10302 0BC0  
                               l10214 08C6                                 l10080 1FEE  
                               l10320 0C32                                 l10240 098A  
                               l10216 08EA                                 l10160 0718  
                               l10074 1FA2                                 l10314 0BF8  
                               l10250 09C4                                 l10234 095E  
                               l10226 0936                                 l10218 08FA  
                               l10092 20A8                                 l10084 2018  
                               l10340 0D06                                 l10324 0C46  
                               l10332 0CB8                                 l10308 0BE0  
                               l10260 0A02                                 l10252 09D4  
                               l10236 0970                                 l10172 0754  
                               l10164 0728                                 l10156 0706  
                               l10148 06C2                                 l10086 201E  
                               l10350 0D2E                                 l10342 0D0E  
                               l10326 0C6C                                 l10334 0CE2  
                               l10318 0C0C                                 l10262 0A12  
                               l10238 0980                                 l10174 077A  
                               l10096 20D2                                 l10352 0D36  
                               l10344 0D16                                 l10336 0CF2  
                               l10328 0C92                                 l10280 0ABE  
                               l10272 0A3E                                 l10248 09B2  
                               l10192 07FA                                 l10184 07CE  
                               l10176 079E                                 l10098 20DE  
                               l10346 0D1E                                 l10338 0CFE  
                               l10282 0AE4                                 l10274 0A54  
                               l10194 0820                                 l10178 07AE  
                               l10348 0D26                                 l10356 0D3E  
                               l10284 0B0A                                 l10276 0A7A  
                               l10268 0A2A                                 l10292 0B6C  
                               l10196 0844                                 l10286 0B20  
                               l10294 0B90                                 l10198 0854  
                               l10710 26AC                                 l10296 0BA0  
                               l10288 0B46                                 l10720 26EC  
                               l10712 26B8                                 l10706 269A  
               __size_of_writeEEEPROM 00E4                                 l10732 2740  
                               l10724 2702                                 l10718 26E2  
                               l10728 272A                                 l10744 27C4  
                               l10748 27CC                      __end_of_RA4_init 4384  
                               ?_atoi 0007                         ?_SetDDRamAddr 0001  
                               ?_main 0001                       __end_of___awdiv 37E6  
                               _EEADR 000FA9                       __end_of___ftadd 29E0  
                               STR_10 0638                                 STR_11 060B  
                               STR_20 06B4                                 STR_12 0638  
                               STR_21 06B2                                 STR_13 06B2  
                               STR_22 06A8                                 STR_30 06B6  
                               STR_14 06A8                                 STR_23 064D  
                               STR_15 064D                                 STR_31 06BE  
                               STR_32 06B2                                 STR_40 06BA  
                               STR_16 06B4                                 STR_24 06AF  
                               STR_41 06B2                                 STR_17 06B2  
                               STR_33 06A8                                 STR_25 06AC  
                               STR_50 069C                                 STR_42 064D  
                               STR_34 064D                                 STR_18 06A8  
                               STR_26 06BC                                 STR_27 06AD  
                               STR_43 064D                                 STR_19 064D  
                               STR_35 06A8                                 STR_51 06A3  
                               STR_52 069C                                 STR_44 064D  
                               STR_36 064D                                 STR_28 06BA  
                     __end_of___awmod 3AA8                                 STR_29 06AD  
                               STR_45 064D                                 STR_37 06A8  
                               STR_53 068A                                 STR_54 069C  
                               STR_38 064D                                 STR_46 069C  
                               STR_55 06A3                                 STR_39 06B8  
                               STR_47 0674                                 STR_48 069C  
                               STR_56 0695                                 STR_49 067F  
                               STR_57 0650                 __size_of_writeIEEPROM 003C  
                     ___awdiv@divisor 0003                                 _T1CON 000FCD  
                               u13018 1FD8                       __end_of___fttol 2F92  
                               u13038 2090                                 _T2CON 000FCA  
                 ?_meteo_init_EEEPROM 0001                                 u12910 1E76  
                               u12920 1EB8                                 u12930 1EEE  
                               u12908 1E44                                 u12917 1E6C  
                               u12927 1EAE                                 u12937 1EE4  
                               u12878 1D8E                       __end_of___lwdiv 385E  
                               i2l100 3C16                       __end_of___lwmod 3BD6  
                               i2l151 40B0                                 i2l152 40B8  
                               i2l149 40A8                                 i2l701 2552  
                               i2l720 25CE                                 i2l801 2E96  
                               i2l820 3366                                 i2l732 262A  
                               i2l708 2574                                 i2l671 247E  
                               i2l824 33A0                                 i2l841 1AD4  
                               i2l738 2648                                 i2l931 1654  
                               i2l683 24D8                                 i2l940 1710  
                               i2l933 166E                                 i2l853 1D4E  
                               i2l774 2DC4                                 i2l934 1690  
                               i2l871 2A8A                                 i2l951 18A2  
                               i2l935 16A2                                 i2l695 2534  
                               i2l872 2A9C                                 i2l936 16BC  
                               i2l961 35E8                                 i2l946 17C2  
                               i2l938 16E4                                 i2l955 18EA  
                               i2l939 16FE                                 i2l963 35F2  
                     ___awdiv@counter 0005                                 i2l789 2E3C  
                               i2l965 35FC                                 i2l886 13D8  
                               i2l968 3602                                 _RCREG 000FAE  
                               _RCSTA 000FAB                                 _TMR1H 000FCF  
                               _TMR1L 000FCE                                 _SPBRG 000FAF  
                               _PORTD 000F83                       __end_of_rb0_isr 36D2  
                     __end_of__doprnt 2106                                 _TRISD 000F95  
                     __end_of_ra4_isr 2B56                                 _TXREG 000FAD  
                               _TXSTA 000FAC                         __CFG_PWRT$OFF 000000  
                       __CFG_WRT0$OFF 000000                         __CFG_WRT1$OFF 000000  
                       __CFG_WRT2$OFF 000000                   ___lmul@multiplicand 0240  
                       __CFG_WRT3$OFF 000000                        __CFG_EBTR0$OFF 000000  
                      __CFG_FCMEN$OFF 000000                        __CFG_EBTR1$OFF 000000  
                      __CFG_EBTR2$OFF 000000                        __CFG_EBTR3$OFF 000000  
                    __end_of_RBO_init 4342                         __CFG_WRTB$OFF 000000  
                       __CFG_WRTC$OFF 000000                         __CFG_WRTD$OFF 000000  
                      __CFG_EBTRB$OFF 000000                         ___awtoft@sign 000C  
                     __end_of_dpowers 060B                                 _floor 3076  
                               _frexp 385E                                 _errno 00ED  
                        i2__doprnt@ap 0011                          i2__doprnt@cp 0019  
                        i2__doprnt@pb 000D                       __end_of_isdigit 41F2  
                               _hours 0236                     readEEEPROM@Addrhi 0240  
                   readEEEPROM@Addrlo 023E                    __size_ofi2_ReadI2C 001C  
                       ___ftpack@sign 0005                                 atoi@a 000C  
                               atoi@s 0007                                 _putch 4368  
                               main@i 0273                                 main@j 0271  
                          _ConvertADC 4384                displayInterface@status 0265  
                               pclath 000FFA                                 tablat 000FF5  
                    __end_ofi2___wmul 418E                                 plusw1 000FE3  
                               plusw2 000FDB                                 status 000FD8  
                     __end_of_sprintf 3D3E                         _countSaveTime 00F3  
                ??_meteo_init_EEEPROM 0242                   _DelayExternalEEPROM 40C0  
                        ?_buzzer_init 0001                    __size_ofi2___lwdiv 0052  
                  __size_ofi2___lwmod 0042                      __end_of_CloseADC 4374  
                      WriteUSART@data 0001                    __size_ofi2__doprnt 035E  
                        _writeEEEPROM 2F92                           ?_USART_init 0001  
                     __initialization 3502                          __end_of_atoi 32F4  
                        _writeIEEPROM 3ED8                          __end_of_main 2834  
                    __end_of_OnBuffer 437A                   getLuminosity@result 0024  
                    __end_of_BusyXLCD 3F4E                    __size_of_DelayXLCD 0018  
               __size_of_DelayPORXLCD 0018                          __fassert@exp 002E  
                      __CFG_OSC$RCIO6 000000                           ?i2_WriteI2C 0001  
                      ??_SetDDRamAddr 023C                      __end_of_OpenXLCD 3226  
                              ??_atoi 0009                                ??_main 026C  
                _assync_serial_commun 32F4                         ___fttol@sign1 000A  
                ?_DelayExternalEEPROM 0001                         __activetblptr 000002  
                          i2sprintf@f 001E                         _WriteDataXLCD 3D90  
                       _maxLuminosity 022E                    __size_ofi2_sprintf 0042  
                   __end_of_TC74_init 4308                ?_syn_serial_commun_isr 0001  
                              _ADCON0 000FC2                                _ADCON1 000FC1  
                              _ADCON2 000FC0                                ?_floor 001A  
                              ?_frexp 0001                      __end_of___altoft 394E  
                              _ADRESH 000FC4                    __size_of_OffBuffer 000A  
                              _ADRESL 000FC3                                _EEDATA 000FA8  
                              _CCPR1L 000FBE                                _EECON2 000FA7  
                    ___awdiv@dividend 0001                      __end_of_WriteI2C 3B10  
                    __end_of___awtoft 3FC0                                ?_putch 0001  
                    __end_of___ftpack 3458                           OpenI2C@slew 023C  
                              i2l1334 3438                                i2l1406 296E  
                              i2l1345 3146                                i2l1267 32EA  
                              i2l1542 3D86                                i2l1382 2878  
                              i2l1552 3E92                                i2l5010 41EA  
                              i2l1386 28A2                                i2l1397 2952  
                              i2l5102 3C1A                                i2l5022 3776  
                              i2l4310 33F0                                i2l4302 33BA  
                              i2l5034 379C                                i2l5050 37CE  
                              i2l4314 3406                                i2l4306 33C8  
                              i2l6020 3662                                i2l4260 3D60  
                              i2l5036 37A4                                i2l5028 3786  
                              i2l4316 3424                                i2l4308 33D2  
                              i2l5054 37DC                                i2l5046 37C4  
                              i2l5038 37A8                                i2l4318 342E  
                              i2l4502 298A                                i2l4256 3D54  
                              i2l4280 3E74                                i2l4440 3904  
                              i2l4512 29BA                                i2l6050 2A2A  
                              i2l6034 36B6                                i2l6026 3694  
                              i2l4258 3D5C                                i2l5066 3F9C  
                              i2l4522 387A                                i2l5314 347E  
                              i2l5330 2464                                i2l6044 29FE  
                              i2l4268 3D7C                                i2l4284 3E88  
                              i2l4276 3E68                                i2l4460 28B0  
                              i2l4540 3732                                i2l5340 24BE  
                              i2l5332 2482                                i2l6070 2AF6  
                              i2l6062 2AAE                                i2l6038 36C6  
                              i2l4278 3E70                                i2l4438 38F8  
                              i2l4454 2886                                i2l5350 2518  
                              i2l5342 24DC                                i2l5520 3A86  
                              i2l5512 3A66                                i2l5504 3A4C  
                              i2l6056 2A56                                i2l4536 3702  
                              i2l5360 2596                                i2l5352 2538  
                              i2l5336 24A0                                i2l5514 3A6E  
                              i2l6066 2AD2                                i2l5098 3C02  
                              i2l4482 2902                                i2l4546 375E  
                              i2l5370 25F0                                i2l5354 255A  
                              i2l5346 24FA                                i2l5516 3A72  
                              i2l5524 3A90                                i2l5508 3A58  
                              i2l6076 2B08                                i2l5460 40F6  
                              i2l4900 3F5C                                i2l4484 290C  
                              i2l4476 28E0                                i2l4556 2ECA  
                              i2l5364 25B4                                i2l5356 2578  
                              i2l6078 2B4A                                i2l5470 322C  
                              i2l5534 41BA                                i2l4494 2940  
                              i2l4486 2916                                i2l4574 2F30  
                              i2l5374 260E                                i2l5366 25D2  
                              i2l5528 3A9E                                i2l5480 326C  
                              i2l5464 4106                                i2l5560 2E22  
                              i2l5552 2DE6                                i2l4496 294A  
                              i2l4488 291E                                i2l4592 2F80  
                              i2l4584 2F58                                i2l5376 262E  
                              i2l5538 41CA                                i2l5570 2E7C  
                              i2l5562 2E40                                i2l5546 2DAA  
                              i2l4586 2F64                                i2l4578 2F40  
                              i2l4748 42DE                                i2l5484 327E  
                              i2l5468 3228                                i2l5556 2E04  
                              i2l5548 2DC8                                i2l4588 2F6A  
                              i2l5486 32B4                                i2l5566 2E5E  
                              i2l4870 4122                                i2l5488 32B8  
                              i2l4890 30CC                                i2l4882 30A4  
                              i2l4868 411A                                i2l4886 30B2  
                              i2l4898 3F58                                i2l9902 220E  
                              i2l9910 2260                                i2l9904 2214  
                              i2l9914 2288                                i2l9924 22EE  
                              i2l9916 22B6                                i2l9950 2394  
                              i2l9926 22F2                                i2l9960 243A  
                              i2l9944 2364                                i2l9880 2108  
                              i2l9938 231E                                i2l9890 2176  
                              i2l9962 2442                                i2l9956 2410  
                              i2l9948 238E                                i2l9892 217C  
                              i2l9964 245A                                i2l9980 0DEE  
                              i2l9886 214A                                i2l9990 0F48  
                              i2l9982 0E24                                i2l9992 0FAE  
                              i2l9984 0E76                                i2l9898 21B6  
                              i2l9994 0FE4                                i2l9986 0EDC  
                              i2l9978 0D88                                i2l9996 101A  
                              i2l9988 0F12                                i2l9998 10A8  
syn_serial_commun_isr@request_message 0080                      __end_of__fassert 4168  
                  __size_of_ReadUSART 002E                                u455_41 2844  
                              u456_41 2858                                u481_41 2EAE  
                           ??i2_putch 0001                                _SPBRGH 000FB0  
                              _SSPADD 000FC8                                _SSPBUF 000FC9  
                           ??_BusyADC 0001                                _Addrhi 00F8  
                           ??_ReadI2C 023C                                _Addrlo 00F7  
                           ??_ReadADC 0003                    _getLuminosity$2787 0027  
                              _iALLON 00EF                             ??_OpenI2C 023D  
                           ??_OpenADC 0003                                _iALTON 00F1  
                        _DelayPORXLCD 428E                        __CFG_XINST$OFF 000000  
                              _wALLON 0299                                _wALTON 029B  
                  __size_of_OpenUSART 0074                                ___ftge 36D2  
                              ___lmul 394E                                ___wmul 3FF6  
                           ??___awdiv 0005                             ??___ftadd 000F  
                      __CFG_STVREN$ON 000000                             ??___awmod 0005  
                        ?_timer0_init 0001                             ??___fttol 0005  
                        ?_timer1_init 0001                             ??___lwdiv 0240  
                           ??___lwmod 0247                     __end_ofi2_ReadI2C 422A  
                           ??_rb0_isr 0001                             ??__doprnt 024E  
                           ??_ra4_isr 0007                                _memset 40EC  
                       i2__doprnt@val 0017                                clear_0 3580  
                              clear_1 358C                      ___awdiv@quotient 0007  
                     ___awmod@divisor 0003                 ?_assync_serial_commun 0001  
                        __doprnt@flag 0250                       ___awmod@counter 0005  
                              _printf 402C                 ??_DelayExternalEEPROM 023C  
                        __doprnt@prec 0251                                _status 0228  
                      ?_WriteDataXLCD 0001                    _displayTemperature 029F  
                              _strlen 3F4E                                floor@i 001D  
                              floor@x 001A                          __pdataCOMRAM 007D  
                           ??_isdigit 0001                     __end_ofi2___lwdiv 3D90  
                        __mediumconst 0000                     __end_ofi2___lwmod 3E9C  
                              tblptrh 000FF7                                tblptrl 000FF6  
                              tblptru 000FF8                     __end_ofi2__doprnt 2464  
                              putch@c 0001                      __end_of_putsXLCD 4092  
                 __size_of_USART_init 0012                  __size_of_global_init 0008  
                           ??_sprintf 025D                           ?_ConvertADC 0001  
                   __end_of_DelayXLCD 428E                  __size_of_readEEEPROM 0130  
                          __accesstop 0080               __end_of__initialization 3596  
                          ___altoft@c 0010                       __CFG_PBADEN$OFF 000000  
                 __size_ofi2_WriteI2C 0060                            ___ftadd@f1 0009  
                          ___ftadd@f2 000C                            ___ftge@ff1 0001  
                          ___ftge@ff2 0004                             ?_LCD_init 0001  
                       ___rparam_used 000001                             ?_RA4_init 0001  
          ??_reply_message_serial_com 0058                         _minLuminosity 022A  
                   __end_ofi2_sprintf 3E5A                            ___awtoft@c 0009  
                          ___fttol@f1 0001                    i2___lwmod@dividend 0008  
                          _WriteUSART 42D0                        __pcstackCOMRAM 0001  
                        __pidataBANK0 425E                          __pidataBANK1 4358  
                        __pidataBANK2 3E9C                             ?_RBO_init 0001  
                   __end_of_OffBuffer 4358                         __end_of_floor 3154  
                       __end_of_frexp 38D6                __size_ofi2_readEEEPROM 00F6  
                       __end_of_putch 436E                     ?_displayInterface 0263  
                   __end_of_ReadUSART 40C0                             ?i2___wmul 0001  
                  ??_displayInterface 0267                         __fassert@file 002C  
                       __fassert@line 002A                         ReadUSART@data 0001  
                           ?_CloseADC 0001                            __doprnt@ap 024C  
                          __doprnt@cp 0254                     __end_of_OpenUSART 3A38  
                          __doprnt@pb 0248               ??i2_DelayExternalEEPROM 0001  
                             ??_floor 001D                               ??_frexp 0006  
              __size_of_DelayFor18TCY 001A                               ??_putch 023C  
                           ?_OnBuffer 0001                            __pbssBANK0 00ED  
                          __pbssBANK2 0275                             ?_BusyXLCD 0001  
                         i2sprintf@ap 004E                           i2sprintf@pb 0050  
                         i2sprintf@wh 001C                       WriteCmdXLCD@cmd 023C  
                __end_of_SetDDRamAddr 3B74                        _maxTemperature 0230  
                          ??_LCD_init 0251                            ??_RA4_init 023C  
                           ?_OpenXLCD 0001       syn_serial_commun_isr@reply_data 0092  
                __size_of_buzzer_init 0010                               ?___ftge 0001  
                   WriteDataXLCD@data 023C                               ?___lmul 023C  
                        ?_Delay10TCYx 0001                               ?___wmul 023C  
                          ??_RBO_init 023C                ??_assync_serial_commun 005A  
                             _CCP1CON 000FBD                       ??_WriteDataXLCD 023C  
                        ?_Delay1KTCYx 0248                             ?___altoft 0010  
                             ?_memset 0001                        ___lmul@product 0244  
                 __size_of_ConvertADC 0004                 __end_of_getLuminosity 3502  
                           ?_WriteI2C 0001                             ?___awtoft 0009  
                           ?___ftpack 0001                               ?_printf 001C  
                             ?_strlen 0001                             ?__fassert 002A  
                          ??i2___wmul 0005                               i2l10000 1262  
                             i2l10004 12F0                               i2l10006 134A  
                             i2l10142 3380                               i2l10136 3356  
                             i2l10400 1966                               i2l10510 1D2E  
                             i2l10414 19C2                               i2l10432 1A4A  
                             i2l10408 199C                               i2l10602 1594  
                             i2l10610 15BA                               i2l10530 13B2  
                             i2l10506 1D0C                               i2l10418 19E2  
                             i2l10620 16C6                               i2l10612 1610  
                             i2l10444 1AA6                               i2l10380 1906  
                             i2l10630 1748                               i2l10622 171A  
                             i2l10606 159C                               i2l10454 1AF0  
                             i2l10438 1A78                               i2l10462 1BEC  
                             i2l10390 1936                               i2l10384 1916  
                             i2l10650 17EC                               i2l10634 175E  
                             i2l10570 14C4                               i2l10554 145E  
                             i2l10546 1414                               i2l10458 1BDE  
                             i2l10660 1888                               i2l10628 173E  
                             i2l10580 150C                               i2l10564 1498  
                             i2l10556 146A                               i2l10476 1C56  
                             i2l10396 195A                               i2l10646 17AE  
                             i2l10654 180A                               i2l10590 1554  
                             i2l10582 1518                               i2l10574 14DC  
                             i2l10486 1CAC                               i2l10656 1860  
                             i2l10496 1CDC                               i2l10666 18C6  
                             i2l10594 1558                               i2l10586 1530  
                             i2l10578 1500                               i2l10598 1570  
                _countAlarmLuminosity 00E9                            ??_CloseADC 0001  
                 getTemperature@value 0004                               _SSPCON1 000FC6  
                             _SSPCON2 000FC5                               _SSPSTAT 000FC7  
                       i2_readEEEPROM 2DA8                            ??_OnBuffer 0001  
                  __size_of_putrsXLCD 0036                            ??_BusyXLCD 023C  
                             i2_putch 438A                            _countClock 01FA  
                             _BusyADC 4342                               _ReadI2C 41F2  
                             _ReadADC 4328                            ??_OpenXLCD 0250  
                             _OpenI2C 418E                               _OpenADC 3C36  
                       _dataInEEEPROM 0275                               __Hparam 0000  
                             __Lparam 0000                          ??_USART_init 023F  
                         ?_WriteUSART 0001                       __size_of___ftge 0090  
                             ___awdiv 3762                         _DelayFor18TCY 422A  
                     __size_of___lmul 0076                               ___ftadd 2834  
                             ___awmod 3A38                       __size_of___wmul 0036  
                             ___fttol 2E9E                             ?_putsXLCD 023D  
                             ___lwdiv 37E6                               ___lwmod 3B74  
                        __psmallconst 0600                            ??___altoft 0014  
                             _rb0_isr 363E                               __doprnt 1D5A  
                             _ra4_isr 29E0                          ??i2_WriteI2C 0001  
                             __pcinit 3502                            ??_WriteI2C 023C  
                          ??___awtoft 000C                            ??___ftpack 0006  
                     putrsXLCD@buffer 023D                       __size_of_memset 002C  
                             __ramtop 0600               ??_syn_serial_commun_isr 005A  
              syn_serial_commun_isr@c 00CA                syn_serial_commun_isr@i 00D3  
              syn_serial_commun_isr@j 00CF                  __size_of_timer0_init 0016  
                __size_of_timer1_init 0014                         ?_timer0_reset 0001  
                             __ptext0 2650                               __ptext1 3ED8  
                             __ptext2 2F92                               __ptext3 42BC  
                             __ptext4 2C86                               __ptext5 2B56  
                             __ptext6 3AA8                               __ptext7 41F2  
                             __ptext8 4360                               __ptext9 06C2  
                     __size_of_printf 0036                            ??__fassert 0030  
                           _T0CONbits 000FD5                      writeEEEPROM@Data 0243  
                     __size_of_strlen 003A                          __size_of_ISR 3636  
                           _T1CONbits 000FCD                               _dpowers 0601  
                        Delay10TCYx@n 0001                               _isdigit 41D4  
                      i2__doprnt@flag 0015                      ___awmod@dividend 0001  
                      i2__doprnt@prec 0016              __size_ofi2_DelayFor18TCY 001A  
                             _minutes 0234                               _seconds 0232  
          syn_serial_commun_isr@F3557 00D5            syn_serial_commun_isr@F3559 0200  
            meteo_init_EEEPROM@Addrhi 0242              meteo_init_EEEPROM@Addrlo 0243  
                      ?i2_readEEEPROM 0003                        OpenADC@config2 0001  
                           _TC74_init 42F6                               _sprintf 3CEC  
                  __end_of_USART_init 42F6                        __pintcode_body 35A4  
                end_of_initialization 3596               __size_of_getTemperature 01EC  
                             memset@c 0003                               memset@n 0005  
                             memset@p 0007                         __Lmediumconst 0000  
                             int_func 35A4                   i2___wmul@multiplier 0001  
                         timer1_isr@k 006B      __end_of_reply_message_serial_com 1354  
                        Delay1KTCYx@n 0248           __size_of_meteo_init_EEEPROM 0122  
                           i2u1306_41 32FE                    __end_ofi2_WriteI2C 3C36  
          syn_serial_commun_isr@count 0090                             i2u1270_40 220C  
                           i2u1350_40 19D8                             i2u1270_47 2202  
                           i2u1271_40 224C                             i2u1351_41 19F6  
                           i2u1271_47 2242                             i2u1272_40 2280  
                           i2u1272_47 2276                             i2u1280_48 234E  
                           i2u1409_47 411C                             i2u1370_41 1370  
                           i2u1282_48 23FA                             i2u1266_48 2134  
                           i2u1356_40 1AEE                             i2u1348_40 1984  
                           i2u1349_40 19B2                             i2u1269_48 21DA  
                           i2u1369_41 135E                             i2u1389_40 173C  
          syn_serial_commun_isr@start 00C6                             _RCSTAbits 000FAB  
                             printf@f 001C                        ?_DelayFor18TCY 0001  
                             postdec1 000FE5                               postdec2 000FDD  
                          _timer1_isr 18F4                               postinc0 000FEE  
                             postinc2 000FDE                            ??_putsXLCD 023F  
                          _luminosity 02A1                               strlen@s 0001  
                   __end_of_putrsXLCD 3FF6                        ??_timer0_reset 0001  
                        _displayHours 02A9     assync_serial_commun@reply_message 005B  
                           i2_ReadI2C 420E                             _TRISAbits 000F92  
                           _TRISBbits 000F93                             _TRISCbits 000F94  
                           _TRISDbits 000F95             meteo_init_EEEPROM@dataOut 0244  
               __size_of_SetDDRamAddr 0064                   writeIEEPROM@saveGIE 023E  
                 __size_of_WriteUSART 0014                            ?_TC74_init 0001  
                   i2___lwdiv@divisor 0003                          ??_ConvertADC 0001  
                           i2___lwdiv 3D3E                             i2___lwmod 3E5A  
                   i2___lwdiv@counter 0007                             i2__doprnt 2106  
                          main@dataIn 026E                        _minTemperature 022C  
                           _TXSTAbits 000FAC                             _DelayXLCD 4276  
                displayInterface@mode 0263                     __size_of_LCD_init 0010  
                   getLuminosity@read 002C                     __size_of_RA4_init 0004  
         __end_of_DelayExternalEEPROM 40EC                             i2_sprintf 3E18  
                      __end_of___ftge 3762                        __end_of___lmul 39C4  
                      __end_of___wmul 402C                  __size_of_Delay10TCYx 0028  
                       __pidataCOMRAM 4388                     __size_of_RBO_init 000C  
                  __end_of_ConvertADC 4388                        __end_of_memset 4118  
                        _SetDDRamAddr 3B10                             _OffBuffer 434E  
                __size_of_Delay1KTCYx 0058                            ?i2_ReadI2C 0001  
                    writeIEEPROM@Addr 023D                            floor@expon 0020  
                    writeIEEPROM@Data 023C                      i2___wmul@product 0005  
                      __end_of_printf 4062                    SetDDRamAddr@DDaddr 023F  
                      __end_of_strlen 3F88                         ??_global_init 023C  
                        _countMonitor 00EB                   start_initialization 3502  
                           _ReadUSART 4092                           __end_of_ISR 363E  
                   __size_ofi2___wmul 0026                       ??i2_readEEEPROM 0004  
                    readEEEPROM@value 0241                         ??_readEEEPROM 023F  
                    WriteI2C@data_out 023D                            ?i2___lwdiv 0001  
                 meteo_init_EEEPROM@i 0245                   meteo_init_EEEPROM@j 0247  
                          ?i2___lwmod 0008        __size_ofi2_DelayExternalEEPROM 0022  
                   __size_of_CloseADC 0006         __end_ofi2_DelayExternalEEPROM 41D4  
                          ?i2__doprnt 000D             __size_of_displayInterface 06C4  
                   ??i2_DelayFor18TCY 0001                            frexp@value 0001  
                           _OpenUSART 39C4                     __size_of_OnBuffer 0006  
                   __size_of_BusyXLCD 003A                            ?_DelayXLCD 0001  
                     ??_DelayFor18TCY 023C                     __size_of_OpenXLCD 00D2  
           assync_serial_commun@F3539 00DF                              ??___ftge 0007  
                            ??___lmul 0244                           ?_timer1_isr 0001  
                            ??___wmul 0240                            ?i2_sprintf 001C  
                   _displayLuminosity 029D                         ?_WriteCmdXLCD 0001  
                         __doprnt@val 0252                           __pdataBANK0 00D5  
                         __pdataBANK1 01F8                           __pdataBANK2 0200  
                    __CFG_LPT1OSC$OFF 000000                              ??_memset 0007  
                            ??_printf 0024                              ??_strlen 0003  
                          ?_OffBuffer 0001                     __size_of___altoft 0078  
   __size_of_reply_message_serial_com 05CE             ?_reply_message_serial_com 0054  
                   __size_of_WriteI2C 0068                     __size_of___awtoft 0038  
                   __size_of___ftpack 00AE                           __pbssCOMRAM 007B  
                          ?_ReadUSART 0001                     __size_of__fassert 0028  
                       __pcstackBANK0 0080                         __pcstackBANK1 0100  
                       __pcstackBANK2 023C                     i2___lwmod@divisor 000A  
                   i2___lwmod@counter 000C                          _isdigit$2308 0002  
                         ??_TC74_init 023E                        _getTemperature 2464  
                 __end_of_global_init 4368                            ?_OpenUSART 023C  
                            ?i2_putch 0001                  __end_of_timer0_reset 4380  
                           __doprnt@c 0256                             __doprnt@f 024A  
                 __end_of_readEEEPROM 2C86                              ?_BusyADC 0001  
                            ?_ReadI2C 0001                              ?_ReadADC 0001  
                       ??_buzzer_init 023C                i2DelayExternalEEPROM@i 0001  
                   OpenADC@portconfig 0002                              ?_OpenI2C 023C  
                            ?_OpenADC 0001                        putsXLCD@buffer 023D  
                    ___lwdiv@dividend 023C                         ?_writeEEEPROM 0242  
                   __CFG_CCP2MX$PORTC 000000                          ??_WriteUSART 0001  
                       ?_writeIEEPROM 023C                             __pintcode 0008  
            syn_serial_commun_isr@end 00C8              syn_serial_commun_isr@msg 00CD  
                      ??_WriteCmdXLCD 023C                             _goToSleep 0293  
                            ?___awdiv 0001                              ?___ftadd 0009  
                            ?___awmod 0001                              ?___fttol 0001  
                            ?___lwdiv 023C                              ?___lwmod 0243  
                            ?_rb0_isr 0001                              ?__doprnt 0248  
                            ?_ra4_isr 0001                     __size_of_putsXLCD 0030  
                  writeEEEPROM@Addrhi 0245         __size_of_assync_serial_commun 00B6  
               __end_of_WriteDataXLCD 3DD4                    writeEEEPROM@Addrlo 0242  
      syn_serial_commun_isr@start_msg 00CB                           ??i2_ReadI2C 0001  
      __size_of_syn_serial_commun_isr 05A0                           __smallconst 0600  
                           _countTINA 00F5         __end_of_syn_serial_commun_isr 18F4  
                            ?_isdigit 0001                __end_of_getTemperature 2650  
                    ___lwdiv@quotient 0240                              ?_sprintf 0257  
                      __size_of_floor 00DE                        __size_of_frexp 0078  
                         ??i2___lwdiv 0005                   __size_of_timer1_isr 0466  
                         ??i2___lwmod 000C                    __end_of_WriteUSART 42E4  
                      __size_of_putch 0006                           ??i2__doprnt 0013  
                      ___wmul@product 0240                         OpenADC@config 0005  
              __size_of_getLuminosity 00AA                              _LATDbits 000F8C  
                            _LCD_init 4318                           ??_DelayXLCD 0250  
                            _RA4_init 4380                              _PIE1bits 000F9D  
                       ?_DelayPORXLCD 0001                        ??_writeEEEPROM 0244  
                            i2u600_40 2504                              i2u600_48 2506  
                            _PIR1bits 000F9E                       OpenXLCD@lcdtype 0250  
                            i2u602_40 2522                        ??_writeIEEPROM 023D  
                            i2u602_48 2524                              i2u612_40 2582  
                            i2u517_40 30BE                              i2u621_40 25FA  
                            i2u612_48 2584                              i2u605_40 2542  
                            i2u621_48 25FC                              i2u614_40 25A0  
                            i2u605_48 2544                              i2u623_40 2618  
                            i2u614_48 25A2                              i2u623_48 261A  
                            i2u616_40 25BE                              i2u561_40 3C24  
                            i2u616_48 25C0                              i2u609_40 2564  
                            i2u561_48 3C26                              i2u626_40 2638  
                            i2u609_48 2566                              i2u483_40 2EE8  
                            i2u626_48 263A                              i2u619_40 25DC  
                            i2u483_45 2EE0                              i2u619_48 25DE  
                            i2u477_40 38A2                              i2u670_40 2DD2  
                            i2u477_48 38A4                              i2u670_48 2DD4  
                            i2u591_40 248C                              i2u672_40 2DF0  
                            i2u496_40 434A                              i2u591_48 248E  
                            i2u681_40 2E68                              i2u672_48 2DF2  
                            i2u593_40 24AA                              i2u681_48 2E6A  
                            i2u674_40 2E0E                              i2u593_48 24AC  
                            i2u683_40 2E86                              i2u674_48 2E10  
                            i2u667_40 2DB4                              i2u595_40 24C8  
                            i2u683_48 2E88                              i2u676_40 2E2C  
                            i2u667_48 2DB6                              i2u595_48 24CA  
                            i2u588_40 246E                              i2u676_48 2E2E  
                            i2u588_48 2470                              i2u598_40 24E6  
                            i2u679_40 2E4A                              i2u598_48 24E8  
                            i2u679_48 2E4C                              _RCONbits 000FD0  
               _countAlarmTemperature 01F8                      __CFG_WDTPS$32768 000000  
                         ??i2_sprintf 004E                         ??_timer0_init 0001  
         reply_message_serial_com@str 0100                              _RBO_init 4336  
                       ??_timer1_init 023C                   __end_of_buzzer_init 4318  
               assync_serial_commun@c 005A                 assync_serial_commun@i 005D  
                          _ADCON0bits 000FC2                     ___wmul@multiplier 023C  
                         ??_OffBuffer 0001                              i2___wmul 4168  
                           _putrsXLCD 3FC0                           ??_ReadUSART 0001  
                 displayInterface@tmp 0269                           _global_init 4360  
                     ?_getTemperature 0001                              _CloseADC 436E  
                         _readEEEPROM 2B56                     ___lmul@multiplier 023C  
                         _INTCON2bits 000FF1                             copy_data0 3516  
                           copy_data1 3536                             copy_data2 3556  
                            _OnBuffer 4374                              _BusyXLCD 3F14  
                    _displayInterface 06C2            __end_of_meteo_init_EEEPROM 2DA8  
                    OpenI2C@sync_mode 023D                           ??_OpenUSART 023E  
                     OpenUSART@config 023E                        ??_DelayPORXLCD 0250  
                    __size_ofi2_putch 0002                             frexp@eptr 0004  
                          _EECON1bits 000FA6                              _OpenXLCD 3154  
                    __size_of_BusyADC 000C                      __size_of_ReadI2C 001C  
                    __size_of_ReadADC 000E                              __Hrparam 0000  
                    __size_of_OpenI2C 0024                      __size_of_OpenADC 005E  
                            __Lrparam 0000                    __CFG_BOREN$SBORDIS 000000  
                 i2readEEEPROM@Addrhi 0005                   i2readEEEPROM@Addrlo 0003  
                    __size_of___awdiv 0084                      __size_of___ftadd 01AC  
                    __size_of___awmod 0070                 i2___wmul@multiplicand 0003  
                            ___altoft 38D6                      __size_of___fttol 00F4  
                    __size_of___lwdiv 0078                      __size_of___lwmod 0062  
                            _WriteI2C 3AA8                              ___awtoft 3F88  
                            ___ftpack 33AA                      __size_of_rb0_isr 0094  
                    __size_of__doprnt 03AC                      __size_of_ra4_isr 0176  
                       _getLuminosity 3458                       _putch$intlevel0 436C  
                            __fassert 4140                   __end_of_timer0_init 42BC  
                 __end_of_timer1_init 42D0                       i2_DelayFor18TCY 4244  
                          ?_putrsXLCD 023D                      __size_of_isdigit 001E  
                     ___lwdiv@divisor 023E                       ___lwdiv@counter 0242  
                            __ptext10 3CEC                              __ptext11 1D5A  
                            __ptext20 42E4                              __ptext12 4368  
                            __ptext21 39C4                              __ptext13 3B74  
                            __ptext30 4276                              __ptext22 42F6  
                            __ptext14 37E6                              __ptext31 428E  
                            __ptext23 418E                              __ptext15 4062  
                            __ptext40 3458                              __ptext32 3C94  
                            __ptext24 4336                              __ptext16 3FC0  
                            __ptext41 3076                              __ptext33 394E  
                            __ptext25 4380                              __ptext17 3D90  
                            __ptext50 4328                              __ptext42 385E  
                            __ptext34 3F14                              __ptext26 4318  
                            __ptext18 4308                              __ptext51 3C36  
                            __ptext43 2E9E                              __ptext35 40C0  
                            __ptext27 3154                              __ptext19 3FF6  
                            __ptext60 2DA8                              __ptext52 4118  
                            __ptext44 36D2                              __ptext36 422A  
                            __ptext28 3DD4                              __ptext61 3BD6  
                            __ptext53 4384                              __ptext45 2834  
                            __ptext29 3B10                              __ptext70 4168  
                            __ptext62 420E                              __ptext54 436E  
                            __ptext46 38D6                              __ptext38 18F4  
                            __ptext71 41D4                              __ptext63 41B2  
                            __ptext55 4342                              __ptext47 3F88  
                            __ptext39 2464                              __ptext80 363E  
                            __ptext72 4140                              __ptext64 4244  
                            __ptext56 32F4                              __ptext48 33AA  
                            __ptext81 437A                              __ptext73 402C  
                            __ptext65 3F4E                              __ptext57 4374  
                            __ptext49 3762                              __ptext82 42A6  
                            __ptext74 2106                              __ptext66 0D86  
                            __ptext58 434E                              __ptext83 29E0  
                            __ptext75 438A                              __ptext67 3E18  
                            __ptext59 1354                              __ptext84 3A38  
                            __ptext76 3E5A                              __ptext68 40EC  
                            __ptext85 0000                              __ptext77 3D3E  
                            __ptext69 3226                              __ptext78 42D0  
                            __ptext79 4092                 __size_of_timer0_reset 0006  
                __end_of_WriteCmdXLCD 3E18    syn_serial_commun_isr@reply_message 00C4  
                    __size_of_sprintf 0052                         __size_of_atoi 00CE  
                       __size_of_main 01E4                           _buzzer_init 4308  
                       ??_Delay10TCYx 0005                          ??_timer1_isr 0069  
                            int$flags 007F                              atoi@sign 000B  
                            _putsXLCD 4062                         ??_Delay1KTCYx 024C  
                      ?_getLuminosity 0022                          _timer0_reset 437A  
        __size_of_DelayExternalEEPROM 002C                            _INTCONbits 000FF2  
                      OpenUSART@spbrg 023C                  __end_of_writeEEEPROM 3076  
                __end_of_writeIEEPROM 3F14                              isdigit@c 0003  
                            memset@p1 0001                 __end_ofi2_readEEEPROM 2E9E  
                            intlevel2 0000                             sprintf@ap 025D  
                  __end_of_timer1_isr 1D5A                             sprintf@pb 025F  
                           sprintf@wh 0257                    i2readEEEPROM@value 0006  
      assync_serial_commun@reply_data 005F                      ___lwmod@dividend 0243  
               i2_DelayExternalEEPROM 41B2                    i2WriteI2C@data_out 0002  
           syn_serial_commun_isr@oper 00D1                 __end_of_DelayFor18TCY 4244  
                            printf@ap 0024                              printf@pb 0026  
             __end_ofi2_DelayFor18TCY 425E                           _timer0_init 42A6  
                         _timer1_init 42BC     syn_serial_commun_isr@request_data 00BA  
                      _displayMinutes 02A7                        _displaySeconds 02A5  
                       _updateIEEPROM 0295                   __end_of_Delay10TCYx 4140  
                         _temperature 02A3                              sprintf@f 0259  
                __end_of_DelayPORXLCD 42A6                           ??_putrsXLCD 023F  
                     ___lwmod@divisor 0245                              strlen@cp 0005  
                 __end_of_Delay1KTCYx 3CEC                       ___lwmod@counter 0247  
                         _SSPCON1bits 000FC6                           _SSPCON2bits 000FC5  
                         _pressedMode 0291                  _updateExternalEEPROM 0289  
        __end_of_assync_serial_commun 33AA                         _updateDisplay 0297  
                        _USART_Status 00F9                            _USART_init 42E4  
