

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Apr 17 16:14:52 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37  0000                     
    38                           ; Version 1.41
    39                           ; Generated 25/01/2017 GMT
    40                           ; 
    41                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4520 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     
    73                           	psect	idataCOMRAM
    74  000E02                     __pidataCOMRAM:
    75                           	opt stack 0
    76                           
    77                           ;initializer for _seconds
    78  000E02  0032               	dw	50
    79                           
    80                           ;initializer for _minutes
    81  000E04  003B               	dw	59
    82                           
    83                           	psect	smallconst
    84  000600                     __psmallconst:
    85                           	opt stack 0
    86  000600  00                 	db	0
    87  000601                     _dpowers:
    88                           	opt stack 0
    89  000601  0001               	dw	1
    90  000603  000A               	dw	10
    91  000605  0064               	dw	100
    92  000607  03E8               	dw	1000
    93  000609  2710               	dw	10000
    94  00060B                     __end_of_dpowers:
    95                           	opt stack 0
    96  0000                     _ADCON1	set	4033
    97  0000                     _T1CONbits	set	4045
    98  0000                     _PIE1bits	set	3997
    99  0000                     _T1CON	set	4045
   100  0000                     _INTCONbits	set	4082
   101  0000                     _RCONbits	set	4048
   102  0000                     _TMR1L	set	4046
   103  0000                     _TMR1H	set	4047
   104  0000                     _PIR1bits	set	3998
   105  0000                     _SSPCON1bits	set	4038
   106  0000                     _SSPBUF	set	4041
   107  0000                     _SSPSTATbits	set	4039
   108  0000                     _SSPCON2bits	set	4037
   109  0000                     _TRISCbits	set	3988
   110  0000                     _SSPCON2	set	4037
   111  0000                     _SSPCON1	set	4038
   112  0000                     _SSPSTAT	set	4039
   113  0000                     _TRISDbits	set	3989
   114  0000                     _TRISD	set	3989
   115  0000                     _PORTD	set	3971
   116  0000                     _LATDbits	set	3980
   117  00060B                     STR_1:
   118  00060B  30                 	db	48	;'0'
   119  00060C  25                 	db	37
   120  00060D  64                 	db	100	;'d'
   121  00060E  00                 	db	0
   122  00060F                     STR_3:
   123  00060F  3A                 	db	58	;':'
   124  000610  00                 	db	0
   125  0000                     
   126                           ; #config settings
   127  000611  00                 	db	0	; dummy byte at the end
   128  0000                     
   129                           	psect	cinit
   130  000CD4                     __pcinit:
   131                           	opt stack 0
   132  000CD4                     start_initialization:
   133                           	opt stack 0
   134  000CD4                     __initialization:
   135                           	opt stack 0
   136                           
   137                           ; Initialize objects allocated to COMRAM (4 bytes)
   138                           ; load TBLPTR registers with __pidataCOMRAM
   139  000CD4  0E02               	movlw	low __pidataCOMRAM
   140  000CD6  6EF6               	movwf	tblptrl,c
   141  000CD8  0E0E               	movlw	high __pidataCOMRAM
   142  000CDA  6EF7               	movwf	tblptrh,c
   143  000CDC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   144  000CDE  6EF8               	movwf	tblptru,c
   145  000CE0  EE00  F034         	lfsr	0,__pdataCOMRAM
   146  000CE4  EE10 F004          	lfsr	1,4
   147  000CE8                     copy_data0:
   148  000CE8  0009               	tblrd		*+
   149  000CEA  CFF5 FFEE          	movff	tablat,postinc0
   150  000CEE  50E5               	movf	postdec1,w,c
   151  000CF0  50E1               	movf	fsr1l,w,c
   152  000CF2  E1FA               	bnz	copy_data0
   153                           
   154                           ; Clear objects allocated to COMRAM (4 bytes)
   155  000CF4  6A33               	clrf	(__pbssCOMRAM+3)& (0+255),c
   156  000CF6  6A32               	clrf	(__pbssCOMRAM+2)& (0+255),c
   157  000CF8  6A31               	clrf	(__pbssCOMRAM+1)& (0+255),c
   158  000CFA  6A30               	clrf	__pbssCOMRAM& (0+255),c
   159  000CFC                     end_of_initialization:
   160                           	opt stack 0
   161  000CFC                     __end_of__initialization:
   162                           	opt stack 0
   163  000CFC  9038               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   164  000CFE  9238               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   165  000D00  0E00               	movlw	low (__Lmediumconst shr (0+16))
   166  000D02  6EF8               	movwf	tblptru,c
   167  000D04  0100               	movlb	0
   168  000D06  EFB6  F006         	goto	_main	;jump to C main() function
   169                           tblptru	equ	0xFF8
   170                           tblptrh	equ	0xFF7
   171                           tblptrl	equ	0xFF6
   172                           tablat	equ	0xFF5
   173                           postinc0	equ	0xFEE
   174                           postdec1	equ	0xFE5
   175                           fsr1l	equ	0xFE1
   176                           
   177                           	psect	bssCOMRAM
   178  000030                     __pbssCOMRAM:
   179                           	opt stack 0
   180  000030                     _change:
   181                           	opt stack 0
   182  000030                     	ds	2
   183  000032                     _hours:
   184                           	opt stack 0
   185  000032                     	ds	2
   186                           tblptru	equ	0xFF8
   187                           tblptrh	equ	0xFF7
   188                           tblptrl	equ	0xFF6
   189                           tablat	equ	0xFF5
   190                           postinc0	equ	0xFEE
   191                           postdec1	equ	0xFE5
   192                           fsr1l	equ	0xFE1
   193                           
   194                           	psect	dataCOMRAM
   195  000034                     __pdataCOMRAM:
   196                           	opt stack 0
   197  000034                     _seconds:
   198                           	opt stack 0
   199  000034                     	ds	2
   200  000036                     _minutes:
   201                           	opt stack 0
   202  000036                     	ds	2
   203                           tblptru	equ	0xFF8
   204                           tblptrh	equ	0xFF7
   205                           tblptrl	equ	0xFF6
   206                           tablat	equ	0xFF5
   207                           postinc0	equ	0xFEE
   208                           postdec1	equ	0xFE5
   209                           fsr1l	equ	0xFE1
   210                           
   211                           	psect	cstackCOMRAM
   212  000001                     __pcstackCOMRAM:
   213                           	opt stack 0
   214  000001                     ??_ISR:
   215  000001                     
   216                           ; 1 bytes @ 0x0
   217  000001                     	ds	14
   218  00000F                     ??_SetDDRamAddr:
   219  00000F                     ?___lwdiv:
   220                           	opt stack 0
   221  00000F                     ?___lmul:
   222                           	opt stack 0
   223  00000F                     WriteCmdXLCD@cmd:
   224                           	opt stack 0
   225  00000F                     WriteDataXLCD@data:
   226                           	opt stack 0
   227  00000F                     ___lwdiv@dividend:
   228                           	opt stack 0
   229  00000F                     ___lmul@multiplier:
   230                           	opt stack 0
   231                           
   232                           ; 4 bytes @ 0xE
   233  00000F                     	ds	1
   234  000010                     putrsXLCD@buffer:
   235                           	opt stack 0
   236  000010                     putsXLCD@buffer:
   237                           	opt stack 0
   238                           
   239                           ; 2 bytes @ 0xF
   240  000010                     	ds	1
   241  000011                     ___lwdiv@divisor:
   242                           	opt stack 0
   243                           
   244                           ; 2 bytes @ 0x10
   245  000011                     	ds	1
   246  000012                     SetDDRamAddr@DDaddr:
   247                           	opt stack 0
   248                           
   249                           ; 1 bytes @ 0x11
   250  000012                     	ds	1
   251  000013                     ___lwdiv@quotient:
   252                           	opt stack 0
   253  000013                     ___lmul@multiplicand:
   254                           	opt stack 0
   255                           
   256                           ; 4 bytes @ 0x12
   257  000013                     	ds	2
   258  000015                     ___lwdiv@counter:
   259                           	opt stack 0
   260                           
   261                           ; 1 bytes @ 0x14
   262  000015                     	ds	1
   263  000016                     ?___lwmod:
   264                           	opt stack 0
   265  000016                     ___lwmod@dividend:
   266                           	opt stack 0
   267                           
   268                           ; 2 bytes @ 0x15
   269  000016                     	ds	1
   270  000017                     ___lmul@product:
   271                           	opt stack 0
   272                           
   273                           ; 4 bytes @ 0x16
   274  000017                     	ds	1
   275  000018                     ___lwmod@divisor:
   276                           	opt stack 0
   277                           
   278                           ; 2 bytes @ 0x17
   279  000018                     	ds	2
   280  00001A                     ___lwmod@counter:
   281                           	opt stack 0
   282                           
   283                           ; 1 bytes @ 0x19
   284  00001A                     	ds	1
   285  00001B                     ?_sprintf:
   286                           	opt stack 0
   287  00001B                     sprintf@sp:
   288                           	opt stack 0
   289  00001B                     Delay1KTCYx@n:
   290                           	opt stack 0
   291                           
   292                           ; 4 bytes @ 0x1A
   293  00001B                     	ds	2
   294  00001D                     sprintf@f:
   295                           	opt stack 0
   296                           
   297                           ; 2 bytes @ 0x1C
   298  00001D                     	ds	2
   299  00001F                     ??_Delay1KTCYx:
   300                           
   301                           ; 1 bytes @ 0x1E
   302  00001F                     	ds	2
   303  000021                     ??_sprintf:
   304                           
   305                           ; 1 bytes @ 0x20
   306  000021                     	ds	1
   307  000022                     sprintf@ap:
   308                           	opt stack 0
   309                           
   310                           ; 2 bytes @ 0x21
   311  000022                     	ds	1
   312  000023                     OpenXLCD@lcdtype:
   313                           	opt stack 0
   314                           
   315                           ; 1 bytes @ 0x22
   316  000023                     	ds	1
   317  000024                     sprintf@flag:
   318                           	opt stack 0
   319                           
   320                           ; 1 bytes @ 0x23
   321  000024                     	ds	1
   322  000025                     sprintf@prec:
   323                           	opt stack 0
   324                           
   325                           ; 1 bytes @ 0x24
   326  000025                     	ds	1
   327  000026                     sprintf@val:
   328                           	opt stack 0
   329                           
   330                           ; 2 bytes @ 0x25
   331  000026                     	ds	2
   332  000028                     sprintf@c:
   333                           	opt stack 0
   334                           
   335                           ; 1 bytes @ 0x27
   336  000028                     	ds	1
   337  000029                     displayInterface@dummy:
   338                           	opt stack 0
   339                           
   340                           ; 2 bytes @ 0x28
   341  000029                     	ds	2
   342  00002B                     displayInterface@chrHours:
   343                           	opt stack 0
   344                           
   345                           ; 5 bytes @ 0x2A
   346  00002B                     	ds	5
   347  000030                     tblptru	equ	0xFF8
   348                           tblptrh	equ	0xFF7
   349                           tblptrl	equ	0xFF6
   350                           tablat	equ	0xFF5
   351                           postinc0	equ	0xFEE
   352                           postdec1	equ	0xFE5
   353                           fsr1l	equ	0xFE1
   354                           
   355                           ; 1 bytes @ 0x2F
   356 ;;
   357 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   358 ;;
   359 ;; *************** function _main *****************
   360 ;; Defined at:
   361 ;;		line 214 in file "exLCD.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;		None
   364 ;; Auto vars:     Size  Location     Type
   365 ;;		None
   366 ;; Return value:  Size  Location     Type
   367 ;;                  1    wreg      void 
   368 ;; Registers used:
   369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   370 ;; Tracked objects:
   371 ;;		On entry : 0/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   375 ;;      Params:         0       0       0       0       0       0       0
   376 ;;      Locals:         0       0       0       0       0       0       0
   377 ;;      Temps:          0       0       0       0       0       0       0
   378 ;;      Totals:         0       0       0       0       0       0       0
   379 ;;Total ram usage:        0 bytes
   380 ;; Hardware stack levels required when called:    7
   381 ;; This function calls:
   382 ;;		_LCD_init
   383 ;;		_displayInterface
   384 ;;		_global_init
   385 ;;		_timer1_init
   386 ;; This function is called by:
   387 ;;		Startup code after reset
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           
   391                           	psect	text0
   392  000D6C                     __ptext0:
   393                           	opt stack 0
   394  000D6C                     _main:
   395                           	opt stack 24
   396                           
   397                           ;exLCD.c: 217: global_init();
   398                           
   399                           ;incstack = 0
   400  000D6C  ECFE  F006         	call	_global_init	;wreg free
   401                           
   402                           ;exLCD.c: 218: LCD_init();
   403  000D70  ECF6  F006         	call	_LCD_init	;wreg free
   404                           
   405                           ;exLCD.c: 219: timer1_init();
   406  000D74  ECEC  F006         	call	_timer1_init	;wreg free
   407                           
   408                           ;exLCD.c: 221: displayInterface();
   409  000D78  EC09  F003         	call	_displayInterface	;wreg free
   410  000D7C                     l1826:
   411                           
   412                           ;exLCD.c: 223: if(change){displayInterface();change=0;}
   413  000D7C  5030               	movf	_change,w,c	;volatile
   414  000D7E  1031               	iorwf	_change+1,w,c	;volatile
   415  000D80  B4D8               	btfsc	status,2,c
   416  000D82  D7FC               	goto	l1826
   417  000D84  EC09  F003         	call	_displayInterface	;wreg free
   418  000D88  0E00               	movlw	0
   419  000D8A  6E31               	movwf	_change+1,c	;volatile
   420  000D8C  0E00               	movlw	0
   421  000D8E  6E30               	movwf	_change,c	;volatile
   422  000D90  D7F5               	goto	l1826
   423  000D92                     __end_of_main:
   424                           	opt stack 0
   425                           tblptru	equ	0xFF8
   426                           tblptrh	equ	0xFF7
   427                           tblptrl	equ	0xFF6
   428                           tablat	equ	0xFF5
   429                           postinc0	equ	0xFEE
   430                           postdec1	equ	0xFE5
   431                           fsr1l	equ	0xFE1
   432                           status	equ	0xFD8
   433                           
   434 ;; *************** function _timer1_init *****************
   435 ;; Defined at:
   436 ;;		line 147 in file "exLCD.c"
   437 ;; Parameters:    Size  Location     Type
   438 ;;		None
   439 ;; Auto vars:     Size  Location     Type
   440 ;;		None
   441 ;; Return value:  Size  Location     Type
   442 ;;                  1    wreg      void 
   443 ;; Registers used:
   444 ;;		wreg, status,2
   445 ;; Tracked objects:
   446 ;;		On entry : 0/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   450 ;;      Params:         0       0       0       0       0       0       0
   451 ;;      Locals:         0       0       0       0       0       0       0
   452 ;;      Temps:          0       0       0       0       0       0       0
   453 ;;      Totals:         0       0       0       0       0       0       0
   454 ;;Total ram usage:        0 bytes
   455 ;; Hardware stack levels used:    1
   456 ;; Hardware stack levels required when called:    2
   457 ;; This function calls:
   458 ;;		Nothing
   459 ;; This function is called by:
   460 ;;		_main
   461 ;; This function uses a non-reentrant model
   462 ;;
   463                           
   464                           	psect	text1
   465  000DD8                     __ptext1:
   466                           	opt stack 0
   467  000DD8                     _timer1_init:
   468                           	opt stack 28
   469                           
   470                           ;exLCD.c: 150: T1CON = 0x0E;
   471                           
   472                           ;incstack = 0
   473  000DD8  0E0E               	movlw	14
   474  000DDA  6ECD               	movwf	4045,c	;volatile
   475                           
   476                           ;exLCD.c: 153: TMR1H=0x80;
   477  000DDC  0E80               	movlw	128
   478  000DDE  6ECF               	movwf	4047,c	;volatile
   479                           
   480                           ;exLCD.c: 154: TMR1L=0;
   481  000DE0  0E00               	movlw	0
   482  000DE2  6ECE               	movwf	4046,c	;volatile
   483                           
   484                           ;exLCD.c: 157: PIR1bits.TMR1IF=0;
   485  000DE4  909E               	bcf	3998,0,c	;volatile
   486                           
   487                           ;exLCD.c: 158: PIE1bits.TMR1IE=1;
   488  000DE6  809D               	bsf	3997,0,c	;volatile
   489                           
   490                           ;exLCD.c: 161: T1CONbits.TMR1ON = 1;
   491  000DE8  80CD               	bsf	4045,0,c	;volatile
   492  000DEA  0012               	return		;funcret
   493  000DEC                     __end_of_timer1_init:
   494                           	opt stack 0
   495                           tblptru	equ	0xFF8
   496                           tblptrh	equ	0xFF7
   497                           tblptrl	equ	0xFF6
   498                           tablat	equ	0xFF5
   499                           postinc0	equ	0xFEE
   500                           postdec1	equ	0xFE5
   501                           fsr1l	equ	0xFE1
   502                           status	equ	0xFD8
   503                           
   504 ;; *************** function _global_init *****************
   505 ;; Defined at:
   506 ;;		line 141 in file "exLCD.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;		None
   509 ;; Auto vars:     Size  Location     Type
   510 ;;		None
   511 ;; Return value:  Size  Location     Type
   512 ;;                  1    wreg      void 
   513 ;; Registers used:
   514 ;;		None
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   520 ;;      Params:         0       0       0       0       0       0       0
   521 ;;      Locals:         0       0       0       0       0       0       0
   522 ;;      Temps:          0       0       0       0       0       0       0
   523 ;;      Totals:         0       0       0       0       0       0       0
   524 ;;Total ram usage:        0 bytes
   525 ;; Hardware stack levels used:    1
   526 ;; Hardware stack levels required when called:    2
   527 ;; This function calls:
   528 ;;		Nothing
   529 ;; This function is called by:
   530 ;;		_main
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534                           	psect	text2
   535  000DFC                     __ptext2:
   536                           	opt stack 0
   537  000DFC                     _global_init:
   538                           	opt stack 28
   539                           
   540                           ;exLCD.c: 143: RCONbits.IPEN = 1;
   541                           
   542                           ;incstack = 0
   543  000DFC  8ED0               	bsf	4048,7,c	;volatile
   544                           
   545                           ;exLCD.c: 144: INTCONbits.GIEH = 1;
   546  000DFE  8EF2               	bsf	intcon,7,c	;volatile
   547  000E00  0012               	return		;funcret
   548  000E02                     __end_of_global_init:
   549                           	opt stack 0
   550                           tblptru	equ	0xFF8
   551                           tblptrh	equ	0xFF7
   552                           tblptrl	equ	0xFF6
   553                           tablat	equ	0xFF5
   554                           intcon	equ	0xFF2
   555                           postinc0	equ	0xFEE
   556                           postdec1	equ	0xFE5
   557                           fsr1l	equ	0xFE1
   558                           status	equ	0xFD8
   559                           
   560 ;; *************** function _displayInterface *****************
   561 ;; Defined at:
   562 ;;		line 174 in file "exLCD.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;		None
   565 ;; Auto vars:     Size  Location     Type
   566 ;;  chrHours        5   42[COMRAM] unsigned char [5]
   567 ;;  dummy           2   40[COMRAM] int 
   568 ;; Return value:  Size  Location     Type
   569 ;;                  1    wreg      void 
   570 ;; Registers used:
   571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   577 ;;      Params:         0       0       0       0       0       0       0
   578 ;;      Locals:         7       0       0       0       0       0       0
   579 ;;      Temps:          0       0       0       0       0       0       0
   580 ;;      Totals:         7       0       0       0       0       0       0
   581 ;;Total ram usage:        7 bytes
   582 ;; Hardware stack levels used:    1
   583 ;; Hardware stack levels required when called:    5
   584 ;; This function calls:
   585 ;;		_BusyXLCD
   586 ;;		_SetDDRamAddr
   587 ;;		_WriteCmdXLCD
   588 ;;		_putrsXLCD
   589 ;;		_putsXLCD
   590 ;;		_sprintf
   591 ;; This function is called by:
   592 ;;		_main
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           	psect	text3
   597  000612                     __ptext3:
   598                           	opt stack 0
   599  000612                     _displayInterface:
   600                           	opt stack 25
   601                           
   602                           ;exLCD.c: 176: int dummy = 2;
   603                           
   604                           ;incstack = 0
   605  000612  0E00               	movlw	0
   606  000614  6E2A               	movwf	displayInterface@dummy+1,c
   607  000616  0E02               	movlw	2
   608  000618  6E29               	movwf	displayInterface@dummy,c
   609  00061A                     l1760:
   610  00061A  EC4D  F006         	call	_BusyXLCD	;wreg free
   611  00061E  0900               	iorlw	0
   612  000620  A4D8               	btfss	status,2,c
   613  000622  D7FB               	goto	l1760
   614                           
   615                           ;exLCD.c: 180: WriteCmdXLCD(0b00001011);
   616  000624  0E0B               	movlw	11
   617  000626  EC2E  F006         	call	_WriteCmdXLCD
   618  00062A                     l1764:
   619  00062A  EC4D  F006         	call	_BusyXLCD	;wreg free
   620  00062E  0900               	iorlw	0
   621  000630  A4D8               	btfss	status,2,c
   622  000632  D7FB               	goto	l1764
   623                           
   624                           ;exLCD.c: 182: WriteCmdXLCD(0b00001101);
   625  000634  0E0D               	movlw	13
   626  000636  EC2E  F006         	call	_WriteCmdXLCD
   627  00063A                     l1768:
   628  00063A  EC4D  F006         	call	_BusyXLCD	;wreg free
   629  00063E  0900               	iorlw	0
   630  000640  A4D8               	btfss	status,2,c
   631  000642  D7FB               	goto	l1768
   632                           
   633                           ;exLCD.c: 186: SetDDRamAddr(0x01);
   634  000644  0E01               	movlw	1
   635  000646  EC9F  F005         	call	_SetDDRamAddr
   636                           
   637                           ;exLCD.c: 187: if(hours<10){sprintf(chrHours,"0%d",hours);}
   638  00064A  BE33               	btfsc	_hours+1,7,c	;volatile
   639  00064C  D006               	goto	l1774
   640  00064E  5033               	movf	_hours+1,w,c	;volatile
   641  000650  E113               	bnz	l1776
   642  000652  0E0A               	movlw	10
   643  000654  5C32               	subwf	_hours,w,c	;volatile
   644  000656  B0D8               	btfsc	status,0,c
   645  000658  D00F               	goto	l1776
   646  00065A                     l1774:
   647  00065A  0E2B               	movlw	low displayInterface@chrHours
   648  00065C  6E1B               	movwf	sprintf@sp,c
   649  00065E  0E00               	movlw	high displayInterface@chrHours
   650  000660  6E1C               	movwf	sprintf@sp+1,c
   651  000662  0E0B               	movlw	low STR_1
   652  000664  6E1D               	movwf	sprintf@f,c
   653  000666  0E06               	movlw	high STR_1
   654  000668  6E1E               	movwf	sprintf@f+1,c
   655  00066A  C032  F01F         	movff	_hours,?_sprintf+4	;volatile
   656  00066E  C033  F020         	movff	_hours+1,?_sprintf+5	;volatile
   657  000672  ECD8  F003         	call	_sprintf	;wreg free
   658  000676  D00E               	goto	l1778
   659  000678                     l1776:
   660                           
   661                           ;exLCD.c: 188: else{sprintf(chrHours,"%d",hours);}
   662  000678  0E2B               	movlw	low displayInterface@chrHours
   663  00067A  6E1B               	movwf	sprintf@sp,c
   664  00067C  0E00               	movlw	high displayInterface@chrHours
   665  00067E  6E1C               	movwf	sprintf@sp+1,c
   666  000680  0E0C               	movlw	low (STR_1+1)
   667  000682  6E1D               	movwf	sprintf@f,c
   668  000684  0E06               	movlw	high (STR_1+1)
   669  000686  6E1E               	movwf	sprintf@f+1,c
   670  000688  C032  F01F         	movff	_hours,?_sprintf+4	;volatile
   671  00068C  C033  F020         	movff	_hours+1,?_sprintf+5	;volatile
   672  000690  ECD8  F003         	call	_sprintf	;wreg free
   673  000694                     l1778:
   674                           
   675                           ;exLCD.c: 189: putsXLCD(chrHours);
   676  000694  0E2B               	movlw	low displayInterface@chrHours
   677  000696  6E10               	movwf	putsXLCD@buffer,c
   678  000698  0E00               	movlw	high displayInterface@chrHours
   679  00069A  6E11               	movwf	putsXLCD@buffer+1,c
   680  00069C  EC9F  F006         	call	_putsXLCD	;wreg free
   681  0006A0                     l1780:
   682  0006A0  EC4D  F006         	call	_BusyXLCD	;wreg free
   683  0006A4  0900               	iorlw	0
   684  0006A6  A4D8               	btfss	status,2,c
   685  0006A8  D7FB               	goto	l1780
   686                           
   687                           ;exLCD.c: 192: SetDDRamAddr(0x03);
   688  0006AA  0E03               	movlw	3
   689  0006AC  EC9F  F005         	call	_SetDDRamAddr
   690                           
   691                           ;exLCD.c: 193: putrsXLCD(":");
   692  0006B0  0E0F               	movlw	low STR_3
   693  0006B2  6E10               	movwf	putrsXLCD@buffer,c
   694  0006B4  0E06               	movlw	high STR_3
   695  0006B6  6E11               	movwf	putrsXLCD@buffer+1,c
   696  0006B8  EC85  F006         	call	_putrsXLCD	;wreg free
   697  0006BC                     l1786:
   698  0006BC  EC4D  F006         	call	_BusyXLCD	;wreg free
   699  0006C0  0900               	iorlw	0
   700  0006C2  A4D8               	btfss	status,2,c
   701  0006C4  D7FB               	goto	l1786
   702                           
   703                           ;exLCD.c: 196: SetDDRamAddr(0x04);
   704  0006C6  0E04               	movlw	4
   705  0006C8  EC9F  F005         	call	_SetDDRamAddr
   706                           
   707                           ;exLCD.c: 197: if(minutes<10){sprintf(chrHours,"0%d",minutes);}
   708  0006CC  BE37               	btfsc	_minutes+1,7,c	;volatile
   709  0006CE  D006               	goto	l1792
   710  0006D0  5037               	movf	_minutes+1,w,c	;volatile
   711  0006D2  E113               	bnz	l1794
   712  0006D4  0E0A               	movlw	10
   713  0006D6  5C36               	subwf	_minutes,w,c	;volatile
   714  0006D8  B0D8               	btfsc	status,0,c
   715  0006DA  D00F               	goto	l1794
   716  0006DC                     l1792:
   717  0006DC  0E2B               	movlw	low displayInterface@chrHours
   718  0006DE  6E1B               	movwf	sprintf@sp,c
   719  0006E0  0E00               	movlw	high displayInterface@chrHours
   720  0006E2  6E1C               	movwf	sprintf@sp+1,c
   721  0006E4  0E0B               	movlw	low STR_1
   722  0006E6  6E1D               	movwf	sprintf@f,c
   723  0006E8  0E06               	movlw	high STR_1
   724  0006EA  6E1E               	movwf	sprintf@f+1,c
   725  0006EC  C036  F01F         	movff	_minutes,?_sprintf+4	;volatile
   726  0006F0  C037  F020         	movff	_minutes+1,?_sprintf+5	;volatile
   727  0006F4  ECD8  F003         	call	_sprintf	;wreg free
   728  0006F8  D00E               	goto	l1796
   729  0006FA                     l1794:
   730                           
   731                           ;exLCD.c: 198: else{sprintf(chrHours,"%d",minutes);}
   732  0006FA  0E2B               	movlw	low displayInterface@chrHours
   733  0006FC  6E1B               	movwf	sprintf@sp,c
   734  0006FE  0E00               	movlw	high displayInterface@chrHours
   735  000700  6E1C               	movwf	sprintf@sp+1,c
   736  000702  0E0C               	movlw	low (STR_1+1)
   737  000704  6E1D               	movwf	sprintf@f,c
   738  000706  0E06               	movlw	high (STR_1+1)
   739  000708  6E1E               	movwf	sprintf@f+1,c
   740  00070A  C036  F01F         	movff	_minutes,?_sprintf+4	;volatile
   741  00070E  C037  F020         	movff	_minutes+1,?_sprintf+5	;volatile
   742  000712  ECD8  F003         	call	_sprintf	;wreg free
   743  000716                     l1796:
   744                           
   745                           ;exLCD.c: 199: putsXLCD(chrHours);
   746  000716  0E2B               	movlw	low displayInterface@chrHours
   747  000718  6E10               	movwf	putsXLCD@buffer,c
   748  00071A  0E00               	movlw	high displayInterface@chrHours
   749  00071C  6E11               	movwf	putsXLCD@buffer+1,c
   750  00071E  EC9F  F006         	call	_putsXLCD	;wreg free
   751  000722                     l1798:
   752  000722  EC4D  F006         	call	_BusyXLCD	;wreg free
   753  000726  0900               	iorlw	0
   754  000728  A4D8               	btfss	status,2,c
   755  00072A  D7FB               	goto	l1798
   756                           
   757                           ;exLCD.c: 202: SetDDRamAddr(0x06);
   758  00072C  0E06               	movlw	6
   759  00072E  EC9F  F005         	call	_SetDDRamAddr
   760                           
   761                           ;exLCD.c: 203: putrsXLCD(":");
   762  000732  0E0F               	movlw	low STR_3
   763  000734  6E10               	movwf	putrsXLCD@buffer,c
   764  000736  0E06               	movlw	high STR_3
   765  000738  6E11               	movwf	putrsXLCD@buffer+1,c
   766  00073A  EC85  F006         	call	_putrsXLCD	;wreg free
   767  00073E                     l1804:
   768  00073E  EC4D  F006         	call	_BusyXLCD	;wreg free
   769  000742  0900               	iorlw	0
   770  000744  A4D8               	btfss	status,2,c
   771  000746  D7FB               	goto	l1804
   772                           
   773                           ;exLCD.c: 206: SetDDRamAddr(0x07);
   774  000748  0E07               	movlw	7
   775  00074A  EC9F  F005         	call	_SetDDRamAddr
   776                           
   777                           ;exLCD.c: 207: if(seconds<10){sprintf(chrHours,"0%d",seconds);}
   778  00074E  BE35               	btfsc	_seconds+1,7,c	;volatile
   779  000750  D006               	goto	l1810
   780  000752  5035               	movf	_seconds+1,w,c	;volatile
   781  000754  E113               	bnz	l1812
   782  000756  0E0A               	movlw	10
   783  000758  5C34               	subwf	_seconds,w,c	;volatile
   784  00075A  B0D8               	btfsc	status,0,c
   785  00075C  D00F               	goto	l1812
   786  00075E                     l1810:
   787  00075E  0E2B               	movlw	low displayInterface@chrHours
   788  000760  6E1B               	movwf	sprintf@sp,c
   789  000762  0E00               	movlw	high displayInterface@chrHours
   790  000764  6E1C               	movwf	sprintf@sp+1,c
   791  000766  0E0B               	movlw	low STR_1
   792  000768  6E1D               	movwf	sprintf@f,c
   793  00076A  0E06               	movlw	high STR_1
   794  00076C  6E1E               	movwf	sprintf@f+1,c
   795  00076E  C034  F01F         	movff	_seconds,?_sprintf+4	;volatile
   796  000772  C035  F020         	movff	_seconds+1,?_sprintf+5	;volatile
   797  000776  ECD8  F003         	call	_sprintf	;wreg free
   798  00077A  D00E               	goto	l1814
   799  00077C                     l1812:
   800                           
   801                           ;exLCD.c: 208: else{sprintf(chrHours,"%d",seconds);}
   802  00077C  0E2B               	movlw	low displayInterface@chrHours
   803  00077E  6E1B               	movwf	sprintf@sp,c
   804  000780  0E00               	movlw	high displayInterface@chrHours
   805  000782  6E1C               	movwf	sprintf@sp+1,c
   806  000784  0E0C               	movlw	low (STR_1+1)
   807  000786  6E1D               	movwf	sprintf@f,c
   808  000788  0E06               	movlw	high (STR_1+1)
   809  00078A  6E1E               	movwf	sprintf@f+1,c
   810  00078C  C034  F01F         	movff	_seconds,?_sprintf+4	;volatile
   811  000790  C035  F020         	movff	_seconds+1,?_sprintf+5	;volatile
   812  000794  ECD8  F003         	call	_sprintf	;wreg free
   813  000798                     l1814:
   814                           
   815                           ;exLCD.c: 209: putsXLCD(chrHours);
   816  000798  0E2B               	movlw	low displayInterface@chrHours
   817  00079A  6E10               	movwf	putsXLCD@buffer,c
   818  00079C  0E00               	movlw	high displayInterface@chrHours
   819  00079E  6E11               	movwf	putsXLCD@buffer+1,c
   820  0007A0  EC9F  F006         	call	_putsXLCD	;wreg free
   821  0007A4                     l1816:
   822  0007A4  EC4D  F006         	call	_BusyXLCD	;wreg free
   823  0007A8  0900               	iorlw	0
   824  0007AA  B4D8               	btfsc	status,2,c
   825  0007AC  0012               	return	
   826  0007AE  D7FA               	goto	l1816
   827  0007B0                     __end_of_displayInterface:
   828                           	opt stack 0
   829                           tblptru	equ	0xFF8
   830                           tblptrh	equ	0xFF7
   831                           tblptrl	equ	0xFF6
   832                           tablat	equ	0xFF5
   833                           intcon	equ	0xFF2
   834                           postinc0	equ	0xFEE
   835                           postdec1	equ	0xFE5
   836                           fsr1l	equ	0xFE1
   837                           status	equ	0xFD8
   838                           
   839 ;; *************** function _sprintf *****************
   840 ;; Defined at:
   841 ;;		line 492 in file "/opt/microchip/xc8/v1.41/sources/common/doprnt.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;  sp              2   26[COMRAM] PTR unsigned char 
   844 ;;		 -> displayInterface@chrHours(5), 
   845 ;;  f               2   28[COMRAM] PTR const unsigned char 
   846 ;;		 -> STR_8(3), STR_7(4), STR_5(3), STR_4(4), 
   847 ;;		 -> STR_2(3), STR_1(4), 
   848 ;; Auto vars:     Size  Location     Type
   849 ;;  tmpval          4    0        struct .
   850 ;;  cp              3    0        PTR const unsigned char 
   851 ;;  val             2   37[COMRAM] unsigned int 
   852 ;;  ap              2   33[COMRAM] PTR void [1]
   853 ;;		 -> ?_sprintf(2), 
   854 ;;  len             2    0        unsigned int 
   855 ;;  c               1   39[COMRAM] char 
   856 ;;  prec            1   36[COMRAM] char 
   857 ;;  flag            1   35[COMRAM] unsigned char 
   858 ;; Return value:  Size  Location     Type
   859 ;;                  2   26[COMRAM] int 
   860 ;; Registers used:
   861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   867 ;;      Params:         6       0       0       0       0       0       0
   868 ;;      Locals:         7       0       0       0       0       0       0
   869 ;;      Temps:          1       0       0       0       0       0       0
   870 ;;      Totals:        14       0       0       0       0       0       0
   871 ;;Total ram usage:       14 bytes
   872 ;; Hardware stack levels used:    1
   873 ;; Hardware stack levels required when called:    3
   874 ;; This function calls:
   875 ;;		___lwdiv
   876 ;;		___lwmod
   877 ;; This function is called by:
   878 ;;		_displayInterface
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           	psect	text4
   883  0007B0                     __ptext4:
   884                           	opt stack 0
   885  0007B0                     _sprintf:
   886                           	opt stack 26
   887                           
   888                           ;doprnt.c: 494: va_list ap;
   889                           ;doprnt.c: 499: signed char c;
   890                           ;doprnt.c: 506: signed char prec;
   891                           ;doprnt.c: 508: unsigned char flag;
   892                           ;doprnt.c: 523: union {
   893                           ;doprnt.c: 524: unsigned long vd;
   894                           ;doprnt.c: 525: double integ;
   895                           ;doprnt.c: 526: } tmpval;
   896                           ;doprnt.c: 528: unsigned int val;
   897                           ;doprnt.c: 529: unsigned len;
   898                           ;doprnt.c: 530: const char * cp;
   899                           ;doprnt.c: 533: *ap = __va_start();
   900                           
   901                           ;incstack = 0
   902  0007B0  0E1F               	movlw	low (?_sprintf+4)
   903  0007B2  6E22               	movwf	sprintf@ap,c
   904  0007B4  0E00               	movlw	high (?_sprintf+4)
   905  0007B6  6E23               	movwf	sprintf@ap+1,c
   906                           
   907                           ;doprnt.c: 536: while(c = *f++) {
   908  0007B8  D08C               	goto	l1744
   909  0007BA                     l1692:
   910                           
   911                           ;doprnt.c: 538: if(c != '%')
   912  0007BA  0E25               	movlw	37
   913  0007BC  1828               	xorwf	sprintf@c,w,c
   914  0007BE  B4D8               	btfsc	status,2,c
   915  0007C0  D009               	goto	l1698
   916                           
   917                           ;doprnt.c: 540: {
   918                           ;doprnt.c: 541: ((*sp++ = (c)));
   919  0007C2  C01B  FFD9         	movff	sprintf@sp,fsr2l
   920  0007C6  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
   921  0007CA  C028  FFDF         	movff	sprintf@c,indf2
   922  0007CE  4A1B               	infsnz	sprintf@sp,f,c
   923  0007D0  2A1C               	incf	sprintf@sp+1,f,c
   924                           
   925                           ;doprnt.c: 542: continue;
   926  0007D2  D07F               	goto	l1744
   927  0007D4                     l1698:
   928                           
   929                           ;doprnt.c: 543: }
   930                           ;doprnt.c: 548: flag = 0;
   931  0007D4  0E00               	movlw	0
   932  0007D6  6E24               	movwf	sprintf@flag,c
   933                           
   934                           ;doprnt.c: 822: }
   935                           
   936                           ;doprnt.c: 813: continue;
   937                           
   938                           ;doprnt.c: 802: default:
   939                           
   940                           ;doprnt.c: 698: case 'i':
   941                           ;doprnt.c: 699: break;
   942                           
   943                           ;doprnt.c: 697: case 'd':
   944                           
   945                           ;doprnt.c: 638: goto alldone;
   946                           
   947                           ;doprnt.c: 637: case 0:
   948                           
   949                           ;doprnt.c: 635: switch(c = *f++) {
   950  0007D8  C01D  FFF6         	movff	sprintf@f,tblptrl
   951  0007DC  C01E  FFF7         	movff	sprintf@f+1,tblptrh
   952  0007E0  4A1D               	infsnz	sprintf@f,f,c
   953  0007E2  2A1E               	incf	sprintf@f+1,f,c
   954  0007E4                     	if	0	;tblptru may be non-zero
   955  0007E4                     	endif
   956  0007E4                     	if	0	;tblptru may be non-zero
   957  0007E4                     	endif
   958  0007E4  0008               	tblrd		*
   959  0007E6  CFF5 F028          	movff	tablat,sprintf@c
   960  0007EA  5028               	movf	sprintf@c,w,c
   961                           
   962                           ; Switch size 1, requested type "space"
   963                           ; Number of cases is 3, Range of values is 0 to 105
   964                           ; switch strategies available:
   965                           ; Name         Instructions Cycles
   966                           ; simple_byte           10     6 (average)
   967                           ;	Chosen strategy is simple_byte
   968  0007EC  0A00               	xorlw	0	; case 0
   969  0007EE  B4D8               	btfsc	status,2,c
   970  0007F0  D07C               	goto	l1746
   971  0007F2  0A64               	xorlw	100	; case 100
   972  0007F4  B4D8               	btfsc	status,2,c
   973  0007F6  D003               	goto	l1704
   974  0007F8  0A0D               	xorlw	13	; case 105
   975  0007FA  A4D8               	btfss	status,2,c
   976  0007FC  D06A               	goto	l1744
   977  0007FE                     l1704:
   978                           
   979                           ;doprnt.c: 1253: {
   980                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   981  0007FE  C022  FFD9         	movff	sprintf@ap,fsr2l
   982  000802  C023  FFDA         	movff	sprintf@ap+1,fsr2h
   983  000806  CFDE F026          	movff	postinc2,sprintf@val
   984  00080A  CFDD F027          	movff	postdec2,sprintf@val+1
   985  00080E  0E02               	movlw	2
   986  000810  2622               	addwf	sprintf@ap,f,c
   987  000812  0E00               	movlw	0
   988  000814  2223               	addwfc	sprintf@ap+1,f,c
   989                           
   990                           ;doprnt.c: 1261: if((int)val < 0) {
   991  000816  AE27               	btfss	sprintf@val+1,7,c
   992  000818  D006               	goto	l1714
   993                           
   994                           ;doprnt.c: 1262: flag |= 0x03;
   995  00081A  0E03               	movlw	3
   996  00081C  1224               	iorwf	sprintf@flag,f,c
   997                           
   998                           ;doprnt.c: 1263: val = -val;
   999  00081E  6C26               	negf	sprintf@val,c
  1000  000820  1E27               	comf	sprintf@val+1,f,c
  1001  000822  B0D8               	btfsc	status,0,c
  1002  000824  2A27               	incf	sprintf@val+1,f,c
  1003  000826                     l1714:
  1004                           
  1005                           ;doprnt.c: 1264: }
  1006                           ;doprnt.c: 1266: }
  1007                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1008  000826  0E01               	movlw	1
  1009  000828  6E28               	movwf	sprintf@c,c
  1010  00082A                     l1716:
  1011  00082A  0E05               	movlw	5
  1012  00082C  1828               	xorwf	sprintf@c,w,c
  1013  00082E  B4D8               	btfsc	status,2,c
  1014  000830  D012               	goto	l1728
  1015                           
  1016                           ;doprnt.c: 1306: if(val < dpowers[c])
  1017  000832  5028               	movf	sprintf@c,w,c
  1018  000834  0D02               	mullw	2
  1019  000836  0E01               	movlw	low _dpowers
  1020  000838  24F3               	addwf	prodl,w,c
  1021  00083A  6EF6               	movwf	tblptrl,c
  1022  00083C  0E06               	movlw	high _dpowers
  1023  00083E  20F4               	addwfc	prodh,w,c
  1024  000840  6EF7               	movwf	tblptrh,c
  1025  000842                     	if	0	;There are less than 3 active tblptr bytes
  1026  000842                     	endif
  1027  000842  0009               	tblrd		*+
  1028  000844  50F5               	movf	tablat,w,c
  1029  000846  5C26               	subwf	sprintf@val,w,c
  1030  000848  0009               	tblrd		*+
  1031  00084A  50F5               	movf	tablat,w,c
  1032  00084C  5827               	subwfb	sprintf@val+1,w,c
  1033  00084E  A0D8               	btfss	status,0,c
  1034  000850  D002               	goto	l1728
  1035                           
  1036                           ;doprnt.c: 1307: break;
  1037  000852  2A28               	incf	sprintf@c,f,c
  1038  000854  D7EA               	goto	l1716
  1039  000856                     l1728:
  1040                           
  1041                           ;doprnt.c: 1422: {
  1042                           ;doprnt.c: 1438: if(flag & 0x03)
  1043  000856  C024  F021         	movff	sprintf@flag,??_sprintf
  1044  00085A  0E03               	movlw	3
  1045  00085C  1621               	andwf	??_sprintf,f,c
  1046  00085E  B4D8               	btfsc	status,2,c
  1047  000860  D008               	goto	l1734
  1048                           
  1049                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  1050  000862  C01B  FFD9         	movff	sprintf@sp,fsr2l
  1051  000866  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  1052  00086A  0E2D               	movlw	45
  1053  00086C  6EDF               	movwf	indf2,c
  1054  00086E  4A1B               	infsnz	sprintf@sp,f,c
  1055  000870  2A1C               	incf	sprintf@sp+1,f,c
  1056  000872                     l1734:
  1057                           
  1058                           ;doprnt.c: 1469: }
  1059                           ;doprnt.c: 1472: prec = c;
  1060  000872  C028  F025         	movff	sprintf@c,sprintf@prec
  1061                           
  1062                           ;doprnt.c: 1474: while(prec--) {
  1063  000876  D029               	goto	l1742
  1064  000878                     l1736:
  1065                           
  1066                           ;doprnt.c: 1478: {
  1067                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1068  000878  5025               	movf	sprintf@prec,w,c
  1069  00087A  0D02               	mullw	2
  1070  00087C  0E01               	movlw	low _dpowers
  1071  00087E  24F3               	addwf	prodl,w,c
  1072  000880  6EF6               	movwf	tblptrl,c
  1073  000882  0E06               	movlw	high _dpowers
  1074  000884  20F4               	addwfc	prodh,w,c
  1075  000886  6EF7               	movwf	tblptrh,c
  1076  000888                     	if	0	;There are less than 3 active tblptr bytes
  1077  000888                     	endif
  1078  000888  0009               	tblrd		*+
  1079  00088A  CFF5 F011          	movff	tablat,___lwdiv@divisor
  1080  00088E  000A               	tblrd		*-
  1081  000890  CFF5 F012          	movff	tablat,___lwdiv@divisor+1
  1082  000894  C026  F00F         	movff	sprintf@val,___lwdiv@dividend
  1083  000898  C027  F010         	movff	sprintf@val+1,___lwdiv@dividend+1
  1084  00089C  EC76  F005         	call	___lwdiv	;wreg free
  1085  0008A0  C00F  F016         	movff	?___lwdiv,___lwmod@dividend
  1086  0008A4  C010  F017         	movff	?___lwdiv+1,___lwmod@dividend+1
  1087  0008A8  0E00               	movlw	0
  1088  0008AA  6E19               	movwf	___lwmod@divisor+1,c
  1089  0008AC  0E0A               	movlw	10
  1090  0008AE  6E18               	movwf	___lwmod@divisor,c
  1091  0008B0  ECEE  F005         	call	___lwmod	;wreg free
  1092  0008B4  5016               	movf	?___lwmod,w,c
  1093  0008B6  0F30               	addlw	48
  1094  0008B8  6E28               	movwf	sprintf@c,c
  1095                           
  1096                           ;doprnt.c: 1523: }
  1097                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1098  0008BA  C01B  FFD9         	movff	sprintf@sp,fsr2l
  1099  0008BE  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  1100  0008C2  C028  FFDF         	movff	sprintf@c,indf2
  1101  0008C6  4A1B               	infsnz	sprintf@sp,f,c
  1102  0008C8  2A1C               	incf	sprintf@sp+1,f,c
  1103  0008CA                     l1742:
  1104  0008CA  0625               	decf	sprintf@prec,f,c
  1105  0008CC  2825               	incf	sprintf@prec,w,c
  1106  0008CE  A4D8               	btfss	status,2,c
  1107  0008D0  D7D3               	goto	l1736
  1108  0008D2                     l1744:
  1109  0008D2  C01D  FFF6         	movff	sprintf@f,tblptrl
  1110  0008D6  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  1111  0008DA  4A1D               	infsnz	sprintf@f,f,c
  1112  0008DC  2A1E               	incf	sprintf@f+1,f,c
  1113  0008DE                     	if	0	;tblptru may be non-zero
  1114  0008DE                     	endif
  1115  0008DE                     	if	0	;tblptru may be non-zero
  1116  0008DE                     	endif
  1117  0008DE  0008               	tblrd		*
  1118  0008E0  CFF5 F028          	movff	tablat,sprintf@c
  1119  0008E4  5028               	movf	sprintf@c,w,c
  1120  0008E6  A4D8               	btfss	status,2,c
  1121  0008E8  D768               	goto	l1692
  1122  0008EA                     l1746:
  1123                           
  1124                           ;doprnt.c: 1538: *sp = 0;
  1125  0008EA  C01B  FFD9         	movff	sprintf@sp,fsr2l
  1126  0008EE  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  1127  0008F2  0E00               	movlw	0
  1128  0008F4  6EDF               	movwf	indf2,c
  1129  0008F6  0012               	return	
  1130  0008F8                     __end_of_sprintf:
  1131                           	opt stack 0
  1132                           tblptru	equ	0xFF8
  1133                           tblptrh	equ	0xFF7
  1134                           tblptrl	equ	0xFF6
  1135                           tablat	equ	0xFF5
  1136                           prodh	equ	0xFF4
  1137                           prodl	equ	0xFF3
  1138                           intcon	equ	0xFF2
  1139                           postinc0	equ	0xFEE
  1140                           postdec1	equ	0xFE5
  1141                           fsr1l	equ	0xFE1
  1142                           indf2	equ	0xFDF
  1143                           postinc2	equ	0xFDE
  1144                           postdec2	equ	0xFDD
  1145                           fsr2h	equ	0xFDA
  1146                           fsr2l	equ	0xFD9
  1147                           status	equ	0xFD8
  1148                           
  1149 ;; *************** function ___lwmod *****************
  1150 ;; Defined at:
  1151 ;;		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/lwmod.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;  dividend        2   21[COMRAM] unsigned int 
  1154 ;;  divisor         2   23[COMRAM] unsigned int 
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;  counter         1   25[COMRAM] unsigned char 
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  2   21[COMRAM] unsigned int 
  1159 ;; Registers used:
  1160 ;;		wreg, status,2, status,0
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1166 ;;      Params:         4       0       0       0       0       0       0
  1167 ;;      Locals:         1       0       0       0       0       0       0
  1168 ;;      Temps:          0       0       0       0       0       0       0
  1169 ;;      Totals:         5       0       0       0       0       0       0
  1170 ;;Total ram usage:        5 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; Hardware stack levels required when called:    2
  1173 ;; This function calls:
  1174 ;;		Nothing
  1175 ;; This function is called by:
  1176 ;;		_sprintf
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           	psect	text5
  1181  000BDC                     __ptext5:
  1182                           	opt stack 0
  1183  000BDC                     ___lwmod:
  1184                           	opt stack 26
  1185                           
  1186                           ;incstack = 0
  1187  000BDC  5018               	movf	___lwmod@divisor,w,c
  1188  000BDE  1019               	iorwf	___lwmod@divisor+1,w,c
  1189  000BE0  B4D8               	btfsc	status,2,c
  1190  000BE2  D018               	goto	l753
  1191  000BE4  0E01               	movlw	1
  1192  000BE6  6E1A               	movwf	___lwmod@counter,c
  1193  000BE8  D004               	goto	l1576
  1194  000BEA                     l1574:
  1195  000BEA  90D8               	bcf	status,0,c
  1196  000BEC  3618               	rlcf	___lwmod@divisor,f,c
  1197  000BEE  3619               	rlcf	___lwmod@divisor+1,f,c
  1198  000BF0  2A1A               	incf	___lwmod@counter,f,c
  1199  000BF2                     l1576:
  1200  000BF2  AE19               	btfss	___lwmod@divisor+1,7,c
  1201  000BF4  D7FA               	goto	l1574
  1202  000BF6                     l1578:
  1203  000BF6  5018               	movf	___lwmod@divisor,w,c
  1204  000BF8  5C16               	subwf	___lwmod@dividend,w,c
  1205  000BFA  5019               	movf	___lwmod@divisor+1,w,c
  1206  000BFC  5817               	subwfb	___lwmod@dividend+1,w,c
  1207  000BFE  A0D8               	btfss	status,0,c
  1208  000C00  D004               	goto	l1582
  1209  000C02  5018               	movf	___lwmod@divisor,w,c
  1210  000C04  5E16               	subwf	___lwmod@dividend,f,c
  1211  000C06  5019               	movf	___lwmod@divisor+1,w,c
  1212  000C08  5A17               	subwfb	___lwmod@dividend+1,f,c
  1213  000C0A                     l1582:
  1214  000C0A  90D8               	bcf	status,0,c
  1215  000C0C  3219               	rrcf	___lwmod@divisor+1,f,c
  1216  000C0E  3218               	rrcf	___lwmod@divisor,f,c
  1217  000C10  2E1A               	decfsz	___lwmod@counter,f,c
  1218  000C12  D7F1               	goto	l1578
  1219  000C14                     l753:
  1220  000C14  C016  F016         	movff	___lwmod@dividend,?___lwmod
  1221  000C18  C017  F017         	movff	___lwmod@dividend+1,?___lwmod+1
  1222  000C1C  0012               	return		;funcret
  1223  000C1E                     __end_of___lwmod:
  1224                           	opt stack 0
  1225                           tblptru	equ	0xFF8
  1226                           tblptrh	equ	0xFF7
  1227                           tblptrl	equ	0xFF6
  1228                           tablat	equ	0xFF5
  1229                           prodh	equ	0xFF4
  1230                           prodl	equ	0xFF3
  1231                           intcon	equ	0xFF2
  1232                           postinc0	equ	0xFEE
  1233                           postdec1	equ	0xFE5
  1234                           fsr1l	equ	0xFE1
  1235                           indf2	equ	0xFDF
  1236                           postinc2	equ	0xFDE
  1237                           postdec2	equ	0xFDD
  1238                           fsr2h	equ	0xFDA
  1239                           fsr2l	equ	0xFD9
  1240                           status	equ	0xFD8
  1241                           
  1242 ;; *************** function ___lwdiv *****************
  1243 ;; Defined at:
  1244 ;;		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/lwdiv.c"
  1245 ;; Parameters:    Size  Location     Type
  1246 ;;  dividend        2   14[COMRAM] unsigned int 
  1247 ;;  divisor         2   16[COMRAM] unsigned int 
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;  quotient        2   18[COMRAM] unsigned int 
  1250 ;;  counter         1   20[COMRAM] unsigned char 
  1251 ;; Return value:  Size  Location     Type
  1252 ;;                  2   14[COMRAM] unsigned int 
  1253 ;; Registers used:
  1254 ;;		wreg, status,2, status,0
  1255 ;; Tracked objects:
  1256 ;;		On entry : 0/0
  1257 ;;		On exit  : 0/0
  1258 ;;		Unchanged: 0/0
  1259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1260 ;;      Params:         4       0       0       0       0       0       0
  1261 ;;      Locals:         3       0       0       0       0       0       0
  1262 ;;      Temps:          0       0       0       0       0       0       0
  1263 ;;      Totals:         7       0       0       0       0       0       0
  1264 ;;Total ram usage:        7 bytes
  1265 ;; Hardware stack levels used:    1
  1266 ;; Hardware stack levels required when called:    2
  1267 ;; This function calls:
  1268 ;;		Nothing
  1269 ;; This function is called by:
  1270 ;;		_sprintf
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           	psect	text6
  1275  000AEC                     __ptext6:
  1276                           	opt stack 0
  1277  000AEC                     ___lwdiv:
  1278                           	opt stack 26
  1279                           
  1280                           ;incstack = 0
  1281  000AEC  0E00               	movlw	0
  1282  000AEE  6E14               	movwf	___lwdiv@quotient+1,c
  1283  000AF0  0E00               	movlw	0
  1284  000AF2  6E13               	movwf	___lwdiv@quotient,c
  1285  000AF4  5011               	movf	___lwdiv@divisor,w,c
  1286  000AF6  1012               	iorwf	___lwdiv@divisor+1,w,c
  1287  000AF8  B4D8               	btfsc	status,2,c
  1288  000AFA  D01C               	goto	l743
  1289  000AFC  0E01               	movlw	1
  1290  000AFE  6E15               	movwf	___lwdiv@counter,c
  1291  000B00  D004               	goto	l1556
  1292  000B02                     l1554:
  1293  000B02  90D8               	bcf	status,0,c
  1294  000B04  3611               	rlcf	___lwdiv@divisor,f,c
  1295  000B06  3612               	rlcf	___lwdiv@divisor+1,f,c
  1296  000B08  2A15               	incf	___lwdiv@counter,f,c
  1297  000B0A                     l1556:
  1298  000B0A  AE12               	btfss	___lwdiv@divisor+1,7,c
  1299  000B0C  D7FA               	goto	l1554
  1300  000B0E                     l1558:
  1301  000B0E  90D8               	bcf	status,0,c
  1302  000B10  3613               	rlcf	___lwdiv@quotient,f,c
  1303  000B12  3614               	rlcf	___lwdiv@quotient+1,f,c
  1304  000B14  5011               	movf	___lwdiv@divisor,w,c
  1305  000B16  5C0F               	subwf	___lwdiv@dividend,w,c
  1306  000B18  5012               	movf	___lwdiv@divisor+1,w,c
  1307  000B1A  5810               	subwfb	___lwdiv@dividend+1,w,c
  1308  000B1C  A0D8               	btfss	status,0,c
  1309  000B1E  D005               	goto	l1566
  1310  000B20  5011               	movf	___lwdiv@divisor,w,c
  1311  000B22  5E0F               	subwf	___lwdiv@dividend,f,c
  1312  000B24  5012               	movf	___lwdiv@divisor+1,w,c
  1313  000B26  5A10               	subwfb	___lwdiv@dividend+1,f,c
  1314  000B28  8013               	bsf	___lwdiv@quotient,0,c
  1315  000B2A                     l1566:
  1316  000B2A  90D8               	bcf	status,0,c
  1317  000B2C  3212               	rrcf	___lwdiv@divisor+1,f,c
  1318  000B2E  3211               	rrcf	___lwdiv@divisor,f,c
  1319  000B30  2E15               	decfsz	___lwdiv@counter,f,c
  1320  000B32  D7ED               	goto	l1558
  1321  000B34                     l743:
  1322  000B34  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  1323  000B38  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1324  000B3C  0012               	return		;funcret
  1325  000B3E                     __end_of___lwdiv:
  1326                           	opt stack 0
  1327                           tblptru	equ	0xFF8
  1328                           tblptrh	equ	0xFF7
  1329                           tblptrl	equ	0xFF6
  1330                           tablat	equ	0xFF5
  1331                           prodh	equ	0xFF4
  1332                           prodl	equ	0xFF3
  1333                           intcon	equ	0xFF2
  1334                           postinc0	equ	0xFEE
  1335                           postdec1	equ	0xFE5
  1336                           fsr1l	equ	0xFE1
  1337                           indf2	equ	0xFDF
  1338                           postinc2	equ	0xFDE
  1339                           postdec2	equ	0xFDD
  1340                           fsr2h	equ	0xFDA
  1341                           fsr2l	equ	0xFD9
  1342                           status	equ	0xFD8
  1343                           
  1344 ;; *************** function _putsXLCD *****************
  1345 ;; Defined at:
  1346 ;;		line 18 in file "XLCD/putsxlcd.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;  buffer          2   15[COMRAM] PTR unsigned char 
  1349 ;;		 -> displayInterface@chrHours(5), 
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;		None
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  1    wreg      void 
  1354 ;; Registers used:
  1355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1361 ;;      Params:         2       0       0       0       0       0       0
  1362 ;;      Locals:         0       0       0       0       0       0       0
  1363 ;;      Temps:          0       0       0       0       0       0       0
  1364 ;;      Totals:         2       0       0       0       0       0       0
  1365 ;;Total ram usage:        2 bytes
  1366 ;; Hardware stack levels used:    1
  1367 ;; Hardware stack levels required when called:    4
  1368 ;; This function calls:
  1369 ;;		_BusyXLCD
  1370 ;;		_WriteDataXLCD
  1371 ;; This function is called by:
  1372 ;;		_displayInterface
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376                           	psect	text7
  1377  000D3E                     __ptext7:
  1378                           	opt stack 0
  1379  000D3E                     _putsXLCD:
  1380                           	opt stack 25
  1381                           
  1382                           ;putsxlcd.c: 20: while(*buffer)
  1383                           
  1384                           ;incstack = 0
  1385  000D3E  D00E               	goto	l1688
  1386  000D40                     l1682:
  1387  000D40  EC4D  F006         	call	_BusyXLCD	;wreg free
  1388  000D44  0900               	iorlw	0
  1389  000D46  A4D8               	btfss	status,2,c
  1390  000D48  D7FB               	goto	l1682
  1391                           
  1392                           ;putsxlcd.c: 23: WriteDataXLCD(*buffer);
  1393  000D4A  C010  FFD9         	movff	putsXLCD@buffer,fsr2l
  1394  000D4E  C011  FFDA         	movff	putsXLCD@buffer+1,fsr2h
  1395  000D52  50DF               	movf	indf2,w,c
  1396  000D54  EC0F  F006         	call	_WriteDataXLCD
  1397                           
  1398                           ;putsxlcd.c: 24: buffer++;
  1399  000D58  4A10               	infsnz	putsXLCD@buffer,f,c
  1400  000D5A  2A11               	incf	putsXLCD@buffer+1,f,c
  1401  000D5C                     l1688:
  1402  000D5C  C010  FFD9         	movff	putsXLCD@buffer,fsr2l
  1403  000D60  C011  FFDA         	movff	putsXLCD@buffer+1,fsr2h
  1404  000D64  50DF               	movf	indf2,w,c
  1405  000D66  B4D8               	btfsc	status,2,c
  1406  000D68  0012               	return	
  1407  000D6A  D7EA               	goto	l1682
  1408  000D6C                     __end_of_putsXLCD:
  1409                           	opt stack 0
  1410                           tblptru	equ	0xFF8
  1411                           tblptrh	equ	0xFF7
  1412                           tblptrl	equ	0xFF6
  1413                           tablat	equ	0xFF5
  1414                           prodh	equ	0xFF4
  1415                           prodl	equ	0xFF3
  1416                           intcon	equ	0xFF2
  1417                           postinc0	equ	0xFEE
  1418                           postdec1	equ	0xFE5
  1419                           fsr1l	equ	0xFE1
  1420                           indf2	equ	0xFDF
  1421                           postinc2	equ	0xFDE
  1422                           postdec2	equ	0xFDD
  1423                           fsr2h	equ	0xFDA
  1424                           fsr2l	equ	0xFD9
  1425                           status	equ	0xFD8
  1426                           
  1427 ;; *************** function _putrsXLCD *****************
  1428 ;; Defined at:
  1429 ;;		line 18 in file "XLCD/putrxlcd.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;  buffer          2   15[COMRAM] PTR const unsigned char 
  1432 ;;		 -> STR_6(2), STR_3(2), 
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;		None
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  1    wreg      void 
  1437 ;; Registers used:
  1438 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1444 ;;      Params:         2       0       0       0       0       0       0
  1445 ;;      Locals:         0       0       0       0       0       0       0
  1446 ;;      Temps:          0       0       0       0       0       0       0
  1447 ;;      Totals:         2       0       0       0       0       0       0
  1448 ;;Total ram usage:        2 bytes
  1449 ;; Hardware stack levels used:    1
  1450 ;; Hardware stack levels required when called:    4
  1451 ;; This function calls:
  1452 ;;		_BusyXLCD
  1453 ;;		_WriteDataXLCD
  1454 ;; This function is called by:
  1455 ;;		_displayInterface
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           	psect	text8
  1460  000D0A                     __ptext8:
  1461                           	opt stack 0
  1462  000D0A                     _putrsXLCD:
  1463                           	opt stack 25
  1464                           
  1465                           ;putrxlcd.c: 20: while(*buffer)
  1466                           
  1467                           ;incstack = 0
  1468  000D0A  D00F               	goto	l1678
  1469  000D0C                     l1672:
  1470  000D0C  EC4D  F006         	call	_BusyXLCD	;wreg free
  1471  000D10  0900               	iorlw	0
  1472  000D12  A4D8               	btfss	status,2,c
  1473  000D14  D7FB               	goto	l1672
  1474                           
  1475                           ;putrxlcd.c: 23: WriteDataXLCD(*buffer);
  1476  000D16  C010  FFF6         	movff	putrsXLCD@buffer,tblptrl
  1477  000D1A  C011  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  1478  000D1E                     	if	0	;tblptru may be non-zero
  1479  000D1E                     	endif
  1480  000D1E                     	if	0	;tblptru may be non-zero
  1481  000D1E                     	endif
  1482  000D1E  0008               	tblrd		*
  1483  000D20  50F5               	movf	tablat,w,c
  1484  000D22  EC0F  F006         	call	_WriteDataXLCD
  1485                           
  1486                           ;putrxlcd.c: 24: buffer++;
  1487  000D26  4A10               	infsnz	putrsXLCD@buffer,f,c
  1488  000D28  2A11               	incf	putrsXLCD@buffer+1,f,c
  1489  000D2A                     l1678:
  1490  000D2A  C010  FFF6         	movff	putrsXLCD@buffer,tblptrl
  1491  000D2E  C011  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  1492  000D32                     	if	0	;tblptru may be non-zero
  1493  000D32                     	endif
  1494  000D32                     	if	0	;tblptru may be non-zero
  1495  000D32                     	endif
  1496  000D32  0008               	tblrd		*
  1497  000D34  50F5               	movf	tablat,w,c
  1498  000D36  0900               	iorlw	0
  1499  000D38  B4D8               	btfsc	status,2,c
  1500  000D3A  0012               	return	
  1501  000D3C  D7E7               	goto	l1672
  1502  000D3E                     __end_of_putrsXLCD:
  1503                           	opt stack 0
  1504                           tblptru	equ	0xFF8
  1505                           tblptrh	equ	0xFF7
  1506                           tblptrl	equ	0xFF6
  1507                           tablat	equ	0xFF5
  1508                           prodh	equ	0xFF4
  1509                           prodl	equ	0xFF3
  1510                           intcon	equ	0xFF2
  1511                           postinc0	equ	0xFEE
  1512                           postdec1	equ	0xFE5
  1513                           fsr1l	equ	0xFE1
  1514                           indf2	equ	0xFDF
  1515                           postinc2	equ	0xFDE
  1516                           postdec2	equ	0xFDD
  1517                           fsr2h	equ	0xFDA
  1518                           fsr2l	equ	0xFD9
  1519                           status	equ	0xFD8
  1520                           
  1521 ;; *************** function _WriteDataXLCD *****************
  1522 ;; Defined at:
  1523 ;;		line 18 in file "XLCD/writdata.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;  data            1    wreg     unsigned char 
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;  data            1   14[COMRAM] unsigned char 
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      void 
  1530 ;; Registers used:
  1531 ;;		wreg, status,2, status,0, cstack
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1537 ;;      Params:         0       0       0       0       0       0       0
  1538 ;;      Locals:         1       0       0       0       0       0       0
  1539 ;;      Temps:          0       0       0       0       0       0       0
  1540 ;;      Totals:         1       0       0       0       0       0       0
  1541 ;;Total ram usage:        1 bytes
  1542 ;; Hardware stack levels used:    1
  1543 ;; Hardware stack levels required when called:    3
  1544 ;; This function calls:
  1545 ;;		_DelayFor18TCY
  1546 ;; This function is called by:
  1547 ;;		_putrsXLCD
  1548 ;;		_putsXLCD
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552                           	psect	text9
  1553  000C1E                     __ptext9:
  1554                           	opt stack 0
  1555  000C1E                     _WriteDataXLCD:
  1556                           	opt stack 25
  1557                           
  1558                           ;incstack = 0
  1559                           ;WriteDataXLCD@data stored from wreg
  1560  000C1E  6E0F               	movwf	WriteDataXLCD@data,c
  1561                           
  1562                           ;writdata.c: 37: TRISD &= 0xf0;
  1563  000C20  0EF0               	movlw	240
  1564  000C22  1695               	andwf	3989,f,c	;volatile
  1565                           
  1566                           ;writdata.c: 38: PORTD &= 0xf0;
  1567  000C24  0EF0               	movlw	240
  1568  000C26  1683               	andwf	3971,f,c	;volatile
  1569                           
  1570                           ;writdata.c: 39: PORTD |= ((data>>4)&0x0f);
  1571  000C28  380F               	swapf	WriteDataXLCD@data,w,c
  1572  000C2A  0B0F               	andlw	15
  1573  000C2C  0B0F               	andlw	15
  1574  000C2E  1283               	iorwf	3971,f,c	;volatile
  1575                           
  1576                           ;writdata.c: 41: LATDbits.LATD4 = 1;
  1577  000C30  888C               	bsf	3980,4,c	;volatile
  1578                           
  1579                           ;writdata.c: 42: LATDbits.LATD5 = 0;
  1580  000C32  9A8C               	bcf	3980,5,c	;volatile
  1581                           
  1582                           ;writdata.c: 43: DelayFor18TCY();
  1583  000C34  ECC9  F006         	call	_DelayFor18TCY	;wreg free
  1584                           
  1585                           ;writdata.c: 44: LATDbits.LATD6 = 1;
  1586  000C38  8C8C               	bsf	3980,6,c	;volatile
  1587                           
  1588                           ;writdata.c: 45: DelayFor18TCY();
  1589  000C3A  ECC9  F006         	call	_DelayFor18TCY	;wreg free
  1590                           
  1591                           ;writdata.c: 46: LATDbits.LATD6 = 0;
  1592  000C3E  9C8C               	bcf	3980,6,c	;volatile
  1593                           
  1594                           ;writdata.c: 51: PORTD &= 0xf0;
  1595  000C40  0EF0               	movlw	240
  1596  000C42  1683               	andwf	3971,f,c	;volatile
  1597                           
  1598                           ;writdata.c: 52: PORTD |= (data&0x0f);
  1599  000C44  500F               	movf	WriteDataXLCD@data,w,c
  1600  000C46  0B0F               	andlw	15
  1601  000C48  1283               	iorwf	3971,f,c	;volatile
  1602                           
  1603                           ;writdata.c: 54: DelayFor18TCY();
  1604  000C4A  ECC9  F006         	call	_DelayFor18TCY	;wreg free
  1605                           
  1606                           ;writdata.c: 55: LATDbits.LATD6 = 1;
  1607  000C4E  8C8C               	bsf	3980,6,c	;volatile
  1608                           
  1609                           ;writdata.c: 56: DelayFor18TCY();
  1610  000C50  ECC9  F006         	call	_DelayFor18TCY	;wreg free
  1611                           
  1612                           ;writdata.c: 57: LATDbits.LATD6 = 0;
  1613  000C54  9C8C               	bcf	3980,6,c	;volatile
  1614                           
  1615                           ;writdata.c: 61: TRISD |= 0x0f;
  1616  000C56  0E0F               	movlw	15
  1617  000C58  1295               	iorwf	3989,f,c	;volatile
  1618  000C5A  0012               	return	
  1619  000C5C                     __end_of_WriteDataXLCD:
  1620                           	opt stack 0
  1621                           tblptru	equ	0xFF8
  1622                           tblptrh	equ	0xFF7
  1623                           tblptrl	equ	0xFF6
  1624                           tablat	equ	0xFF5
  1625                           prodh	equ	0xFF4
  1626                           prodl	equ	0xFF3
  1627                           intcon	equ	0xFF2
  1628                           postinc0	equ	0xFEE
  1629                           postdec1	equ	0xFE5
  1630                           fsr1l	equ	0xFE1
  1631                           indf2	equ	0xFDF
  1632                           postinc2	equ	0xFDE
  1633                           postdec2	equ	0xFDD
  1634                           fsr2h	equ	0xFDA
  1635                           fsr2l	equ	0xFD9
  1636                           status	equ	0xFD8
  1637                           
  1638 ;; *************** function _LCD_init *****************
  1639 ;; Defined at:
  1640 ;;		line 165 in file "exLCD.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;		None
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;		None
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  1    wreg      void 
  1647 ;; Registers used:
  1648 ;;		wreg, status,2, status,0, cstack
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1654 ;;      Params:         0       0       0       0       0       0       0
  1655 ;;      Locals:         0       0       0       0       0       0       0
  1656 ;;      Temps:          0       0       0       0       0       0       0
  1657 ;;      Totals:         0       0       0       0       0       0       0
  1658 ;;Total ram usage:        0 bytes
  1659 ;; Hardware stack levels used:    1
  1660 ;; Hardware stack levels required when called:    6
  1661 ;; This function calls:
  1662 ;;		_OpenXLCD
  1663 ;; This function is called by:
  1664 ;;		_main
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           	psect	text10
  1669  000DEC                     __ptext10:
  1670                           	opt stack 0
  1671  000DEC                     _LCD_init:
  1672                           	opt stack 24
  1673                           
  1674                           ;exLCD.c: 167: ADCON1 = 0x0E;
  1675                           
  1676                           ;incstack = 0
  1677  000DEC  0E0E               	movlw	14
  1678  000DEE  6EC1               	movwf	4033,c	;volatile
  1679                           
  1680                           ;exLCD.c: 168: LATDbits.LATD7 = 1;
  1681  000DF0  8E8C               	bsf	3980,7,c	;volatile
  1682                           
  1683                           ;exLCD.c: 169: TRISDbits.TRISD7 = 0;
  1684  000DF2  9E95               	bcf	3989,7,c	;volatile
  1685                           
  1686                           ;exLCD.c: 170: OpenXLCD( 0b00101100 & 0b00111000);
  1687  000DF4  0E28               	movlw	40
  1688  000DF6  EC7C  F004         	call	_OpenXLCD
  1689  000DFA  0012               	return		;funcret
  1690  000DFC                     __end_of_LCD_init:
  1691                           	opt stack 0
  1692                           tblptru	equ	0xFF8
  1693                           tblptrh	equ	0xFF7
  1694                           tblptrl	equ	0xFF6
  1695                           tablat	equ	0xFF5
  1696                           prodh	equ	0xFF4
  1697                           prodl	equ	0xFF3
  1698                           intcon	equ	0xFF2
  1699                           postinc0	equ	0xFEE
  1700                           postdec1	equ	0xFE5
  1701                           fsr1l	equ	0xFE1
  1702                           indf2	equ	0xFDF
  1703                           postinc2	equ	0xFDE
  1704                           postdec2	equ	0xFDD
  1705                           fsr2h	equ	0xFDA
  1706                           fsr2l	equ	0xFD9
  1707                           status	equ	0xFD8
  1708                           
  1709 ;; *************** function _OpenXLCD *****************
  1710 ;; Defined at:
  1711 ;;		line 21 in file "XLCD/openxlcd.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;  lcdtype         1    wreg     unsigned char 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  lcdtype         1   34[COMRAM] unsigned char 
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      void 
  1718 ;; Registers used:
  1719 ;;		wreg, status,2, status,0, cstack
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1725 ;;      Params:         0       0       0       0       0       0       0
  1726 ;;      Locals:         1       0       0       0       0       0       0
  1727 ;;      Temps:          0       0       0       0       0       0       0
  1728 ;;      Totals:         1       0       0       0       0       0       0
  1729 ;;Total ram usage:        1 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; Hardware stack levels required when called:    5
  1732 ;; This function calls:
  1733 ;;		_BusyXLCD
  1734 ;;		_DelayFor18TCY
  1735 ;;		_DelayPORXLCD
  1736 ;;		_DelayXLCD
  1737 ;;		_SetDDRamAddr
  1738 ;;		_WriteCmdXLCD
  1739 ;; This function is called by:
  1740 ;;		_LCD_init
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text11
  1745  0008F8                     __ptext11:
  1746                           	opt stack 0
  1747  0008F8                     _OpenXLCD:
  1748                           	opt stack 24
  1749                           
  1750                           ;incstack = 0
  1751                           ;OpenXLCD@lcdtype stored from wreg
  1752  0008F8  6E23               	movwf	OpenXLCD@lcdtype,c
  1753                           
  1754                           ;openxlcd.c: 33: PORTD &= 0xf0;
  1755  0008FA  0EF0               	movlw	240
  1756  0008FC  1683               	andwf	3971,f,c	;volatile
  1757                           
  1758                           ;openxlcd.c: 34: TRISD |= 0x0f;
  1759  0008FE  0E0F               	movlw	15
  1760  000900  1295               	iorwf	3989,f,c	;volatile
  1761                           
  1762                           ;openxlcd.c: 37: TRISDbits.TRISD5 = 0;
  1763  000902  9A95               	bcf	3989,5,c	;volatile
  1764                           
  1765                           ;openxlcd.c: 38: TRISDbits.TRISD4 = 0;
  1766  000904  9895               	bcf	3989,4,c	;volatile
  1767                           
  1768                           ;openxlcd.c: 39: TRISDbits.TRISD6 = 0;
  1769  000906  9C95               	bcf	3989,6,c	;volatile
  1770                           
  1771                           ;openxlcd.c: 40: LATDbits.LATD5 = 0;
  1772  000908  9A8C               	bcf	3980,5,c	;volatile
  1773                           
  1774                           ;openxlcd.c: 41: LATDbits.LATD4 = 0;
  1775  00090A  988C               	bcf	3980,4,c	;volatile
  1776                           
  1777                           ;openxlcd.c: 42: LATDbits.LATD6 = 0;
  1778  00090C  9C8C               	bcf	3980,6,c	;volatile
  1779                           
  1780                           ;openxlcd.c: 45: DelayPORXLCD();
  1781  00090E  ECE1  F006         	call	_DelayPORXLCD	;wreg free
  1782                           
  1783                           ;openxlcd.c: 57: TRISD &= 0xf0;
  1784  000912  0EF0               	movlw	240
  1785  000914  1695               	andwf	3989,f,c	;volatile
  1786                           
  1787                           ;openxlcd.c: 58: PORTD &= 0xf0;
  1788  000916  0EF0               	movlw	240
  1789  000918  1683               	andwf	3971,f,c	;volatile
  1790                           
  1791                           ;openxlcd.c: 60: PORTD |= 0b00000011;
  1792  00091A  0E03               	movlw	3
  1793  00091C  1283               	iorwf	3971,f,c	;volatile
  1794                           
  1795                           ;openxlcd.c: 63: LATDbits.LATD6 = 1;
  1796  00091E  8C8C               	bsf	3980,6,c	;volatile
  1797                           
  1798                           ;openxlcd.c: 64: DelayFor18TCY();
  1799  000920  ECC9  F006         	call	_DelayFor18TCY	;wreg free
  1800                           
  1801                           ;openxlcd.c: 65: LATDbits.LATD6 = 0;
  1802  000924  9C8C               	bcf	3980,6,c	;volatile
  1803                           
  1804                           ;openxlcd.c: 68: DelayXLCD();
  1805  000926  ECD6  F006         	call	_DelayXLCD	;wreg free
  1806                           
  1807                           ;openxlcd.c: 78: PORTD &= 0xf0;
  1808  00092A  0EF0               	movlw	240
  1809  00092C  1683               	andwf	3971,f,c	;volatile
  1810                           
  1811                           ;openxlcd.c: 80: PORTD |= 0b00000011;
  1812  00092E  0E03               	movlw	3
  1813  000930  1283               	iorwf	3971,f,c	;volatile
  1814                           
  1815                           ;openxlcd.c: 83: LATDbits.LATD6 = 1;
  1816  000932  8C8C               	bsf	3980,6,c	;volatile
  1817                           
  1818                           ;openxlcd.c: 84: DelayFor18TCY();
  1819  000934  ECC9  F006         	call	_DelayFor18TCY	;wreg free
  1820                           
  1821                           ;openxlcd.c: 85: LATDbits.LATD6 = 0;
  1822  000938  9C8C               	bcf	3980,6,c	;volatile
  1823                           
  1824                           ;openxlcd.c: 88: DelayXLCD();
  1825  00093A  ECD6  F006         	call	_DelayXLCD	;wreg free
  1826                           
  1827                           ;openxlcd.c: 98: PORTD &= 0xf0;
  1828  00093E  0EF0               	movlw	240
  1829  000940  1683               	andwf	3971,f,c	;volatile
  1830                           
  1831                           ;openxlcd.c: 100: PORTD |= 0b00000011;
  1832  000942  0E03               	movlw	3
  1833  000944  1283               	iorwf	3971,f,c	;volatile
  1834                           
  1835                           ;openxlcd.c: 103: LATDbits.LATD6 = 1;
  1836  000946  8C8C               	bsf	3980,6,c	;volatile
  1837                           
  1838                           ;openxlcd.c: 104: DelayFor18TCY();
  1839  000948  ECC9  F006         	call	_DelayFor18TCY	;wreg free
  1840                           
  1841                           ;openxlcd.c: 105: LATDbits.LATD6 = 0;
  1842  00094C  9C8C               	bcf	3980,6,c	;volatile
  1843                           
  1844                           ;openxlcd.c: 109: DelayXLCD();
  1845  00094E  ECD6  F006         	call	_DelayXLCD	;wreg free
  1846                           
  1847                           ;openxlcd.c: 119: PORTD &= 0xf0;
  1848  000952  0EF0               	movlw	240
  1849  000954  1683               	andwf	3971,f,c	;volatile
  1850                           
  1851                           ;openxlcd.c: 120: PORTD |= 0b00000010;
  1852  000956  8283               	bsf	3971,1,c	;volatile
  1853                           
  1854                           ;openxlcd.c: 123: LATDbits.LATD6 = 1;
  1855  000958  8C8C               	bsf	3980,6,c	;volatile
  1856                           
  1857                           ;openxlcd.c: 124: DelayFor18TCY();
  1858  00095A  ECC9  F006         	call	_DelayFor18TCY	;wreg free
  1859                           
  1860                           ;openxlcd.c: 125: LATDbits.LATD6 = 0;
  1861  00095E  9C8C               	bcf	3980,6,c	;volatile
  1862                           
  1863                           ;openxlcd.c: 134: TRISD |= 0x0f;
  1864  000960  0E0F               	movlw	15
  1865  000962  1295               	iorwf	3989,f,c	;volatile
  1866  000964                     l1644:
  1867  000964  EC4D  F006         	call	_BusyXLCD	;wreg free
  1868  000968  0900               	iorlw	0
  1869  00096A  A4D8               	btfss	status,2,c
  1870  00096C  D7FB               	goto	l1644
  1871                           
  1872                           ;openxlcd.c: 140: WriteCmdXLCD(lcdtype);
  1873  00096E  5023               	movf	OpenXLCD@lcdtype,w,c
  1874  000970  EC2E  F006         	call	_WriteCmdXLCD
  1875  000974                     l1648:
  1876  000974  EC4D  F006         	call	_BusyXLCD	;wreg free
  1877  000978  0900               	iorlw	0
  1878  00097A  A4D8               	btfss	status,2,c
  1879  00097C  D7FB               	goto	l1648
  1880                           
  1881                           ;openxlcd.c: 145: WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  1882  00097E  0E08               	movlw	8
  1883  000980  EC2E  F006         	call	_WriteCmdXLCD
  1884  000984                     l1652:
  1885  000984  EC4D  F006         	call	_BusyXLCD	;wreg free
  1886  000988  0900               	iorlw	0
  1887  00098A  A4D8               	btfss	status,2,c
  1888  00098C  D7FB               	goto	l1652
  1889                           
  1890                           ;openxlcd.c: 147: WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  1891  00098E  0E0F               	movlw	15
  1892  000990  EC2E  F006         	call	_WriteCmdXLCD
  1893  000994                     l1656:
  1894  000994  EC4D  F006         	call	_BusyXLCD	;wreg free
  1895  000998  0900               	iorlw	0
  1896  00099A  A4D8               	btfss	status,2,c
  1897  00099C  D7FB               	goto	l1656
  1898                           
  1899                           ;openxlcd.c: 151: WriteCmdXLCD(0x01);
  1900  00099E  0E01               	movlw	1
  1901  0009A0  EC2E  F006         	call	_WriteCmdXLCD
  1902  0009A4                     l1660:
  1903  0009A4  EC4D  F006         	call	_BusyXLCD	;wreg free
  1904  0009A8  0900               	iorlw	0
  1905  0009AA  A4D8               	btfss	status,2,c
  1906  0009AC  D7FB               	goto	l1660
  1907                           
  1908                           ;openxlcd.c: 156: WriteCmdXLCD(0x06);
  1909  0009AE  0E06               	movlw	6
  1910  0009B0  EC2E  F006         	call	_WriteCmdXLCD
  1911  0009B4                     l1664:
  1912  0009B4  EC4D  F006         	call	_BusyXLCD	;wreg free
  1913  0009B8  0900               	iorlw	0
  1914  0009BA  A4D8               	btfss	status,2,c
  1915  0009BC  D7FB               	goto	l1664
  1916                           
  1917                           ;openxlcd.c: 160: SetDDRamAddr(0);
  1918  0009BE  0E00               	movlw	0
  1919  0009C0  EC9F  F005         	call	_SetDDRamAddr
  1920  0009C4  0012               	return	
  1921  0009C6                     __end_of_OpenXLCD:
  1922                           	opt stack 0
  1923                           tblptru	equ	0xFF8
  1924                           tblptrh	equ	0xFF7
  1925                           tblptrl	equ	0xFF6
  1926                           tablat	equ	0xFF5
  1927                           prodh	equ	0xFF4
  1928                           prodl	equ	0xFF3
  1929                           intcon	equ	0xFF2
  1930                           postinc0	equ	0xFEE
  1931                           postdec1	equ	0xFE5
  1932                           fsr1l	equ	0xFE1
  1933                           indf2	equ	0xFDF
  1934                           postinc2	equ	0xFDE
  1935                           postdec2	equ	0xFDD
  1936                           fsr2h	equ	0xFDA
  1937                           fsr2l	equ	0xFD9
  1938                           status	equ	0xFD8
  1939                           
  1940 ;; *************** function _WriteCmdXLCD *****************
  1941 ;; Defined at:
  1942 ;;		line 15 in file "XLCD/wcmdxlcd.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;  cmd             1    wreg     unsigned char 
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;  cmd             1   14[COMRAM] unsigned char 
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      void 
  1949 ;; Registers used:
  1950 ;;		wreg, status,2, status,0, cstack
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1956 ;;      Params:         0       0       0       0       0       0       0
  1957 ;;      Locals:         1       0       0       0       0       0       0
  1958 ;;      Temps:          0       0       0       0       0       0       0
  1959 ;;      Totals:         1       0       0       0       0       0       0
  1960 ;;Total ram usage:        1 bytes
  1961 ;; Hardware stack levels used:    1
  1962 ;; Hardware stack levels required when called:    3
  1963 ;; This function calls:
  1964 ;;		_DelayFor18TCY
  1965 ;; This function is called by:
  1966 ;;		_OpenXLCD
  1967 ;;		_displayInterface
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971                           	psect	text12
  1972  000C5C                     __ptext12:
  1973                           	opt stack 0
  1974  000C5C                     _WriteCmdXLCD:
  1975                           	opt stack 26
  1976                           
  1977                           ;incstack = 0
  1978                           ;WriteCmdXLCD@cmd stored from wreg
  1979  000C5C  6E0F               	movwf	WriteCmdXLCD@cmd,c
  1980                           
  1981                           ;wcmdxlcd.c: 34: TRISD &= 0xf0;
  1982  000C5E  0EF0               	movlw	240
  1983  000C60  1695               	andwf	3989,f,c	;volatile
  1984                           
  1985                           ;wcmdxlcd.c: 35: PORTD &= 0xf0;
  1986  000C62  0EF0               	movlw	240
  1987  000C64  1683               	andwf	3971,f,c	;volatile
  1988                           
  1989                           ;wcmdxlcd.c: 36: PORTD |= (cmd>>4)&0x0f;
  1990  000C66  380F               	swapf	WriteCmdXLCD@cmd,w,c
  1991  000C68  0B0F               	andlw	15
  1992  000C6A  0B0F               	andlw	15
  1993  000C6C  1283               	iorwf	3971,f,c	;volatile
  1994                           
  1995                           ;wcmdxlcd.c: 38: LATDbits.LATD5 = 0;
  1996  000C6E  9A8C               	bcf	3980,5,c	;volatile
  1997                           
  1998                           ;wcmdxlcd.c: 39: LATDbits.LATD4 = 0;
  1999  000C70  988C               	bcf	3980,4,c	;volatile
  2000                           
  2001                           ;wcmdxlcd.c: 40: DelayFor18TCY();
  2002  000C72  ECC9  F006         	call	_DelayFor18TCY	;wreg free
  2003                           
  2004                           ;wcmdxlcd.c: 41: LATDbits.LATD6 = 1;
  2005  000C76  8C8C               	bsf	3980,6,c	;volatile
  2006                           
  2007                           ;wcmdxlcd.c: 42: DelayFor18TCY();
  2008  000C78  ECC9  F006         	call	_DelayFor18TCY	;wreg free
  2009                           
  2010                           ;wcmdxlcd.c: 43: LATDbits.LATD6 = 0;
  2011  000C7C  9C8C               	bcf	3980,6,c	;volatile
  2012                           
  2013                           ;wcmdxlcd.c: 48: PORTD &= 0xf0;
  2014  000C7E  0EF0               	movlw	240
  2015  000C80  1683               	andwf	3971,f,c	;volatile
  2016                           
  2017                           ;wcmdxlcd.c: 49: PORTD |= cmd&0x0f;
  2018  000C82  500F               	movf	WriteCmdXLCD@cmd,w,c
  2019  000C84  0B0F               	andlw	15
  2020  000C86  1283               	iorwf	3971,f,c	;volatile
  2021                           
  2022                           ;wcmdxlcd.c: 51: DelayFor18TCY();
  2023  000C88  ECC9  F006         	call	_DelayFor18TCY	;wreg free
  2024                           
  2025                           ;wcmdxlcd.c: 52: LATDbits.LATD6 = 1;
  2026  000C8C  8C8C               	bsf	3980,6,c	;volatile
  2027                           
  2028                           ;wcmdxlcd.c: 53: DelayFor18TCY();
  2029  000C8E  ECC9  F006         	call	_DelayFor18TCY	;wreg free
  2030                           
  2031                           ;wcmdxlcd.c: 54: LATDbits.LATD6 = 0;
  2032  000C92  9C8C               	bcf	3980,6,c	;volatile
  2033                           
  2034                           ;wcmdxlcd.c: 58: TRISD |= 0x0f;
  2035  000C94  0E0F               	movlw	15
  2036  000C96  1295               	iorwf	3989,f,c	;volatile
  2037  000C98  0012               	return	
  2038  000C9A                     __end_of_WriteCmdXLCD:
  2039                           	opt stack 0
  2040                           tblptru	equ	0xFF8
  2041                           tblptrh	equ	0xFF7
  2042                           tblptrl	equ	0xFF6
  2043                           tablat	equ	0xFF5
  2044                           prodh	equ	0xFF4
  2045                           prodl	equ	0xFF3
  2046                           intcon	equ	0xFF2
  2047                           postinc0	equ	0xFEE
  2048                           postdec1	equ	0xFE5
  2049                           fsr1l	equ	0xFE1
  2050                           indf2	equ	0xFDF
  2051                           postinc2	equ	0xFDE
  2052                           postdec2	equ	0xFDD
  2053                           fsr2h	equ	0xFDA
  2054                           fsr2l	equ	0xFD9
  2055                           status	equ	0xFD8
  2056                           
  2057 ;; *************** function _SetDDRamAddr *****************
  2058 ;; Defined at:
  2059 ;;		line 15 in file "XLCD/setddram.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;  DDaddr          1    wreg     unsigned char 
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;  DDaddr          1   17[COMRAM] unsigned char 
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      void 
  2066 ;; Registers used:
  2067 ;;		wreg, status,2, status,0, cstack
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2073 ;;      Params:         0       0       0       0       0       0       0
  2074 ;;      Locals:         1       0       0       0       0       0       0
  2075 ;;      Temps:          3       0       0       0       0       0       0
  2076 ;;      Totals:         4       0       0       0       0       0       0
  2077 ;;Total ram usage:        4 bytes
  2078 ;; Hardware stack levels used:    1
  2079 ;; Hardware stack levels required when called:    3
  2080 ;; This function calls:
  2081 ;;		_DelayFor18TCY
  2082 ;; This function is called by:
  2083 ;;		_OpenXLCD
  2084 ;;		_displayInterface
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           	psect	text13
  2089  000B3E                     __ptext13:
  2090                           	opt stack 0
  2091  000B3E                     _SetDDRamAddr:
  2092                           	opt stack 26
  2093                           
  2094                           ;incstack = 0
  2095                           ;SetDDRamAddr@DDaddr stored from wreg
  2096  000B3E  6E12               	movwf	SetDDRamAddr@DDaddr,c
  2097                           
  2098                           ;setddram.c: 34: TRISD &= 0xf0;
  2099  000B40  0EF0               	movlw	240
  2100  000B42  1695               	andwf	3989,f,c	;volatile
  2101                           
  2102                           ;setddram.c: 35: PORTD &= 0xf0;
  2103  000B44  0EF0               	movlw	240
  2104  000B46  1683               	andwf	3971,f,c	;volatile
  2105                           
  2106                           ;setddram.c: 36: PORTD |= (((DDaddr | 0b10000000)>>4) & 0x0f);
  2107  000B48  5012               	movf	SetDDRamAddr@DDaddr,w,c
  2108  000B4A  6E0F               	movwf	??_SetDDRamAddr& (0+255),c
  2109  000B4C  6A10               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  2110  000B4E  8E0F               	bsf	??_SetDDRamAddr,7,c
  2111  000B50  0E04               	movlw	4
  2112  000B52  6E11               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  2113  000B54                     u55:
  2114  000B54  3410               	rlcf	??_SetDDRamAddr+1,w,c
  2115  000B56  3210               	rrcf	??_SetDDRamAddr+1,f,c
  2116  000B58  320F               	rrcf	??_SetDDRamAddr,f,c
  2117  000B5A  2E11               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  2118  000B5C  D7FB               	goto	u55
  2119  000B5E  500F               	movf	??_SetDDRamAddr,w,c
  2120  000B60  0B0F               	andlw	15
  2121  000B62  1283               	iorwf	3971,f,c	;volatile
  2122                           
  2123                           ;setddram.c: 38: LATDbits.LATD5 = 0;
  2124  000B64  9A8C               	bcf	3980,5,c	;volatile
  2125                           
  2126                           ;setddram.c: 39: LATDbits.LATD4 = 0;
  2127  000B66  988C               	bcf	3980,4,c	;volatile
  2128                           
  2129                           ;setddram.c: 40: DelayFor18TCY();
  2130  000B68  ECC9  F006         	call	_DelayFor18TCY	;wreg free
  2131                           
  2132                           ;setddram.c: 41: LATDbits.LATD6 = 1;
  2133  000B6C  8C8C               	bsf	3980,6,c	;volatile
  2134                           
  2135                           ;setddram.c: 42: DelayFor18TCY();
  2136  000B6E  ECC9  F006         	call	_DelayFor18TCY	;wreg free
  2137                           
  2138                           ;setddram.c: 43: LATDbits.LATD6 = 0;
  2139  000B72  9C8C               	bcf	3980,6,c	;volatile
  2140                           
  2141                           ;setddram.c: 48: PORTD &= 0xf0;
  2142  000B74  0EF0               	movlw	240
  2143  000B76  1683               	andwf	3971,f,c	;volatile
  2144                           
  2145                           ;setddram.c: 49: PORTD |= (DDaddr&0x0f);
  2146  000B78  5012               	movf	SetDDRamAddr@DDaddr,w,c
  2147  000B7A  0B0F               	andlw	15
  2148  000B7C  1283               	iorwf	3971,f,c	;volatile
  2149                           
  2150                           ;setddram.c: 51: DelayFor18TCY();
  2151  000B7E  ECC9  F006         	call	_DelayFor18TCY	;wreg free
  2152                           
  2153                           ;setddram.c: 52: LATDbits.LATD6 = 1;
  2154  000B82  8C8C               	bsf	3980,6,c	;volatile
  2155                           
  2156                           ;setddram.c: 53: DelayFor18TCY();
  2157  000B84  ECC9  F006         	call	_DelayFor18TCY	;wreg free
  2158                           
  2159                           ;setddram.c: 54: LATDbits.LATD6 = 0;
  2160  000B88  9C8C               	bcf	3980,6,c	;volatile
  2161                           
  2162                           ;setddram.c: 58: TRISD |= 0x0f;
  2163  000B8A  0E0F               	movlw	15
  2164  000B8C  1295               	iorwf	3989,f,c	;volatile
  2165  000B8E  0012               	return	
  2166  000B90                     __end_of_SetDDRamAddr:
  2167                           	opt stack 0
  2168                           tblptru	equ	0xFF8
  2169                           tblptrh	equ	0xFF7
  2170                           tblptrl	equ	0xFF6
  2171                           tablat	equ	0xFF5
  2172                           prodh	equ	0xFF4
  2173                           prodl	equ	0xFF3
  2174                           intcon	equ	0xFF2
  2175                           postinc0	equ	0xFEE
  2176                           postdec1	equ	0xFE5
  2177                           fsr1l	equ	0xFE1
  2178                           indf2	equ	0xFDF
  2179                           postinc2	equ	0xFDE
  2180                           postdec2	equ	0xFDD
  2181                           fsr2h	equ	0xFDA
  2182                           fsr2l	equ	0xFD9
  2183                           status	equ	0xFD8
  2184                           
  2185 ;; *************** function _DelayXLCD *****************
  2186 ;; Defined at:
  2187 ;;		line 104 in file "exLCD.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;		None
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;		None
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  1    wreg      void 
  2194 ;; Registers used:
  2195 ;;		wreg, status,2, status,0, cstack
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2201 ;;      Params:         0       0       0       0       0       0       0
  2202 ;;      Locals:         0       0       0       0       0       0       0
  2203 ;;      Temps:          0       0       0       0       0       0       0
  2204 ;;      Totals:         0       0       0       0       0       0       0
  2205 ;;Total ram usage:        0 bytes
  2206 ;; Hardware stack levels used:    1
  2207 ;; Hardware stack levels required when called:    4
  2208 ;; This function calls:
  2209 ;;		_Delay1KTCYx
  2210 ;; This function is called by:
  2211 ;;		_OpenXLCD
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text14
  2216  000DAC                     __ptext14:
  2217                           	opt stack 0
  2218  000DAC                     _DelayXLCD:
  2219                           	opt stack 24
  2220                           
  2221                           ;exLCD.c: 106: Delay1KTCYx(20);
  2222                           
  2223                           ;incstack = 0
  2224  000DAC  0E14               	movlw	20
  2225  000DAE  6E1B               	movwf	Delay1KTCYx@n,c
  2226  000DB0  0E00               	movlw	0
  2227  000DB2  6E1C               	movwf	Delay1KTCYx@n+1,c
  2228  000DB4  0E00               	movlw	0
  2229  000DB6  6E1D               	movwf	Delay1KTCYx@n+2,c
  2230  000DB8  0E00               	movlw	0
  2231  000DBA  6E1E               	movwf	Delay1KTCYx@n+3,c
  2232  000DBC  ECC8  F005         	call	_Delay1KTCYx	;wreg free
  2233  000DC0  0012               	return	
  2234  000DC2                     __end_of_DelayXLCD:
  2235                           	opt stack 0
  2236                           tblptru	equ	0xFF8
  2237                           tblptrh	equ	0xFF7
  2238                           tblptrl	equ	0xFF6
  2239                           tablat	equ	0xFF5
  2240                           prodh	equ	0xFF4
  2241                           prodl	equ	0xFF3
  2242                           intcon	equ	0xFF2
  2243                           postinc0	equ	0xFEE
  2244                           postdec1	equ	0xFE5
  2245                           fsr1l	equ	0xFE1
  2246                           indf2	equ	0xFDF
  2247                           postinc2	equ	0xFDE
  2248                           postdec2	equ	0xFDD
  2249                           fsr2h	equ	0xFDA
  2250                           fsr2l	equ	0xFD9
  2251                           status	equ	0xFD8
  2252                           
  2253 ;; *************** function _DelayPORXLCD *****************
  2254 ;; Defined at:
  2255 ;;		line 98 in file "exLCD.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;		None
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;		None
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  1    wreg      void 
  2262 ;; Registers used:
  2263 ;;		wreg, status,2, status,0, cstack
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2269 ;;      Params:         0       0       0       0       0       0       0
  2270 ;;      Locals:         0       0       0       0       0       0       0
  2271 ;;      Temps:          0       0       0       0       0       0       0
  2272 ;;      Totals:         0       0       0       0       0       0       0
  2273 ;;Total ram usage:        0 bytes
  2274 ;; Hardware stack levels used:    1
  2275 ;; Hardware stack levels required when called:    4
  2276 ;; This function calls:
  2277 ;;		_Delay1KTCYx
  2278 ;; This function is called by:
  2279 ;;		_OpenXLCD
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           	psect	text15
  2284  000DC2                     __ptext15:
  2285                           	opt stack 0
  2286  000DC2                     _DelayPORXLCD:
  2287                           	opt stack 24
  2288                           
  2289                           ;exLCD.c: 100: Delay1KTCYx(60);
  2290                           
  2291                           ;incstack = 0
  2292  000DC2  0E3C               	movlw	60
  2293  000DC4  6E1B               	movwf	Delay1KTCYx@n,c
  2294  000DC6  0E00               	movlw	0
  2295  000DC8  6E1C               	movwf	Delay1KTCYx@n+1,c
  2296  000DCA  0E00               	movlw	0
  2297  000DCC  6E1D               	movwf	Delay1KTCYx@n+2,c
  2298  000DCE  0E00               	movlw	0
  2299  000DD0  6E1E               	movwf	Delay1KTCYx@n+3,c
  2300  000DD2  ECC8  F005         	call	_Delay1KTCYx	;wreg free
  2301  000DD6  0012               	return	
  2302  000DD8                     __end_of_DelayPORXLCD:
  2303                           	opt stack 0
  2304                           tblptru	equ	0xFF8
  2305                           tblptrh	equ	0xFF7
  2306                           tblptrl	equ	0xFF6
  2307                           tablat	equ	0xFF5
  2308                           prodh	equ	0xFF4
  2309                           prodl	equ	0xFF3
  2310                           intcon	equ	0xFF2
  2311                           postinc0	equ	0xFEE
  2312                           postdec1	equ	0xFE5
  2313                           fsr1l	equ	0xFE1
  2314                           indf2	equ	0xFDF
  2315                           postinc2	equ	0xFDE
  2316                           postdec2	equ	0xFDD
  2317                           fsr2h	equ	0xFDA
  2318                           fsr2l	equ	0xFD9
  2319                           status	equ	0xFD8
  2320                           
  2321 ;; *************** function _Delay1KTCYx *****************
  2322 ;; Defined at:
  2323 ;;		line 76 in file "exLCD.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;  n               4   26[COMRAM] unsigned long 
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;		None
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  1    wreg      void 
  2330 ;; Registers used:
  2331 ;;		wreg, status,2, status,0, cstack
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2337 ;;      Params:         4       0       0       0       0       0       0
  2338 ;;      Locals:         0       0       0       0       0       0       0
  2339 ;;      Temps:          4       0       0       0       0       0       0
  2340 ;;      Totals:         8       0       0       0       0       0       0
  2341 ;;Total ram usage:        8 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; Hardware stack levels required when called:    3
  2344 ;; This function calls:
  2345 ;;		___lmul
  2346 ;; This function is called by:
  2347 ;;		_DelayPORXLCD
  2348 ;;		_DelayXLCD
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text16
  2353  000B90                     __ptext16:
  2354                           	opt stack 0
  2355  000B90                     _Delay1KTCYx:
  2356                           	opt stack 24
  2357  000B90                     l1538:
  2358  000B90  C01B  F01F         	movff	Delay1KTCYx@n,??_Delay1KTCYx
  2359  000B94  C01C  F020         	movff	Delay1KTCYx@n+1,??_Delay1KTCYx+1
  2360  000B98  C01D  F021         	movff	Delay1KTCYx@n+2,??_Delay1KTCYx+2
  2361  000B9C  C01E  F022         	movff	Delay1KTCYx@n+3,??_Delay1KTCYx+3
  2362  000BA0  061B               	decf	Delay1KTCYx@n,f,c
  2363  000BA2  0E00               	movlw	0
  2364  000BA4  5A1C               	subwfb	Delay1KTCYx@n+1,f,c
  2365  000BA6  5A1D               	subwfb	Delay1KTCYx@n+2,f,c
  2366  000BA8  5A1E               	subwfb	Delay1KTCYx@n+3,f,c
  2367  000BAA  C01F  F00F         	movff	??_Delay1KTCYx,___lmul@multiplier
  2368  000BAE  C020  F010         	movff	??_Delay1KTCYx+1,___lmul@multiplier+1
  2369  000BB2  C021  F011         	movff	??_Delay1KTCYx+2,___lmul@multiplier+2
  2370  000BB6  C022  F012         	movff	??_Delay1KTCYx+3,___lmul@multiplier+3
  2371  000BBA  0EE8               	movlw	232
  2372  000BBC  6E13               	movwf	___lmul@multiplicand,c
  2373  000BBE  0E03               	movlw	3
  2374  000BC0  6E14               	movwf	___lmul@multiplicand+1,c
  2375  000BC2  0E00               	movlw	0
  2376  000BC4  6E15               	movwf	___lmul@multiplicand+2,c
  2377  000BC6  0E00               	movlw	0
  2378  000BC8  6E16               	movwf	___lmul@multiplicand+3,c
  2379  000BCA  EC20  F005         	call	___lmul	;wreg free
  2380  000BCE  500F               	movf	?___lmul,w,c
  2381  000BD0  1010               	iorwf	?___lmul+1,w,c
  2382  000BD2  1011               	iorwf	?___lmul+2,w,c
  2383  000BD4  1012               	iorwf	?___lmul+3,w,c
  2384  000BD6  B4D8               	btfsc	status,2,c
  2385  000BD8  0012               	return	
  2386  000BDA  D7DA               	goto	l1538
  2387  000BDC                     __end_of_Delay1KTCYx:
  2388                           	opt stack 0
  2389                           tblptru	equ	0xFF8
  2390                           tblptrh	equ	0xFF7
  2391                           tblptrl	equ	0xFF6
  2392                           tablat	equ	0xFF5
  2393                           prodh	equ	0xFF4
  2394                           prodl	equ	0xFF3
  2395                           intcon	equ	0xFF2
  2396                           postinc0	equ	0xFEE
  2397                           postdec1	equ	0xFE5
  2398                           fsr1l	equ	0xFE1
  2399                           indf2	equ	0xFDF
  2400                           postinc2	equ	0xFDE
  2401                           postdec2	equ	0xFDD
  2402                           fsr2h	equ	0xFDA
  2403                           fsr2l	equ	0xFD9
  2404                           status	equ	0xFD8
  2405                           
  2406 ;; *************** function ___lmul *****************
  2407 ;; Defined at:
  2408 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul32.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  multiplier      4   14[COMRAM] unsigned long 
  2411 ;;  multiplicand    4   18[COMRAM] unsigned long 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;  product         4   22[COMRAM] unsigned long 
  2414 ;; Return value:  Size  Location     Type
  2415 ;;                  4   14[COMRAM] unsigned long 
  2416 ;; Registers used:
  2417 ;;		wreg, status,2, status,0
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2423 ;;      Params:         8       0       0       0       0       0       0
  2424 ;;      Locals:         4       0       0       0       0       0       0
  2425 ;;      Temps:          0       0       0       0       0       0       0
  2426 ;;      Totals:        12       0       0       0       0       0       0
  2427 ;;Total ram usage:       12 bytes
  2428 ;; Hardware stack levels used:    1
  2429 ;; Hardware stack levels required when called:    2
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_Delay1KTCYx
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text17
  2438  000A40                     __ptext17:
  2439                           	opt stack 0
  2440  000A40                     ___lmul:
  2441                           	opt stack 24
  2442                           
  2443                           ;incstack = 0
  2444  000A40  0E00               	movlw	0
  2445  000A42  6E17               	movwf	___lmul@product,c
  2446  000A44  0E00               	movlw	0
  2447  000A46  6E18               	movwf	___lmul@product+1,c
  2448  000A48  0E00               	movlw	0
  2449  000A4A  6E19               	movwf	___lmul@product+2,c
  2450  000A4C  0E00               	movlw	0
  2451  000A4E  6E1A               	movwf	___lmul@product+3,c
  2452  000A50                     l1528:
  2453  000A50  A00F               	btfss	___lmul@multiplier,0,c
  2454  000A52  D008               	goto	l1532
  2455  000A54  5013               	movf	___lmul@multiplicand,w,c
  2456  000A56  2617               	addwf	___lmul@product,f,c
  2457  000A58  5014               	movf	___lmul@multiplicand+1,w,c
  2458  000A5A  2218               	addwfc	___lmul@product+1,f,c
  2459  000A5C  5015               	movf	___lmul@multiplicand+2,w,c
  2460  000A5E  2219               	addwfc	___lmul@product+2,f,c
  2461  000A60  5016               	movf	___lmul@multiplicand+3,w,c
  2462  000A62  221A               	addwfc	___lmul@product+3,f,c
  2463  000A64                     l1532:
  2464  000A64  90D8               	bcf	status,0,c
  2465  000A66  3613               	rlcf	___lmul@multiplicand,f,c
  2466  000A68  3614               	rlcf	___lmul@multiplicand+1,f,c
  2467  000A6A  3615               	rlcf	___lmul@multiplicand+2,f,c
  2468  000A6C  3616               	rlcf	___lmul@multiplicand+3,f,c
  2469  000A6E  90D8               	bcf	status,0,c
  2470  000A70  3212               	rrcf	___lmul@multiplier+3,f,c
  2471  000A72  3211               	rrcf	___lmul@multiplier+2,f,c
  2472  000A74  3210               	rrcf	___lmul@multiplier+1,f,c
  2473  000A76  320F               	rrcf	___lmul@multiplier,f,c
  2474  000A78  500F               	movf	___lmul@multiplier,w,c
  2475  000A7A  1010               	iorwf	___lmul@multiplier+1,w,c
  2476  000A7C  1011               	iorwf	___lmul@multiplier+2,w,c
  2477  000A7E  1012               	iorwf	___lmul@multiplier+3,w,c
  2478  000A80  A4D8               	btfss	status,2,c
  2479  000A82  D7E6               	goto	l1528
  2480  000A84  C017  F00F         	movff	___lmul@product,?___lmul
  2481  000A88  C018  F010         	movff	___lmul@product+1,?___lmul+1
  2482  000A8C  C019  F011         	movff	___lmul@product+2,?___lmul+2
  2483  000A90  C01A  F012         	movff	___lmul@product+3,?___lmul+3
  2484  000A94  0012               	return		;funcret
  2485  000A96                     __end_of___lmul:
  2486                           	opt stack 0
  2487                           tblptru	equ	0xFF8
  2488                           tblptrh	equ	0xFF7
  2489                           tblptrl	equ	0xFF6
  2490                           tablat	equ	0xFF5
  2491                           prodh	equ	0xFF4
  2492                           prodl	equ	0xFF3
  2493                           intcon	equ	0xFF2
  2494                           postinc0	equ	0xFEE
  2495                           postdec1	equ	0xFE5
  2496                           fsr1l	equ	0xFE1
  2497                           indf2	equ	0xFDF
  2498                           postinc2	equ	0xFDE
  2499                           postdec2	equ	0xFDD
  2500                           fsr2h	equ	0xFDA
  2501                           fsr2l	equ	0xFD9
  2502                           status	equ	0xFD8
  2503                           
  2504 ;; *************** function _BusyXLCD *****************
  2505 ;; Defined at:
  2506 ;;		line 13 in file "XLCD/busyxlcd.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;		None
  2509 ;; Auto vars:     Size  Location     Type
  2510 ;;		None
  2511 ;; Return value:  Size  Location     Type
  2512 ;;                  1    wreg      unsigned char 
  2513 ;; Registers used:
  2514 ;;		wreg, cstack
  2515 ;; Tracked objects:
  2516 ;;		On entry : 0/0
  2517 ;;		On exit  : 0/0
  2518 ;;		Unchanged: 0/0
  2519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2520 ;;      Params:         0       0       0       0       0       0       0
  2521 ;;      Locals:         0       0       0       0       0       0       0
  2522 ;;      Temps:          0       0       0       0       0       0       0
  2523 ;;      Totals:         0       0       0       0       0       0       0
  2524 ;;Total ram usage:        0 bytes
  2525 ;; Hardware stack levels used:    1
  2526 ;; Hardware stack levels required when called:    3
  2527 ;; This function calls:
  2528 ;;		_DelayFor18TCY
  2529 ;; This function is called by:
  2530 ;;		_OpenXLCD
  2531 ;;		_putrsXLCD
  2532 ;;		_putsXLCD
  2533 ;;		_displayInterface
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           	psect	text18
  2538  000C9A                     __ptext18:
  2539                           	opt stack 0
  2540  000C9A                     _BusyXLCD:
  2541                           	opt stack 25
  2542                           
  2543                           ;busyxlcd.c: 15: LATDbits.LATD5 = 1;
  2544                           
  2545                           ;incstack = 0
  2546  000C9A  8A8C               	bsf	3980,5,c	;volatile
  2547                           
  2548                           ;busyxlcd.c: 16: LATDbits.LATD4 = 0;
  2549  000C9C  988C               	bcf	3980,4,c	;volatile
  2550                           
  2551                           ;busyxlcd.c: 17: DelayFor18TCY();
  2552  000C9E  ECC9  F006         	call	_DelayFor18TCY	;wreg free
  2553                           
  2554                           ;busyxlcd.c: 18: LATDbits.LATD6 = 1;
  2555  000CA2  8C8C               	bsf	3980,6,c	;volatile
  2556                           
  2557                           ;busyxlcd.c: 19: DelayFor18TCY();
  2558  000CA4  ECC9  F006         	call	_DelayFor18TCY	;wreg free
  2559                           
  2560                           ;busyxlcd.c: 37: if(PORTD&0x08)
  2561  000CA8  A683               	btfss	3971,3,c	;volatile
  2562  000CAA  D00A               	goto	l9
  2563                           
  2564                           ;busyxlcd.c: 39: {
  2565                           ;busyxlcd.c: 40: LATDbits.LATD6 = 0;
  2566  000CAC  9C8C               	bcf	3980,6,c	;volatile
  2567                           
  2568                           ;busyxlcd.c: 41: DelayFor18TCY();
  2569  000CAE  ECC9  F006         	call	_DelayFor18TCY	;wreg free
  2570                           
  2571                           ;busyxlcd.c: 42: LATDbits.LATD6 = 1;
  2572  000CB2  8C8C               	bsf	3980,6,c	;volatile
  2573                           
  2574                           ;busyxlcd.c: 43: DelayFor18TCY();
  2575  000CB4  ECC9  F006         	call	_DelayFor18TCY	;wreg free
  2576                           
  2577                           ;busyxlcd.c: 44: LATDbits.LATD6 = 0;
  2578  000CB8  9C8C               	bcf	3980,6,c	;volatile
  2579                           
  2580                           ;busyxlcd.c: 45: LATDbits.LATD5 = 0;
  2581  000CBA  9A8C               	bcf	3980,5,c	;volatile
  2582                           
  2583                           ;busyxlcd.c: 46: return 1;
  2584  000CBC  0E01               	movlw	1
  2585                           
  2586                           ;busyxlcd.c: 47: }
  2587  000CBE  0012               	return	
  2588  000CC0                     l9:
  2589                           
  2590                           ;busyxlcd.c: 48: else
  2591                           ;busyxlcd.c: 49: {
  2592                           ;busyxlcd.c: 50: LATDbits.LATD6 = 0;
  2593  000CC0  9C8C               	bcf	3980,6,c	;volatile
  2594                           
  2595                           ;busyxlcd.c: 51: DelayFor18TCY();
  2596  000CC2  ECC9  F006         	call	_DelayFor18TCY	;wreg free
  2597                           
  2598                           ;busyxlcd.c: 52: LATDbits.LATD6 = 1;
  2599  000CC6  8C8C               	bsf	3980,6,c	;volatile
  2600                           
  2601                           ;busyxlcd.c: 53: DelayFor18TCY();
  2602  000CC8  ECC9  F006         	call	_DelayFor18TCY	;wreg free
  2603                           
  2604                           ;busyxlcd.c: 54: LATDbits.LATD6 = 0;
  2605  000CCC  9C8C               	bcf	3980,6,c	;volatile
  2606                           
  2607                           ;busyxlcd.c: 55: LATDbits.LATD5 = 0;
  2608  000CCE  9A8C               	bcf	3980,5,c	;volatile
  2609                           
  2610                           ;busyxlcd.c: 56: return 0;
  2611  000CD0  0E00               	movlw	0
  2612  000CD2  0012               	return	
  2613  000CD4                     __end_of_BusyXLCD:
  2614                           	opt stack 0
  2615                           tblptru	equ	0xFF8
  2616                           tblptrh	equ	0xFF7
  2617                           tblptrl	equ	0xFF6
  2618                           tablat	equ	0xFF5
  2619                           prodh	equ	0xFF4
  2620                           prodl	equ	0xFF3
  2621                           intcon	equ	0xFF2
  2622                           postinc0	equ	0xFEE
  2623                           postdec1	equ	0xFE5
  2624                           fsr1l	equ	0xFE1
  2625                           indf2	equ	0xFDF
  2626                           postinc2	equ	0xFDE
  2627                           postdec2	equ	0xFDD
  2628                           fsr2h	equ	0xFDA
  2629                           fsr2l	equ	0xFD9
  2630                           status	equ	0xFD8
  2631                           
  2632 ;; *************** function _DelayFor18TCY *****************
  2633 ;; Defined at:
  2634 ;;		line 82 in file "exLCD.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;		None
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;		None
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      void 
  2641 ;; Registers used:
  2642 ;;		None
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2648 ;;      Params:         0       0       0       0       0       0       0
  2649 ;;      Locals:         0       0       0       0       0       0       0
  2650 ;;      Temps:          0       0       0       0       0       0       0
  2651 ;;      Totals:         0       0       0       0       0       0       0
  2652 ;;Total ram usage:        0 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; Hardware stack levels required when called:    2
  2655 ;; This function calls:
  2656 ;;		Nothing
  2657 ;; This function is called by:
  2658 ;;		_BusyXLCD
  2659 ;;		_OpenXLCD
  2660 ;;		_SetDDRamAddr
  2661 ;;		_WriteCmdXLCD
  2662 ;;		_WriteDataXLCD
  2663 ;;		_ReadAddrXLCD
  2664 ;;		_ReadDataXLCD
  2665 ;;		_SetCGRamAddr
  2666 ;; This function uses a non-reentrant model
  2667 ;;
  2668                           
  2669                           	psect	text19
  2670  000D92                     __ptext19:
  2671                           	opt stack 0
  2672  000D92                     _DelayFor18TCY:
  2673                           	opt stack 25
  2674                           
  2675                           ;exLCD.c: 84: __nop();
  2676                           
  2677                           ;incstack = 0
  2678  000D92  F000               	nop	
  2679                           
  2680                           ;exLCD.c: 85: __nop();
  2681  000D94  F000               	nop	
  2682                           
  2683                           ;exLCD.c: 86: __nop();
  2684  000D96  F000               	nop	
  2685                           
  2686                           ;exLCD.c: 87: __nop();
  2687  000D98  F000               	nop	
  2688                           
  2689                           ;exLCD.c: 88: __nop();
  2690  000D9A  F000               	nop	
  2691                           
  2692                           ;exLCD.c: 89: __nop();
  2693  000D9C  F000               	nop	
  2694                           
  2695                           ;exLCD.c: 90: __nop();
  2696  000D9E  F000               	nop	
  2697                           
  2698                           ;exLCD.c: 91: __nop();
  2699  000DA0  F000               	nop	
  2700                           
  2701                           ;exLCD.c: 92: __nop();
  2702  000DA2  F000               	nop	
  2703                           
  2704                           ;exLCD.c: 93: __nop();
  2705  000DA4  F000               	nop	
  2706                           
  2707                           ;exLCD.c: 94: __nop();
  2708  000DA6  F000               	nop	
  2709                           
  2710                           ;exLCD.c: 95: __nop();
  2711  000DA8  F000               	nop	
  2712  000DAA  0012               	return		;funcret
  2713  000DAC                     __end_of_DelayFor18TCY:
  2714                           	opt stack 0
  2715                           tblptru	equ	0xFF8
  2716                           tblptrh	equ	0xFF7
  2717                           tblptrl	equ	0xFF6
  2718                           tablat	equ	0xFF5
  2719                           prodh	equ	0xFF4
  2720                           prodl	equ	0xFF3
  2721                           intcon	equ	0xFF2
  2722                           postinc0	equ	0xFEE
  2723                           postdec1	equ	0xFE5
  2724                           fsr1l	equ	0xFE1
  2725                           indf2	equ	0xFDF
  2726                           postinc2	equ	0xFDE
  2727                           postdec2	equ	0xFDD
  2728                           fsr2h	equ	0xFDA
  2729                           fsr2l	equ	0xFD9
  2730                           status	equ	0xFD8
  2731                           
  2732 ;; *************** function _ISR *****************
  2733 ;; Defined at:
  2734 ;;		line 136 in file "exLCD.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;		None
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;		None
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  1    wreg      void 
  2741 ;; Registers used:
  2742 ;;		wreg, status,2, status,0, cstack
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2748 ;;      Params:         0       0       0       0       0       0       0
  2749 ;;      Locals:         0       0       0       0       0       0       0
  2750 ;;      Temps:         14       0       0       0       0       0       0
  2751 ;;      Totals:        14       0       0       0       0       0       0
  2752 ;;Total ram usage:       14 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; Hardware stack levels required when called:    1
  2755 ;; This function calls:
  2756 ;;		_timer1_isr
  2757 ;; This function is called by:
  2758 ;;		Interrupt level 2
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           	psect	intcode
  2763  000008                     __pintcode:
  2764                           	opt stack 0
  2765  000008                     _ISR:
  2766                           	opt stack 24
  2767                           
  2768                           ;incstack = 0
  2769  000008  8238               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2770  00000A  EDE3  F004         	call	int_func,f	;refresh shadow registers
  2771                           tblptru	equ	0xFF8
  2772                           tblptrh	equ	0xFF7
  2773                           tblptrl	equ	0xFF6
  2774                           tablat	equ	0xFF5
  2775                           prodh	equ	0xFF4
  2776                           prodl	equ	0xFF3
  2777                           intcon	equ	0xFF2
  2778                           postinc0	equ	0xFEE
  2779                           postdec1	equ	0xFE5
  2780                           fsr1l	equ	0xFE1
  2781                           indf2	equ	0xFDF
  2782                           postinc2	equ	0xFDE
  2783                           postdec2	equ	0xFDD
  2784                           fsr2h	equ	0xFDA
  2785                           fsr2l	equ	0xFD9
  2786                           status	equ	0xFD8
  2787                           
  2788                           	psect	intcode_body
  2789  0009C6                     __pintcode_body:
  2790                           	opt stack 24
  2791  0009C6                     int_func:
  2792                           	opt stack 24
  2793  0009C6  0006               	pop		; remove dummy address from shadow register refresh
  2794  0009C8  CFFA F001          	movff	pclath,??_ISR
  2795  0009CC  CFFB F002          	movff	pclatu,??_ISR+1
  2796  0009D0  CFE9 F003          	movff	fsr0l,??_ISR+2
  2797  0009D4  CFEA F004          	movff	fsr0h,??_ISR+3
  2798  0009D8  CFE1 F005          	movff	fsr1l,??_ISR+4
  2799  0009DC  CFE2 F006          	movff	fsr1h,??_ISR+5
  2800  0009E0  CFD9 F007          	movff	fsr2l,??_ISR+6
  2801  0009E4  CFDA F008          	movff	fsr2h,??_ISR+7
  2802  0009E8  CFF3 F009          	movff	prodl,??_ISR+8
  2803  0009EC  CFF4 F00A          	movff	prodh,??_ISR+9
  2804  0009F0  CFF6 F00B          	movff	tblptrl,??_ISR+10
  2805  0009F4  CFF7 F00C          	movff	tblptrh,??_ISR+11
  2806  0009F8  CFF8 F00D          	movff	tblptru,??_ISR+12
  2807  0009FC  CFF5 F00E          	movff	tablat,??_ISR+13
  2808                           
  2809                           ;exLCD.c: 138: timer1_isr();
  2810  000A00  EC4B  F005         	call	_timer1_isr	;wreg free
  2811  000A04  C00E  FFF5         	movff	??_ISR+13,tablat
  2812  000A08  C00D  FFF8         	movff	??_ISR+12,tblptru
  2813  000A0C  C00C  FFF7         	movff	??_ISR+11,tblptrh
  2814  000A10  C00B  FFF6         	movff	??_ISR+10,tblptrl
  2815  000A14  C00A  FFF4         	movff	??_ISR+9,prodh
  2816  000A18  C009  FFF3         	movff	??_ISR+8,prodl
  2817  000A1C  C008  FFDA         	movff	??_ISR+7,fsr2h
  2818  000A20  C007  FFD9         	movff	??_ISR+6,fsr2l
  2819  000A24  C006  FFE2         	movff	??_ISR+5,fsr1h
  2820  000A28  C005  FFE1         	movff	??_ISR+4,fsr1l
  2821  000A2C  C004  FFEA         	movff	??_ISR+3,fsr0h
  2822  000A30  C003  FFE9         	movff	??_ISR+2,fsr0l
  2823  000A34  C002  FFFB         	movff	??_ISR+1,pclatu
  2824  000A38  C001  FFFA         	movff	??_ISR,pclath
  2825  000A3C  9238               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2826  000A3E  0011               	retfie		f
  2827  000A40                     __end_of_ISR:
  2828                           	opt stack 0
  2829                           pclatu	equ	0xFFB
  2830                           pclath	equ	0xFFA
  2831                           tblptru	equ	0xFF8
  2832                           tblptrh	equ	0xFF7
  2833                           tblptrl	equ	0xFF6
  2834                           tablat	equ	0xFF5
  2835                           prodh	equ	0xFF4
  2836                           prodl	equ	0xFF3
  2837                           intcon	equ	0xFF2
  2838                           postinc0	equ	0xFEE
  2839                           fsr0h	equ	0xFEA
  2840                           fsr0l	equ	0xFE9
  2841                           postdec1	equ	0xFE5
  2842                           fsr1h	equ	0xFE2
  2843                           fsr1l	equ	0xFE1
  2844                           indf2	equ	0xFDF
  2845                           postinc2	equ	0xFDE
  2846                           postdec2	equ	0xFDD
  2847                           fsr2h	equ	0xFDA
  2848                           fsr2l	equ	0xFD9
  2849                           status	equ	0xFD8
  2850                           
  2851 ;; *************** function _timer1_isr *****************
  2852 ;; Defined at:
  2853 ;;		line 118 in file "exLCD.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;		None
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;		None
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  1    wreg      void 
  2860 ;; Registers used:
  2861 ;;		wreg, status,2, status,0
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2867 ;;      Params:         0       0       0       0       0       0       0
  2868 ;;      Locals:         0       0       0       0       0       0       0
  2869 ;;      Temps:          0       0       0       0       0       0       0
  2870 ;;      Totals:         0       0       0       0       0       0       0
  2871 ;;Total ram usage:        0 bytes
  2872 ;; Hardware stack levels used:    1
  2873 ;; This function calls:
  2874 ;;		Nothing
  2875 ;; This function is called by:
  2876 ;;		_ISR
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880                           	psect	text21
  2881  000A96                     __ptext21:
  2882                           	opt stack 0
  2883  000A96                     _timer1_isr:
  2884                           	opt stack 24
  2885                           
  2886                           ;exLCD.c: 122: seconds++;
  2887                           
  2888                           ;incstack = 0
  2889  000A96  4A34               	infsnz	_seconds,f,c	;volatile
  2890  000A98  2A35               	incf	_seconds+1,f,c	;volatile
  2891                           
  2892                           ;exLCD.c: 123: if(seconds==60){seconds=0;minutes++;};
  2893  000A9A  0E3C               	movlw	60
  2894  000A9C  1834               	xorwf	_seconds,w,c	;volatile
  2895  000A9E  1035               	iorwf	_seconds+1,w,c	;volatile
  2896  000AA0  A4D8               	btfss	status,2,c
  2897  000AA2  D006               	goto	i2l1296
  2898  000AA4  0E00               	movlw	0
  2899  000AA6  6E35               	movwf	_seconds+1,c	;volatile
  2900  000AA8  0E00               	movlw	0
  2901  000AAA  6E34               	movwf	_seconds,c	;volatile
  2902  000AAC  4A36               	infsnz	_minutes,f,c	;volatile
  2903  000AAE  2A37               	incf	_minutes+1,f,c	;volatile
  2904  000AB0                     i2l1296:
  2905                           
  2906                           ;exLCD.c: 124: if(minutes==60){minutes=0;hours++;}
  2907  000AB0  0E3C               	movlw	60
  2908  000AB2  1836               	xorwf	_minutes,w,c	;volatile
  2909  000AB4  1037               	iorwf	_minutes+1,w,c	;volatile
  2910  000AB6  A4D8               	btfss	status,2,c
  2911  000AB8  D006               	goto	i2l1302
  2912  000ABA  0E00               	movlw	0
  2913  000ABC  6E37               	movwf	_minutes+1,c	;volatile
  2914  000ABE  0E00               	movlw	0
  2915  000AC0  6E36               	movwf	_minutes,c	;volatile
  2916  000AC2  4A32               	infsnz	_hours,f,c	;volatile
  2917  000AC4  2A33               	incf	_hours+1,f,c	;volatile
  2918  000AC6                     i2l1302:
  2919                           
  2920                           ;exLCD.c: 125: if(hours==24){hours=0;}
  2921  000AC6  0E18               	movlw	24
  2922  000AC8  1832               	xorwf	_hours,w,c	;volatile
  2923  000ACA  1033               	iorwf	_hours+1,w,c	;volatile
  2924  000ACC  A4D8               	btfss	status,2,c
  2925  000ACE  D004               	goto	i2l259
  2926  000AD0  0E00               	movlw	0
  2927  000AD2  6E33               	movwf	_hours+1,c	;volatile
  2928  000AD4  0E00               	movlw	0
  2929  000AD6  6E32               	movwf	_hours,c	;volatile
  2930  000AD8                     i2l259:
  2931                           
  2932                           ;exLCD.c: 126: change = 1;
  2933  000AD8  0E00               	movlw	0
  2934  000ADA  6E31               	movwf	_change+1,c	;volatile
  2935  000ADC  0E01               	movlw	1
  2936  000ADE  6E30               	movwf	_change,c	;volatile
  2937                           
  2938                           ;exLCD.c: 129: TMR1H=0x80;
  2939  000AE0  0E80               	movlw	128
  2940  000AE2  6ECF               	movwf	4047,c	;volatile
  2941                           
  2942                           ;exLCD.c: 130: TMR1L=0;
  2943  000AE4  0E00               	movlw	0
  2944  000AE6  6ECE               	movwf	4046,c	;volatile
  2945                           
  2946                           ;exLCD.c: 131: PIR1bits.TMR1IF = 0;
  2947  000AE8  909E               	bcf	3998,0,c	;volatile
  2948  000AEA  0012               	return		;funcret
  2949  000AEC                     __end_of_timer1_isr:
  2950                           	opt stack 0
  2951                           pclatu	equ	0xFFB
  2952                           pclath	equ	0xFFA
  2953                           tblptru	equ	0xFF8
  2954                           tblptrh	equ	0xFF7
  2955                           tblptrl	equ	0xFF6
  2956                           tablat	equ	0xFF5
  2957                           prodh	equ	0xFF4
  2958                           prodl	equ	0xFF3
  2959                           intcon	equ	0xFF2
  2960                           postinc0	equ	0xFEE
  2961                           fsr0h	equ	0xFEA
  2962                           fsr0l	equ	0xFE9
  2963                           postdec1	equ	0xFE5
  2964                           fsr1h	equ	0xFE2
  2965                           fsr1l	equ	0xFE1
  2966                           indf2	equ	0xFDF
  2967                           postinc2	equ	0xFDE
  2968                           postdec2	equ	0xFDD
  2969                           fsr2h	equ	0xFDA
  2970                           fsr2l	equ	0xFD9
  2971                           status	equ	0xFD8
  2972                           pclatu	equ	0xFFB
  2973                           pclath	equ	0xFFA
  2974                           tblptru	equ	0xFF8
  2975                           tblptrh	equ	0xFF7
  2976                           tblptrl	equ	0xFF6
  2977                           tablat	equ	0xFF5
  2978                           prodh	equ	0xFF4
  2979                           prodl	equ	0xFF3
  2980                           intcon	equ	0xFF2
  2981                           postinc0	equ	0xFEE
  2982                           fsr0h	equ	0xFEA
  2983                           fsr0l	equ	0xFE9
  2984                           postdec1	equ	0xFE5
  2985                           fsr1h	equ	0xFE2
  2986                           fsr1l	equ	0xFE1
  2987                           indf2	equ	0xFDF
  2988                           postinc2	equ	0xFDE
  2989                           postdec2	equ	0xFDD
  2990                           fsr2h	equ	0xFDA
  2991                           fsr2l	equ	0xFD9
  2992                           status	equ	0xFD8
  2993                           
  2994                           	psect	rparam
  2995  0000                     pclatu	equ	0xFFB
  2996                           pclath	equ	0xFFA
  2997                           tblptru	equ	0xFF8
  2998                           tblptrh	equ	0xFF7
  2999                           tblptrl	equ	0xFF6
  3000                           tablat	equ	0xFF5
  3001                           prodh	equ	0xFF4
  3002                           prodl	equ	0xFF3
  3003                           intcon	equ	0xFF2
  3004                           postinc0	equ	0xFEE
  3005                           fsr0h	equ	0xFEA
  3006                           fsr0l	equ	0xFE9
  3007                           postdec1	equ	0xFE5
  3008                           fsr1h	equ	0xFE2
  3009                           fsr1l	equ	0xFE1
  3010                           indf2	equ	0xFDF
  3011                           postinc2	equ	0xFDE
  3012                           postdec2	equ	0xFDD
  3013                           fsr2h	equ	0xFDA
  3014                           fsr2l	equ	0xFD9
  3015                           status	equ	0xFD8
  3016                           
  3017                           	psect	temp
  3018  000038                     btemp:
  3019                           	opt stack 0
  3020  000038                     	ds	1
  3021  0000                     int$flags	set	btemp
  3022                           pclatu	equ	0xFFB
  3023                           pclath	equ	0xFFA
  3024                           tblptru	equ	0xFF8
  3025                           tblptrh	equ	0xFF7
  3026                           tblptrl	equ	0xFF6
  3027                           tablat	equ	0xFF5
  3028                           prodh	equ	0xFF4
  3029                           prodl	equ	0xFF3
  3030                           intcon	equ	0xFF2
  3031                           postinc0	equ	0xFEE
  3032                           fsr0h	equ	0xFEA
  3033                           fsr0l	equ	0xFE9
  3034                           postdec1	equ	0xFE5
  3035                           fsr1h	equ	0xFE2
  3036                           fsr1l	equ	0xFE1
  3037                           indf2	equ	0xFDF
  3038                           postinc2	equ	0xFDE
  3039                           postdec2	equ	0xFDD
  3040                           fsr2h	equ	0xFDA
  3041                           fsr2l	equ	0xFD9
  3042                           status	equ	0xFD8


Data Sizes:
    Strings     6
    Constant    10
    Data        4
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     47      55
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_8(CODE[3]), STR_7(CODE[4]), STR_5(CODE[3]), STR_4(CODE[4]), 
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 5
		 -> displayInterface@chrHours(COMRAM[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 5
		 -> displayInterface@chrHours(COMRAM[5]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_6(CODE[2]), STR_3(CODE[2]), 


Critical Paths under _main in COMRAM

    _main->_displayInterface
    _displayInterface->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _putsXLCD->_WriteDataXLCD
    _putrsXLCD->_WriteDataXLCD
    _LCD_init->_OpenXLCD
    _DelayXLCD->_Delay1KTCYx
    _DelayPORXLCD->_Delay1KTCYx
    _Delay1KTCYx->___lmul

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3587
                           _LCD_init
                   _displayInterface
                        _global_init
                        _timer1_init
 ---------------------------------------------------------------------------------
 (1) _timer1_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _global_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _displayInterface                                     7     7      0    2561
                                             40 COMRAM     7     7      0
                           _BusyXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
                          _putrsXLCD
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    17      6    1822
                                             26 COMRAM    14     8      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     287
                                             21 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     290
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _putsXLCD                                             2     0      2     267
                                             15 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _putrsXLCD                                            2     0      2     203
                                             15 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (3) _WriteDataXLCD                                        1     1      0      30
                                             14 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0    1026
                           _OpenXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0    1026
                                             34 COMRAM     1     1      0
                           _BusyXLCD
                      _DelayFor18TCY
                       _DelayPORXLCD
                          _DelayXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      30
                                             14 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _SetDDRamAddr                                         4     4      0      30
                                             14 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayXLCD                                            0     0      0     472
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         0     0      0     472
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay1KTCYx                                          8     4      4     472
                                             26 COMRAM     8     4      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     322
                                             14 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (4) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                 14    14      0       0
                                              0 COMRAM    14    14      0
                         _timer1_isr
 ---------------------------------------------------------------------------------
 (7) _timer1_isr                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_init
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
       _DelayFor18TCY
       _DelayPORXLCD
         _Delay1KTCYx
           ___lmul
       _DelayXLCD
         _Delay1KTCYx
           ___lmul
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
   _displayInterface
     _BusyXLCD
       _DelayFor18TCY
     _SetDDRamAddr
       _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
     _putrsXLCD
       _BusyXLCD
         _DelayFor18TCY
       _WriteDataXLCD
         _DelayFor18TCY
     _putsXLCD
       _BusyXLCD
         _DelayFor18TCY
       _WriteDataXLCD
         _DelayFor18TCY
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _global_init
   _timer1_init

 _ISR (ROOT)
   _timer1_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     2F      37       1       43.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      37      15        0.0%
DATA                 0      0      37       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Apr 17 16:14:52 2017

                        l9 0CC0                _SSPSTATbits 000FC7                         u55 0B54  
 __end_of_displayInterface 07B0                __CFG_BORV$3 000000               __CFG_CP0$OFF 000000  
             __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000  
                      l743 0B34                        l753 0C14               __CFG_CPB$OFF 000000  
             __CFG_CPD$OFF 000000                        _ISR 0008      __size_of_WriteCmdXLCD 003E  
             ?_global_init 0001               __CFG_LVP$OFF 000000                       ?_ISR 0001  
             __CFG_WDT$OFF 000000                       l1532 0A64                       l1528 0A50  
                     l1704 07FE                       l1538 0B90                       l1554 0B02  
                     l1714 0826                       l1810 075E                       l1660 09A4  
                     l1652 0984                       l1644 0964                       l1556 0B0A  
                     l1716 082A                       l1812 077C                       l1804 073E  
                     l1566 0B2A                       l1558 0B0E                       l1582 0C0A  
                     l1574 0BEA                       l1742 08CA                       l1734 0872  
                     l1814 0798                       l1664 09B4                       l1656 0994  
                     l1648 0974                       l1672 0D0C                       l1576 0BF2  
                     l1736 0878                       l1728 0856                       l1744 08D2  
                     l1816 07A4                       l1760 061A                       l1682 0D40  
                     l1578 0BF6                       l1746 08EA                       l1826 0D7C  
                     l1692 07BA                       l1780 06A0                       l1764 062A  
                     l1678 0D2A                       l1774 065A                       l1688 0D5C  
                     l1792 06DC                       l1776 0678                       l1768 063A  
                     l1698 07D4                       l1794 06FA                       l1786 06BC  
                     l1778 0694                       l1796 0716                       l1798 0722  
                     STR_1 060B                       STR_2 060C                       STR_3 060F  
                     STR_4 060B                       STR_5 060C                       STR_6 060F  
                     STR_7 060B                       STR_8 060C                       _main 0D6C  
    displayInterface@dummy 0029                       fsr0h 000FEA                       fsr1h 000FE2  
                     fsr2h 000FDA                       fsr0l 000FE9                       indf2 000FDF  
                     fsr1l 000FE1                       fsr2l 000FD9                       btemp 0038  
   __size_of_WriteDataXLCD 003E                       prodh 000FF4                       prodl 000FF3  
                     start 000E              __CFG_IESO$OFF 000000              __CFG_MCLRE$ON 000000  
             ___param_bank 000000                      ??_ISR 0001               _WriteCmdXLCD 0C5C  
              _Delay1KTCYx 0B90           __end_of_LCD_init 0DFC              ?_SetDDRamAddr 0001  
                    ?_main 0001                      _T1CON 000FCD            __end_of___lwdiv 0B3E  
          __end_of___lwmod 0C1E                      i2l259 0AD8                      _TMR1H 000FCF  
                    _TMR1L 000FCE                      _PORTD 000F83                      _TRISD 000F95  
            __CFG_PWRT$OFF 000000              __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000  
            __CFG_WRT2$OFF 000000        ___lmul@multiplicand 0013              __CFG_WRT3$OFF 000000  
           __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000  
           __CFG_EBTR2$OFF 000000             __CFG_EBTR3$OFF 000000              __CFG_WRTB$OFF 000000  
            __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000             __CFG_EBTRB$OFF 000000  
          __end_of_dpowers 060B                      _hours 0032                      pclath 000FFA  
                    tablat 000FF5                      status 000FD8            __end_of_sprintf 08F8  
          __initialization 0CD4               __end_of_main 0D92           __end_of_BusyXLCD 0CD4  
       __size_of_DelayXLCD 0016      __size_of_DelayPORXLCD 0016             __CFG_OSC$RCIO6 000000  
           ??_SetDDRamAddr 000F           __end_of_OpenXLCD 09C6                     ??_main 0030  
            __activetblptr 000002              _WriteDataXLCD 0C1E                     _ADCON1 000FC1  
                   i2l1302 0AC6                     i2l1296 0AB0                     _SSPBUF 000FC9  
             _DelayPORXLCD 0DC2             __CFG_XINST$OFF 000000                     ___lmul 0A40  
           __CFG_STVREN$ON 000000                     _change 0030               ?_timer1_init 0001  
                ??___lwdiv 0013                  ??___lwmod 001A             ?_WriteDataXLCD 0001  
             __pdataCOMRAM 0034               __mediumconst 0000                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8           __end_of_putsXLCD 0D6C  
     __size_of_global_init 0006                  ??_sprintf 0021          __end_of_DelayXLCD 0DC2  
               __accesstop 0080    __end_of__initialization 0CFC            __CFG_PBADEN$OFF 000000  
                ?_LCD_init 0001              ___rparam_used 000001             __pcstackCOMRAM 0001  
        ?_displayInterface 0001         ??_displayInterface 0029     __size_of_DelayFor18TCY 001A  
                ?_BusyXLCD 0001            WriteCmdXLCD@cmd 000F       __end_of_SetDDRamAddr 0B90  
               ??_LCD_init 0024                  ?_OpenXLCD 0001          WriteDataXLCD@data 000F  
                  ?___lmul 000F            ??_WriteDataXLCD 000F               ?_Delay1KTCYx 001B  
           ___lmul@product 0017                    _SSPCON1 000FC6                    _SSPCON2 000FC5  
                  _SSPSTAT 000FC7         __size_of_putrsXLCD 0034                 ??_BusyXLCD 000F  
               ??_OpenXLCD 0023                    __Hparam 0000                    __Lparam 0000  
 displayInterface@chrHours 002B              _DelayFor18TCY 0D92            __size_of___lmul 0056  
                ?_putsXLCD 0010                    ___lwdiv 0AEC                    ___lwmod 0BDC  
             __psmallconst 0600                    __pcinit 0CD4            putrsXLCD@buffer 0010  
                  __ramtop 0600       __size_of_timer1_init 0014                    __ptext0 0D6C  
                  __ptext1 0DD8                    __ptext2 0DFC                    __ptext3 0612  
                  __ptext4 07B0                    __ptext5 0BDC                    __ptext6 0AEC  
                  __ptext7 0D3E                    __ptext8 0D0A                    __ptext9 0C1E  
             __size_of_ISR 0A38                  _T1CONbits 000FCD                    _dpowers 0601  
                  _minutes 0036                    _seconds 0034                    _sprintf 07B0  
           __pintcode_body 09C6       end_of_initialization 0CFC              __Lmediumconst 0000  
                  int_func 09C6               Delay1KTCYx@n 001B             ?_DelayFor18TCY 0001  
                  postdec1 000FE5                    postdec2 000FDD                 _timer1_isr 0A96  
                  postinc0 000FEE                    postinc2 000FDE                 ??_putsXLCD 0012  
        __end_of_putrsXLCD 0D3E                  _TRISCbits 000F94                  _TRISDbits 000F95  
    __size_of_SetDDRamAddr 0052                  _DelayXLCD 0DAC          __size_of_LCD_init 0010  
           __end_of___lmul 0A96              __pidataCOMRAM 0E02               _SetDDRamAddr 0B3E  
     __size_of_Delay1KTCYx 004C         SetDDRamAddr@DDaddr 0012              ??_global_init 000F  
      start_initialization 0CD4                __end_of_ISR 0A40  __size_of_displayInterface 019E  
        __size_of_BusyXLCD 003A                 ?_DelayXLCD 0001            ??_DelayFor18TCY 000F  
        __size_of_OpenXLCD 00CE                   ??___lmul 0017                ?_timer1_isr 0001  
            ?_WriteCmdXLCD 0001           __CFG_LPT1OSC$OFF 000000                __pbssCOMRAM 0030  
      __end_of_global_init 0E02                sprintf@flag 0024                sprintf@prec 0025  
           putsXLCD@buffer 0010           ___lwdiv@dividend 000F          __CFG_CCP2MX$PORTC 000000  
                __pintcode 0008             ??_WriteCmdXLCD 000F                   ?___lwdiv 000F  
                 ?___lwmod 0016          __size_of_putsXLCD 002E      __end_of_WriteDataXLCD 0C5C  
              __smallconst 0600           ___lwdiv@quotient 0013                   ?_sprintf 001B  
      __size_of_timer1_isr 0056                   _LATDbits 000F8C                   _LCD_init 0DEC  
              ??_DelayXLCD 0023                   _PIE1bits 000F9D              ?_DelayPORXLCD 0001  
                 _PIR1bits 000F9E            OpenXLCD@lcdtype 0023                   _RCONbits 000FD0  
         __CFG_WDTPS$32768 000000              ??_timer1_init 000F                  _putrsXLCD 0D0A  
              _global_init 0DFC          ___lmul@multiplier 000F                  copy_data0 0CE8  
                 _BusyXLCD 0C9A           _displayInterface 0612             ??_DelayPORXLCD 0023  
                 _OpenXLCD 08F8                   __Hrparam 0000                   __Lrparam 0000  
       __CFG_BOREN$SBORDIS 000000           __size_of___lwdiv 0052           __size_of___lwmod 0042  
      __end_of_timer1_init 0DEC                 sprintf@val 0026                 ?_putrsXLCD 0010  
          ___lwdiv@divisor 0011            ___lwdiv@counter 0015                   __ptext10 0DEC  
                 __ptext11 08F8                   __ptext12 0C5C                   __ptext21 0A96  
                 __ptext13 0B3E                   __ptext14 0DAC                   __ptext15 0DC2  
                 __ptext16 0B90                   __ptext17 0A40                   __ptext18 0C9A  
                 __ptext19 0D92       __end_of_WriteCmdXLCD 0C9A           __size_of_sprintf 0148  
            __size_of_main 0026               ??_timer1_isr 0001                   int$flags 0038  
                 _putsXLCD 0D3E              ??_Delay1KTCYx 001F                 _INTCONbits 000FF2  
                 intlevel2 0000                  sprintf@ap 0022         __end_of_timer1_isr 0AEC  
                sprintf@sp 001B           ___lwmod@dividend 0016      __end_of_DelayFor18TCY 0DAC  
              _timer1_init 0DD8                   sprintf@c 0028                   sprintf@f 001D  
     __end_of_DelayPORXLCD 0DD8                ??_putrsXLCD 0012            ___lwmod@divisor 0018  
      __end_of_Delay1KTCYx 0BDC            ___lwmod@counter 001A                _SSPCON1bits 000FC6  
              _SSPCON2bits 000FC5  
